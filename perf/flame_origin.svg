<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1222.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1205" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1205" > </text>
<g id="frames">
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, long long&gt;::_S_make_elt&lt;long&gt; (14,000,000 samples, 0.02%)</title><rect x="783.9" y="357" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="786.89" y="367.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (419,250,000 samples, 0.60%)</title><rect x="508.4" y="453" width="7.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="511.37" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (14,500,000 samples, 0.02%)</title><rect x="470.3" y="725" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="473.29" y="735.5" ></text>
</g>
<g >
<title>do_futex (11,774,750,000 samples, 16.83%)</title><rect x="969.8" y="1077" width="198.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="972.76" y="1087.5" >do_futex</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (21,500,000 samples, 0.03%)</title><rect x="1185.1" y="1109" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.11" y="1119.5" ></text>
</g>
<g >
<title>path_init (59,000,000 samples, 0.08%)</title><rect x="22.6" y="981" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="25.64" y="991.5" ></text>
</g>
<g >
<title>std::__format::__formatter_fp&lt;char&gt;::format&lt;double, std::__format::_Sink_iter&lt;char&gt; &gt; (17,750,000 samples, 0.03%)</title><rect x="418.5" y="1125" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="421.52" y="1135.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (6,250,000 samples, 0.01%)</title><rect x="522.7" y="741" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="525.71" y="751.5" ></text>
</g>
<g >
<title>do_futex (360,000,000 samples, 0.51%)</title><rect x="34.4" y="1045" width="6.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="37.38" y="1055.5" ></text>
</g>
<g >
<title>do_futex (499,250,000 samples, 0.71%)</title><rect x="96.9" y="1061" width="8.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="99.88" y="1071.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (277,500,000 samples, 0.40%)</title><rect x="860.9" y="757" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="863.89" y="767.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (10,000,000 samples, 0.01%)</title><rect x="351.8" y="245" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="354.84" y="255.5" ></text>
</g>
<g >
<title>__memchr_avx2 (28,250,000 samples, 0.04%)</title><rect x="536.6" y="901" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="539.65" y="911.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (191,000,000 samples, 0.27%)</title><rect x="534.3" y="949" width="3.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="537.29" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (18,000,000 samples, 0.03%)</title><rect x="331.8" y="245" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="334.81" y="255.5" ></text>
</g>
<g >
<title>futex_wake (8,500,000 samples, 0.01%)</title><rect x="418.9" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="421.90" y="1039.5" ></text>
</g>
<g >
<title>ankerl::nanobench::Config::Config (7,000,000 samples, 0.01%)</title><rect x="384.3" y="1125" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="387.31" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (689,750,000 samples, 0.99%)</title><rect x="791.5" y="325" width="11.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="794.53" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (32,250,000 samples, 0.05%)</title><rect x="728.2" y="325" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="731.19" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (19,000,000 samples, 0.03%)</title><rect x="547.6" y="965" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="550.64" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,500,000 samples, 0.02%)</title><rect x="492.7" y="453" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="495.74" y="463.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (25,750,000 samples, 0.04%)</title><rect x="471.7" y="677" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="474.73" y="687.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (10,000,000 samples, 0.01%)</title><rect x="372.6" y="677" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="375.60" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (48,250,000 samples, 0.07%)</title><rect x="725.6" y="293" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="728.60" y="303.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;unsigned long long&gt; (7,000,000 samples, 0.01%)</title><rect x="374.4" y="645" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="377.35" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23,000,000 samples, 0.03%)</title><rect x="409.4" y="1077" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="412.40" y="1087.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;void  (157,000,000 samples, 0.22%)</title><rect x="873.8" y="693" width="2.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="876.82" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (62,750,000 samples, 0.09%)</title><rect x="683.9" y="645" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="686.89" y="655.5" ></text>
</g>
<g >
<title>minilog::details::log_level_name[abi:cxx11] (32,750,000 samples, 0.05%)</title><rect x="310.3" y="757" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="313.33" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (68,500,000 samples, 0.10%)</title><rect x="759.2" y="213" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="762.18" y="223.5" ></text>
</g>
<g >
<title>std::to_chars (11,000,000 samples, 0.02%)</title><rect x="363.9" y="581" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="366.95" y="591.5" ></text>
</g>
<g >
<title>std::operator- (33,750,000 samples, 0.05%)</title><rect x="541.8" y="917" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="544.80" y="927.5" ></text>
</g>
<g >
<title>try_to_wake_up (6,500,000 samples, 0.01%)</title><rect x="391.5" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="394.49" y="1007.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::start (6,500,000 samples, 0.01%)</title><rect x="445.8" y="1125" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="448.80" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (3,704,750,000 samples, 5.30%)</title><rect x="462.9" y="885" width="62.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="465.89" y="895.5" >std::_..</text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (57,500,000 samples, 0.08%)</title><rect x="796.9" y="197" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="799.86" y="207.5" ></text>
</g>
<g >
<title>__libc_start_call_main (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1141" width="180.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="450.48" y="1151.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (7,500,000 samples, 0.01%)</title><rect x="322.0" y="581" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="324.98" y="591.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;unsigned int&gt; (7,000,000 samples, 0.01%)</title><rect x="652.1" y="805" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="655.10" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (11,583,250,000 samples, 16.56%)</title><rect x="973.0" y="1029" width="195.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="975.99" y="1039.5" >try_to_wake_up</text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (21,250,000 samples, 0.03%)</title><rect x="511.2" y="373" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.16" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (26,000,000 samples, 0.04%)</title><rect x="843.2" y="837" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="846.25" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (179,000,000 samples, 0.26%)</title><rect x="487.1" y="389" width="3.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="490.06" y="399.5" ></text>
</g>
<g >
<title>std::__format::__int_from_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="346.4" y="69" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="349.38" y="79.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::to_local&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (260,000,000 samples, 0.37%)</title><rect x="686.1" y="661" width="4.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="689.10" y="671.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (42,750,000 samples, 0.06%)</title><rect x="650.8" y="821" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="653.75" y="831.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (6,500,000 samples, 0.01%)</title><rect x="359.7" y="293" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="362.67" y="303.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;3600l, 1l&gt;, void&gt; (11,750,000 samples, 0.02%)</title><rect x="351.2" y="213" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="354.16" y="223.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (31,500,000 samples, 0.05%)</title><rect x="662.6" y="805" width="0.6" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="665.62" y="815.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (6,750,000 samples, 0.01%)</title><rect x="514.1" y="277" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="517.10" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (41,500,000 samples, 0.06%)</title><rect x="810.7" y="389" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="813.73" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (6,500,000 samples, 0.01%)</title><rect x="77.0" y="1061" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="79.96" y="1071.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (296,750,000 samples, 0.42%)</title><rect x="853.9" y="821" width="5.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="856.91" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (15,250,000 samples, 0.02%)</title><rect x="473.2" y="661" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="476.21" y="671.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::basic_format_context (6,750,000 samples, 0.01%)</title><rect x="803.3" y="325" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="806.25" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="446.66" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (29,000,000 samples, 0.04%)</title><rect x="376.1" y="565" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="379.09" y="575.5" ></text>
</g>
<g >
<title>filename_lookup (378,500,000 samples, 0.54%)</title><rect x="18.9" y="1013" width="6.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.93" y="1023.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (7,000,000 samples, 0.01%)</title><rect x="732.0" y="293" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="734.98" y="303.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; &gt;::time_since_epoch (6,250,000 samples, 0.01%)</title><rect x="717.9" y="341" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="720.94" y="351.5" ></text>
</g>
<g >
<title>std::to_chars (64,500,000 samples, 0.09%)</title><rect x="765.6" y="197" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="768.60" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (9,500,000 samples, 0.01%)</title><rect x="863.0" y="661" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="866.01" y="671.5" ></text>
</g>
<g >
<title>minilog::log_info&lt;unsigned int&amp;&gt; (13,597,500,000 samples, 19.44%)</title><rect x="641.2" y="901" width="229.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="644.21" y="911.5" >minilog::log_info&lt;unsigned int&amp;&gt;</text>
</g>
<g >
<title>do_syscall_64 (1,778,750,000 samples, 2.54%)</title><rect x="128.9" y="1093" width="30.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="131.88" y="1103.5" >do..</text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (326,000,000 samples, 0.47%)</title><rect x="485.4" y="421" width="5.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="488.36" y="431.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (8,750,000 samples, 0.01%)</title><rect x="536.0" y="869" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="539.02" y="879.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (8,000,000 samples, 0.01%)</title><rect x="469.8" y="693" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="472.81" y="703.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (6,250,000 samples, 0.01%)</title><rect x="319.5" y="677" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="322.52" y="687.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1093" width="326.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="636.43" y="1103.5" >std::thread::_Invoker&lt;std::tuple&lt;std::functi..</text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15,000,000 samples, 0.02%)</title><rect x="324.4" y="533" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="327.44" y="543.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (11,000,000 samples, 0.02%)</title><rect x="417.4" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="420.45" y="1119.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::rend (10,250,000 samples, 0.01%)</title><rect x="502.9" y="405" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="505.94" y="415.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (29,250,000 samples, 0.04%)</title><rect x="471.7" y="693" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="474.70" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (14,500,000 samples, 0.02%)</title><rect x="428.3" y="1077" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="431.29" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (14,500,000 samples, 0.02%)</title><rect x="486.7" y="405" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="489.75" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (23,000,000 samples, 0.03%)</title><rect x="62.7" y="1109" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="65.70" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (72,250,000 samples, 0.10%)</title><rect x="346.2" y="117" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="349.20" y="127.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;unsigned int&gt; (18,500,000 samples, 0.03%)</title><rect x="651.9" y="837" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="654.90" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (129,750,000 samples, 0.19%)</title><rect x="512.1" y="357" width="2.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="515.10" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (42,250,000 samples, 0.06%)</title><rect x="1172.4" y="1141" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1175.45" y="1151.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (18,000,000 samples, 0.03%)</title><rect x="340.1" y="213" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="343.07" y="223.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (9,000,000 samples, 0.01%)</title><rect x="512.7" y="261" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="515.70" y="271.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (109,000,000 samples, 0.16%)</title><rect x="78.0" y="1109" width="1.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="80.98" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (7,250,000 samples, 0.01%)</title><rect x="765.3" y="149" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="768.26" y="159.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (27,250,000 samples, 0.04%)</title><rect x="325.3" y="517" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="328.33" y="527.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;int, std::__format::_Sink_iter&lt;char&gt; &gt; (78,750,000 samples, 0.11%)</title><rect x="488.6" y="309" width="1.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="491.65" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,219,750,000 samples, 6.03%)</title><rect x="308.5" y="997" width="71.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="311.52" y="1007.5" >std::_Fu..</text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (6,250,000 samples, 0.01%)</title><rect x="765.3" y="133" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="768.27" y="143.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (33,000,000 samples, 0.05%)</title><rect x="506.8" y="469" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="509.76" y="479.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (21,500,000 samples, 0.03%)</title><rect x="487.9" y="277" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="490.89" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (7,000,000 samples, 0.01%)</title><rect x="448.7" y="1013" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="451.73" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (90,500,000 samples, 0.13%)</title><rect x="862.3" y="693" width="1.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="865.34" y="703.5" ></text>
</g>
<g >
<title>std::formatter&lt;char const*, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (42,750,000 samples, 0.06%)</title><rect x="522.5" y="805" width="0.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="525.50" y="815.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;60l, 1l&gt; &gt; (17,000,000 samples, 0.02%)</title><rect x="351.4" y="229" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="354.40" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (8,750,000 samples, 0.01%)</title><rect x="412.6" y="1125" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="415.56" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,500,000 samples, 0.01%)</title><rect x="713.2" y="357" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="716.25" y="367.5" ></text>
</g>
<g >
<title>std::__format::__write_padded&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (10,750,000 samples, 0.02%)</title><rect x="765.3" y="165" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="768.25" y="175.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,132,750,000 samples, 8.77%)</title><rect x="708.6" y="501" width="103.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="711.64" y="511.5" >std::__forma..</text>
</g>
<g >
<title>wake_up_q (9,250,000 samples, 0.01%)</title><rect x="418.7" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="421.66" y="1023.5" ></text>
</g>
<g >
<title>std::to_chars (17,500,000 samples, 0.03%)</title><rect x="347.1" y="101" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="350.12" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (9,750,000 samples, 0.01%)</title><rect x="1184.5" y="1109" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1187.48" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (29,750,000 samples, 0.04%)</title><rect x="494.1" y="437" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="497.09" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;test (4,112,500,000 samples, 5.88%)</title><rect x="309.1" y="917" width="69.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="312.06" y="927.5" >std::__..</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_S&lt;std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (415,750,000 samples, 0.59%)</title><rect x="342.2" y="277" width="7.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="345.17" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::__normal_iterator (9,250,000 samples, 0.01%)</title><rect x="726.8" y="293" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="729.78" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7,500,000 samples, 0.01%)</title><rect x="417.2" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="420.20" y="1071.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (56,750,000 samples, 0.08%)</title><rect x="802.1" y="309" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="805.08" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (61,500,000 samples, 0.09%)</title><rect x="648.6" y="853" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="651.58" y="863.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (10,086,500,000 samples, 14.42%)</title><rect x="662.0" y="821" width="170.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="665.00" y="831.5" >std::__format::__do_vf..</text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (1,886,250,000 samples, 2.70%)</title><rect x="329.4" y="437" width="31.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="332.40" y="447.5" >st..</text>
</g>
<g >
<title>std::locale::locale (27,750,000 samples, 0.04%)</title><rect x="85.4" y="1109" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="88.38" y="1119.5" ></text>
</g>
<g >
<title>schedule (101,750,000 samples, 0.15%)</title><rect x="137.0" y="1013" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="140.02" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10,000,000 samples, 0.01%)</title><rect x="427.5" y="1093" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="430.49" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (3,650,250,000 samples, 5.22%)</title><rect x="463.5" y="869" width="61.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="466.50" y="879.5" >std::_..</text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (74,000,000 samples, 0.11%)</title><rect x="634.5" y="917" width="1.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="637.45" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (8,250,000 samples, 0.01%)</title><rect x="345.3" y="101" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="348.30" y="111.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (1,838,500,000 samples, 2.63%)</title><rect x="329.9" y="421" width="31.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="332.93" y="431.5" >st..</text>
</g>
<g >
<title>std::to_chars (29,250,000 samples, 0.04%)</title><rect x="738.6" y="197" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="741.65" y="207.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (831,250,000 samples, 1.19%)</title><rect x="727.8" y="341" width="14.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="730.78" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (43,000,000 samples, 0.06%)</title><rect x="72.3" y="1077" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="75.27" y="1087.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;unsigned int&gt; (10,250,000 samples, 0.01%)</title><rect x="652.0" y="821" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="655.04" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,000,000 samples, 0.01%)</title><rect x="479.7" y="469" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="482.67" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (17,250,000 samples, 0.02%)</title><rect x="313.3" y="709" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="316.30" y="719.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (10,000,000 samples, 0.01%)</title><rect x="523.1" y="789" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="526.05" y="799.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (8,500,000 samples, 0.01%)</title><rect x="767.9" y="309" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="770.91" y="319.5" ></text>
</g>
<g >
<title>std::locale::~locale (7,750,000 samples, 0.01%)</title><rect x="515.5" y="469" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="518.48" y="479.5" ></text>
</g>
<g >
<title>ankerl::nanobench::Bench::run&lt;DOCTEST_ANON_FUNC_2 (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1061" width="180.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="450.48" y="1071.5" >ankerl::nanobench::Benc..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (10,750,000 samples, 0.02%)</title><rect x="778.2" y="293" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="781.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,750,000 samples, 0.02%)</title><rect x="656.7" y="805" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="659.66" y="815.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (10,000,000 samples, 0.01%)</title><rect x="158.7" y="1045" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="161.71" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,500,000 samples, 0.02%)</title><rect x="687.1" y="629" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="690.12" y="639.5" ></text>
</g>
<g >
<title>wake_up_q (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="394.49" y="1023.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (8,000,000 samples, 0.01%)</title><rect x="863.2" y="661" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="866.17" y="671.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (6,500,000 samples, 0.01%)</title><rect x="832.4" y="805" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="835.37" y="815.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (17,000,000 samples, 0.02%)</title><rect x="377.3" y="725" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="380.28" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,750,000 samples, 0.01%)</title><rect x="658.0" y="789" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="661.00" y="799.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::formatter (13,000,000 samples, 0.02%)</title><rect x="522.1" y="789" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="525.12" y="799.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_F&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,716,750,000 samples, 2.45%)</title><rect x="713.4" y="389" width="29.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="716.39" y="399.5" >st..</text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (17,500,000 samples, 0.03%)</title><rect x="633.4" y="917" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="636.43" y="927.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;3600000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;3600l, 1l&gt; &gt; (29,000,000 samples, 0.04%)</title><rect x="779.0" y="277" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="781.99" y="287.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::__formatter_chrono (8,000,000 samples, 0.01%)</title><rect x="522.2" y="757" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="525.20" y="767.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,218,000,000 samples, 3.17%)</title><rect x="324.7" y="581" width="37.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="327.70" y="591.5" >std..</text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (426,000,000 samples, 0.61%)</title><rect x="732.4" y="309" width="7.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="735.40" y="319.5" ></text>
</g>
<g >
<title>std::mutex::lock (384,750,000 samples, 0.55%)</title><rect x="887.3" y="869" width="6.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="890.32" y="879.5" ></text>
</g>
<g >
<title>__get_user_8 (107,500,000 samples, 0.15%)</title><rect x="554.6" y="853" width="1.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="557.63" y="863.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::year_month_day (21,250,000 samples, 0.03%)</title><rect x="481.6" y="453" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="484.60" y="463.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_R_T&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (3,728,500,000 samples, 5.33%)</title><rect x="742.4" y="389" width="62.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="745.35" y="399.5" >std::_..</text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (15,750,000 samples, 0.02%)</title><rect x="350.6" y="229" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="353.57" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (9,250,000 samples, 0.01%)</title><rect x="339.6" y="69" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="342.63" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,750,000 samples, 0.03%)</title><rect x="369.9" y="741" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="372.93" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12,750,000 samples, 0.02%)</title><rect x="1182.7" y="1093" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1185.74" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,064,250,000 samples, 8.67%)</title><rect x="709.6" y="453" width="102.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="712.58" y="463.5" >std::__forma..</text>
</g>
<g >
<title>do_syscall_64 (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="442.01" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (35,750,000 samples, 0.05%)</title><rect x="379.7" y="1013" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="382.71" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="394.49" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (27,250,000 samples, 0.04%)</title><rect x="498.8" y="261" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="501.81" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (73,000,000 samples, 0.10%)</title><rect x="788.5" y="309" width="1.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="791.47" y="319.5" ></text>
</g>
<g >
<title>do_futex (4,053,750,000 samples, 5.80%)</title><rect x="558.9" y="885" width="68.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="561.93" y="895.5" >do_futex</text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (66,000,000 samples, 0.09%)</title><rect x="317.7" y="661" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="320.69" y="671.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="323.5" y="533" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="326.49" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (4,284,250,000 samples, 6.12%)</title><rect x="308.2" y="1045" width="72.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="311.19" y="1055.5" >std::__i..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (27,000,000 samples, 0.04%)</title><rect x="780.0" y="309" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="782.98" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (9,750,000 samples, 0.01%)</title><rect x="462.7" y="869" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="465.69" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10,250,000 samples, 0.01%)</title><rect x="647.4" y="837" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="650.42" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,500,000 samples, 0.02%)</title><rect x="835.4" y="853" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="838.38" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (24,500,000 samples, 0.04%)</title><rect x="647.6" y="837" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="650.61" y="847.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (27,750,000 samples, 0.04%)</title><rect x="500.2" y="277" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="503.22" y="287.5" ></text>
</g>
<g >
<title>getname_flags (8,250,000 samples, 0.01%)</title><rect x="25.3" y="1013" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="28.31" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (13,500,000 samples, 0.02%)</title><rect x="417.1" y="1125" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="420.12" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (33,500,000 samples, 0.05%)</title><rect x="370.5" y="693" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="373.47" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (99,750,000 samples, 0.14%)</title><rect x="25.7" y="997" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="28.68" y="1007.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (11,250,000 samples, 0.02%)</title><rect x="556.8" y="949" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="559.79" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,500,000 samples, 0.01%)</title><rect x="87.6" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="90.62" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::numpunct&lt;char&gt;::decimal_point (16,500,000 samples, 0.02%)</title><rect x="492.9" y="469" width="0.3" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="495.92" y="479.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (10,250,000 samples, 0.01%)</title><rect x="329.2" y="437" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="332.21" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (10,250,000 samples, 0.01%)</title><rect x="489.7" y="245" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="492.72" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="393.75" y="1087.5" ></text>
</g>
<g >
<title>ankerl::nanobench::BigO::mapRangeMeasure&lt;ankerl::nanobench::Bench::complexityBigO (6,000,000 samples, 0.01%)</title><rect x="384.2" y="1125" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="387.19" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (63,250,000 samples, 0.09%)</title><rect x="725.6" y="309" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="728.57" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (38,500,000 samples, 0.06%)</title><rect x="354.2" y="229" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="357.23" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27,250,000 samples, 0.04%)</title><rect x="855.6" y="757" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="858.60" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (20,500,000 samples, 0.03%)</title><rect x="338.3" y="85" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="341.30" y="95.5" ></text>
</g>
<g >
<title>step_into (6,500,000 samples, 0.01%)</title><rect x="48.0" y="965" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="50.99" y="975.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (39,500,000 samples, 0.06%)</title><rect x="471.6" y="709" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="474.56" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (262,000,000 samples, 0.37%)</title><rect x="872.7" y="869" width="4.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="875.70" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (930,750,000 samples, 1.33%)</title><rect x="15.5" y="1077" width="15.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.50" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,212,500,000 samples, 3.16%)</title><rect x="324.8" y="549" width="37.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="327.76" y="559.5" >std..</text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (7,750,000 samples, 0.01%)</title><rect x="335.9" y="245" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="338.88" y="255.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::XmlReporter::test_run_end (6,250,000 samples, 0.01%)</title><rect x="391.3" y="1125" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="394.32" y="1135.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (47,500,000 samples, 0.07%)</title><rect x="84.6" y="1109" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="87.58" y="1119.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (17,250,000 samples, 0.02%)</title><rect x="358.5" y="213" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="361.53" y="223.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="717.1" y="309" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="720.05" y="319.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;char, long long, unsigned int&gt; (46,750,000 samples, 0.07%)</title><rect x="502.7" y="437" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="505.72" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (721,750,000 samples, 1.03%)</title><rect x="146.7" y="1077" width="12.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="149.71" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,250,000 samples, 0.01%)</title><rect x="743.1" y="373" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="746.12" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (17,250,000 samples, 0.02%)</title><rect x="881.7" y="853" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="884.74" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (16,250,000 samples, 0.02%)</title><rect x="65.3" y="1109" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="68.33" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (93,250,000 samples, 0.13%)</title><rect x="474.8" y="645" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="477.79" y="655.5" ></text>
</g>
<g >
<title>futex_wake (33,250,000 samples, 0.05%)</title><rect x="307.0" y="1045" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="309.99" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="393.35" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (30,250,000 samples, 0.04%)</title><rect x="480.3" y="469" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="483.28" y="479.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_dd_zero_fill&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (44,750,000 samples, 0.06%)</title><rect x="342.4" y="261" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="345.41" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (6,750,000 samples, 0.01%)</title><rect x="308.6" y="981" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="311.60" y="991.5" ></text>
</g>
<g >
<title>operator new (21,500,000 samples, 0.03%)</title><rect x="968.4" y="1141" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="971.36" y="1151.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_days&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (63,750,000 samples, 0.09%)</title><rect x="716.8" y="357" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="719.78" y="367.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (7,500,000 samples, 0.01%)</title><rect x="680.8" y="661" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="683.80" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,000,000 samples, 0.01%)</title><rect x="723.5" y="325" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="726.46" y="335.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (12,500,000 samples, 0.02%)</title><rect x="385.2" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="388.17" y="1119.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (6,750,000 samples, 0.01%)</title><rect x="635.8" y="917" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="638.76" y="927.5" ></text>
</g>
<g >
<title>[unknown] (6,250,000 samples, 0.01%)</title><rect x="549.2" y="965" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.19" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,000,000 samples, 0.01%)</title><rect x="54.5" y="1061" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="57.49" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,250,000 samples, 0.01%)</title><rect x="689.7" y="581" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="692.67" y="591.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (5,773,750,000 samples, 8.25%)</title><rect x="710.4" y="405" width="97.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="713.37" y="415.5" >std::__form..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (9,500,000 samples, 0.01%)</title><rect x="648.9" y="805" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="651.93" y="815.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (32,000,000 samples, 0.05%)</title><rect x="322.4" y="565" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="325.43" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,250,000 samples, 0.01%)</title><rect x="75.0" y="1093" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="78.00" y="1103.5" ></text>
</g>
<g >
<title>std::__future_base::_S_allocate_result&lt;void, int&gt; (25,750,000 samples, 0.04%)</title><rect x="544.0" y="741" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="546.96" y="751.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (169,000,000 samples, 0.24%)</title><rect x="487.2" y="373" width="2.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="490.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (99,750,000 samples, 0.14%)</title><rect x="646.9" y="853" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="649.90" y="863.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (405,000,000 samples, 0.58%)</title><rect x="550.0" y="949" width="6.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="552.96" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (20,250,000 samples, 0.03%)</title><rect x="716.3" y="341" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="719.30" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (20,750,000 samples, 0.03%)</title><rect x="439.8" y="997" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="442.81" y="1007.5" ></text>
</g>
<g >
<title>touch_atime (48,500,000 samples, 0.07%)</title><rect x="43.2" y="1029" width="0.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="46.23" y="1039.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (10,250,000 samples, 0.01%)</title><rect x="344.3" y="213" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="347.26" y="223.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (3,603,500,000 samples, 5.15%)</title><rect x="464.3" y="853" width="60.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="467.29" y="863.5" >std::v..</text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (10,750,000 samples, 0.02%)</title><rect x="782.4" y="341" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="785.40" y="351.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rend (13,250,000 samples, 0.02%)</title><rect x="698.1" y="533" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="701.13" y="543.5" ></text>
</g>
<g >
<title>futex_wake (7,500,000 samples, 0.01%)</title><rect x="417.2" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="420.20" y="1039.5" ></text>
</g>
<g >
<title>doctest::Context::parseArgs (42,250,000 samples, 0.06%)</title><rect x="392.5" y="1125" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="395.53" y="1135.5" ></text>
</g>
<g >
<title>__unqueue_futex (17,500,000 samples, 0.03%)</title><rect x="165.1" y="1013" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="168.12" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14,750,000 samples, 0.02%)</title><rect x="845.5" y="821" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="848.53" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,226,750,000 samples, 6.04%)</title><rect x="308.4" y="1013" width="71.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="311.41" y="1023.5" >std::fun..</text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (9,750,000 samples, 0.01%)</title><rect x="824.6" y="629" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="827.65" y="639.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (12,000,000 samples, 0.02%)</title><rect x="675.3" y="757" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="678.30" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_futex (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1061" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="443.52" y="1071.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;char&gt; (12,500,000 samples, 0.02%)</title><rect x="499.4" y="309" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="502.36" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (11,250,000 samples, 0.02%)</title><rect x="360.5" y="293" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="363.53" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (266,250,000 samples, 0.38%)</title><rect x="872.6" y="885" width="4.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="875.63" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::operator+= (10,250,000 samples, 0.01%)</title><rect x="667.9" y="741" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="670.89" y="751.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (13,250,000 samples, 0.02%)</title><rect x="880.1" y="773" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="883.08" y="783.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::JUnitReporter::test_run_end (19,750,000 samples, 0.03%)</title><rect x="389.8" y="1125" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="392.84" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (6,331,750,000 samples, 9.05%)</title><rect x="706.4" y="533" width="106.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="709.41" y="543.5" >std::__format..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (15,250,000 samples, 0.02%)</title><rect x="783.2" y="357" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="786.17" y="367.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (49,250,000 samples, 0.07%)</title><rect x="356.6" y="133" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="359.61" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12,250,000 samples, 0.02%)</title><rect x="1180.1" y="1093" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1183.09" y="1103.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (16,500,000 samples, 0.02%)</title><rect x="726.7" y="309" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="729.66" y="319.5" ></text>
</g>
<g >
<title>do_futex (21,500,000 samples, 0.03%)</title><rect x="439.8" y="1045" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="442.80" y="1055.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (353,250,000 samples, 0.50%)</title><rect x="795.5" y="261" width="5.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="798.47" y="271.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt; (8,750,000 samples, 0.01%)</title><rect x="777.9" y="277" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="780.87" y="287.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (9,500,000 samples, 0.01%)</title><rect x="832.3" y="821" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="835.33" y="831.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::rend (14,000,000 samples, 0.02%)</title><rect x="313.1" y="709" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="316.07" y="719.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (6,750,000 samples, 0.01%)</title><rect x="350.2" y="229" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="353.22" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr (14,250,000 samples, 0.02%)</title><rect x="546.8" y="949" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="549.76" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (9,500,000 samples, 0.01%)</title><rect x="651.0" y="805" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="653.95" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="442.01" y="1071.5" ></text>
</g>
<g >
<title>operator new (20,250,000 samples, 0.03%)</title><rect x="847.8" y="741" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="850.82" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (6,000,000 samples, 0.01%)</title><rect x="356.9" y="53" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="359.95" y="63.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (6,500,000 samples, 0.01%)</title><rect x="371.8" y="725" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.82" y="735.5" ></text>
</g>
<g >
<title>__memchr_avx2 (9,000,000 samples, 0.01%)</title><rect x="514.7" y="389" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="517.74" y="399.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (26,750,000 samples, 0.04%)</title><rect x="339.1" y="85" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="342.12" y="95.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (25,250,000 samples, 0.04%)</title><rect x="747.2" y="373" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="750.18" y="383.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (22,500,000 samples, 0.03%)</title><rect x="439.8" y="1109" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="442.78" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,000,000 samples, 0.02%)</title><rect x="417.4" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="420.45" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (44,000,000 samples, 0.06%)</title><rect x="452.5" y="933" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="455.53" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12,000,000 samples, 0.02%)</title><rect x="835.2" y="853" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="838.18" y="863.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (60,250,000 samples, 0.09%)</title><rect x="327.9" y="437" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="330.94" y="447.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::formatter (17,250,000 samples, 0.02%)</title><rect x="808.0" y="421" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="811.03" y="431.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_type (8,250,000 samples, 0.01%)</title><rect x="757.8" y="261" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="760.80" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (12,250,000 samples, 0.02%)</title><rect x="890.2" y="709" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="893.18" y="719.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::begin (6,250,000 samples, 0.01%)</title><rect x="455.6" y="885" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="458.60" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="421.66" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,250,000 samples, 0.01%)</title><rect x="83.7" y="1061" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="86.74" y="1071.5" ></text>
</g>
<g >
<title>__memchr_avx2 (7,750,000 samples, 0.01%)</title><rect x="519.3" y="597" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="522.33" y="607.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (7,500,000 samples, 0.01%)</title><rect x="765.1" y="165" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="768.13" y="175.5" ></text>
</g>
<g >
<title>__memchr_avx2 (18,500,000 samples, 0.03%)</title><rect x="1169.0" y="1125" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1172.03" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7,250,000 samples, 0.01%)</title><rect x="312.3" y="709" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="315.30" y="719.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_locale&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (21,000,000 samples, 0.03%)</title><rect x="748.1" y="357" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="751.08" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (12,250,000 samples, 0.02%)</title><rect x="817.3" y="629" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="820.29" y="639.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_R_T&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,088,750,000 samples, 1.56%)</title><rect x="340.9" y="293" width="18.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="343.86" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,000,000 samples, 0.01%)</title><rect x="419.2" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="422.15" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_ChronoSpec&lt;char&gt;::_ChronoSpec (10,250,000 samples, 0.01%)</title><rect x="818.3" y="645" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="821.28" y="655.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;test (88,500,000 samples, 0.13%)</title><rect x="878.9" y="805" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="881.88" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (38,500,000 samples, 0.06%)</title><rect x="457.5" y="869" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="460.48" y="879.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (31,500,000 samples, 0.05%)</title><rect x="33.8" y="1045" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="36.79" y="1055.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (12,750,000 samples, 0.02%)</title><rect x="373.0" y="677" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="375.95" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11,250,000 samples, 0.02%)</title><rect x="529.0" y="949" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="531.96" y="959.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::rbegin (7,750,000 samples, 0.01%)</title><rect x="770.9" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="773.90" y="319.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (10,250,000 samples, 0.01%)</title><rect x="381.4" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="384.44" y="1119.5" ></text>
</g>
<g >
<title>set_root (42,500,000 samples, 0.06%)</title><rect x="22.9" y="949" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="25.92" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,750,000 samples, 0.02%)</title><rect x="334.6" y="245" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="337.61" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (102,250,000 samples, 0.15%)</title><rect x="644.9" y="837" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="647.87" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (256,250,000 samples, 0.37%)</title><rect x="497.1" y="389" width="4.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="500.09" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12,500,000 samples, 0.02%)</title><rect x="821.6" y="629" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="824.58" y="639.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop@GLIBC_2.2.5 (15,500,000 samples, 0.02%)</title><rect x="383.3" y="1125" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="386.27" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (37,500,000 samples, 0.05%)</title><rect x="492.0" y="469" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="494.99" y="479.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (52,500,000 samples, 0.08%)</title><rect x="796.9" y="181" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="799.92" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (80,000,000 samples, 0.11%)</title><rect x="29.8" y="1061" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="32.78" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (15,000,000 samples, 0.02%)</title><rect x="681.5" y="661" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="684.46" y="671.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (6,750,000 samples, 0.01%)</title><rect x="355.2" y="229" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="358.17" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (27,000,000 samples, 0.04%)</title><rect x="716.2" y="357" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="719.21" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (56,000,000 samples, 0.08%)</title><rect x="788.5" y="293" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="791.49" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (651,500,000 samples, 0.93%)</title><rect x="42.4" y="1061" width="10.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="45.36" y="1071.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::_Result_base (7,750,000 samples, 0.01%)</title><rect x="544.0" y="725" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="546.98" y="735.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,286,250,000 samples, 3.27%)</title><rect x="478.4" y="517" width="38.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="481.42" y="527.5" >std..</text>
</g>
<g >
<title>__x64_sys_futex (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="391.85" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;long, std::ratio&lt;60l, 1l&gt; &gt; (9,500,000 samples, 0.01%)</title><rect x="776.0" y="293" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="779.02" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,000,000 samples, 0.01%)</title><rect x="712.4" y="373" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="715.43" y="383.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (981,250,000 samples, 1.40%)</title><rect x="14.7" y="1109" width="16.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="17.65" y="1119.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (9,500,000 samples, 0.01%)</title><rect x="52.3" y="981" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="55.35" y="991.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (9,250,000 samples, 0.01%)</title><rect x="313.6" y="709" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="316.60" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (27,750,000 samples, 0.04%)</title><rect x="881.2" y="757" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="884.24" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (23,500,000 samples, 0.03%)</title><rect x="345.2" y="117" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="348.19" y="127.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_character&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (24,750,000 samples, 0.04%)</title><rect x="345.7" y="101" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="348.66" y="111.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (51,500,000 samples, 0.07%)</title><rect x="819.2" y="661" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="822.15" y="671.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (157,500,000 samples, 0.23%)</title><rect x="682.4" y="661" width="2.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="685.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (135,250,000 samples, 0.19%)</title><rect x="658.8" y="773" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="661.81" y="783.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (6,750,000 samples, 0.01%)</title><rect x="344.1" y="213" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="347.14" y="223.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (10,000,000 samples, 0.01%)</title><rect x="804.0" y="341" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="806.96" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,335,000,000 samples, 1.91%)</title><rect x="96.1" y="1109" width="22.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="99.14" y="1119.5" >e..</text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::begin (7,000,000 samples, 0.01%)</title><rect x="784.7" y="309" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="787.69" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (12,500,000 samples, 0.02%)</title><rect x="882.8" y="869" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="885.76" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (8,250,000 samples, 0.01%)</title><rect x="488.0" y="245" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="490.99" y="255.5" ></text>
</g>
<g >
<title>std::chrono::current_zone (23,250,000 samples, 0.03%)</title><rect x="839.3" y="869" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="842.32" y="879.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;int&gt; (64,250,000 samples, 0.09%)</title><rect x="487.5" y="325" width="1.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="490.47" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (21,000,000 samples, 0.03%)</title><rect x="759.5" y="197" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="762.49" y="207.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (15,250,000 samples, 0.02%)</title><rect x="363.7" y="565" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="366.67" y="575.5" ></text>
</g>
<g >
<title>do_futex (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="446.66" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (482,000,000 samples, 0.69%)</title><rect x="758.6" y="245" width="8.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="761.64" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (23,250,000 samples, 0.03%)</title><rect x="331.8" y="277" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="334.76" y="287.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (23,750,000 samples, 0.03%)</title><rect x="512.6" y="293" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="515.58" y="303.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (6,500,000 samples, 0.01%)</title><rect x="553.6" y="837" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="556.55" y="847.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (30,500,000 samples, 0.04%)</title><rect x="482.0" y="469" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="485.04" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (35,000,000 samples, 0.05%)</title><rect x="1173.2" y="1141" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1176.16" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned long&gt; (18,500,000 samples, 0.03%)</title><rect x="766.4" y="149" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="769.37" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (17,500,000 samples, 0.03%)</title><rect x="843.7" y="837" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="846.69" y="847.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (7,000,000 samples, 0.01%)</title><rect x="165.3" y="981" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="168.30" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (8,000,000 samples, 0.01%)</title><rect x="457.7" y="821" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="460.65" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (6,250,000 samples, 0.01%)</title><rect x="341.6" y="261" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="344.61" y="271.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (14,500,000 samples, 0.02%)</title><rect x="800.3" y="149" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="803.25" y="159.5" ></text>
</g>
<g >
<title>__unqueue_futex (16,750,000 samples, 0.02%)</title><rect x="560.6" y="837" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="563.63" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (9,500,000 samples, 0.01%)</title><rect x="477.2" y="613" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="480.19" y="623.5" ></text>
</g>
<g >
<title>[unknown] (25,913,750,000 samples, 37.04%)</title><rect x="10.3" y="1141" width="437.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.35" y="1151.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (14,000,000 samples, 0.02%)</title><rect x="690.8" y="629" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="693.77" y="639.5" ></text>
</g>
<g >
<title>minilog::generic_log&lt;int&amp;, unsigned long&gt; (4,039,250,000 samples, 5.77%)</title><rect x="309.8" y="789" width="68.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="312.76" y="799.5" >minilog..</text>
</g>
<g >
<title>std::move&lt;std::__format::_Sink_iter&lt;char&gt;&amp;&gt; (6,500,000 samples, 0.01%)</title><rect x="671.6" y="773" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="674.58" y="783.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (31,500,000 samples, 0.05%)</title><rect x="33.8" y="1061" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="36.79" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt;, void&gt; (15,500,000 samples, 0.02%)</title><rect x="777.8" y="309" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="780.77" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (62,000,000 samples, 0.09%)</title><rect x="485.7" y="405" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="488.70" y="415.5" ></text>
</g>
<g >
<title>std::locale::operator= (6,000,000 samples, 0.01%)</title><rect x="447.4" y="1093" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="450.37" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (82,000,000 samples, 0.12%)</title><rect x="737.1" y="181" width="1.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="740.11" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_futex (21,750,000 samples, 0.03%)</title><rect x="439.8" y="1061" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="442.79" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::ratio&lt;1l, 86400000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,000,000 samples, 0.01%)</title><rect x="773.3" y="309" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="776.29" y="319.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (20,750,000 samples, 0.03%)</title><rect x="74.1" y="1045" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="77.14" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (15,250,000 samples, 0.02%)</title><rect x="311.5" y="741" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="314.54" y="751.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (70,750,000 samples, 0.10%)</title><rect x="819.0" y="693" width="1.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="821.97" y="703.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (15,750,000 samples, 0.02%)</title><rect x="784.9" y="325" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="787.92" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::get_deleter (7,750,000 samples, 0.01%)</title><rect x="379.4" y="949" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="382.36" y="959.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned __int128, std::__format::_Sink_iter&lt;char&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="420.1" y="1125" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="423.05" y="1135.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (8,500,000 samples, 0.01%)</title><rect x="392.6" y="1109" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="395.62" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15,750,000 samples, 0.02%)</title><rect x="75.9" y="1077" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="78.94" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (34,000,000 samples, 0.05%)</title><rect x="685.3" y="629" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="688.27" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (9,750,000 samples, 0.01%)</title><rect x="767.4" y="309" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="770.44" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (43,500,000 samples, 0.06%)</title><rect x="823.4" y="645" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="826.43" y="655.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (116,750,000 samples, 0.17%)</title><rect x="356.4" y="181" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="359.38" y="191.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (32,750,000 samples, 0.05%)</title><rect x="488.9" y="261" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="491.88" y="271.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;int, std::__format::_Sink_iter&lt;char&gt; &gt; (149,250,000 samples, 0.21%)</title><rect x="736.6" y="213" width="2.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="739.62" y="223.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::newThread (6,750,000 samples, 0.01%)</title><rect x="445.7" y="1125" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="448.67" y="1135.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (6,000,000 samples, 0.01%)</title><rect x="337.4" y="197" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="340.44" y="207.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::year_month_day (25,000,000 samples, 0.04%)</title><rect x="332.8" y="261" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="335.78" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,000,000 samples, 0.01%)</title><rect x="743.7" y="357" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="746.71" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (13,000,000 samples, 0.02%)</title><rect x="546.8" y="933" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="549.79" y="943.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (15,000,000 samples, 0.02%)</title><rect x="772.2" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="775.17" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter, true, true&gt;::__uniq_ptr_impl (14,500,000 samples, 0.02%)</title><rect x="544.1" y="709" width="0.3" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="547.15" y="719.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (6,750,000 samples, 0.01%)</title><rect x="489.3" y="245" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="492.32" y="255.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (3,087,750,000 samples, 4.41%)</title><rect x="470.0" y="757" width="52.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="473.02" y="767.5" >std::..</text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (9,500,000 samples, 0.01%)</title><rect x="880.1" y="757" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="883.15" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (11,500,000 samples, 0.02%)</title><rect x="510.5" y="421" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="513.54" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (23,500,000 samples, 0.03%)</title><rect x="883.1" y="805" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="886.07" y="815.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::__formatter_chrono (7,000,000 samples, 0.01%)</title><rect x="517.0" y="501" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="520.02" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned long&gt; (18,000,000 samples, 0.03%)</title><rect x="376.6" y="565" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="379.58" y="575.5" ></text>
</g>
<g >
<title>std::locale::locale (7,750,000 samples, 0.01%)</title><rect x="748.3" y="341" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="751.28" y="351.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (310,750,000 samples, 0.44%)</title><rect x="860.5" y="789" width="5.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="863.50" y="799.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (188,750,000 samples, 0.27%)</title><rect x="808.4" y="405" width="3.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="811.36" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,500,000 samples, 0.01%)</title><rect x="311.2" y="741" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="314.16" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (28,250,000 samples, 0.04%)</title><rect x="74.1" y="1061" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="77.09" y="1071.5" ></text>
</g>
<g >
<title>__memchr_avx2 (12,000,000 samples, 0.02%)</title><rect x="347.9" y="197" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="350.92" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (23,500,000 samples, 0.03%)</title><rect x="509.6" y="405" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="512.63" y="415.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (6,250,000 samples, 0.01%)</title><rect x="354.9" y="245" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="357.91" y="255.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (208,000,000 samples, 0.30%)</title><rect x="355.3" y="229" width="3.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="358.33" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::function&lt;void  (7,000,000 samples, 0.01%)</title><rect x="547.8" y="933" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="550.83" y="943.5" ></text>
</g>
<g >
<title>std::formatter&lt;int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (47,750,000 samples, 0.07%)</title><rect x="374.5" y="645" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="377.55" y="655.5" ></text>
</g>
<g >
<title>std::chrono::get_tzdb_list (7,750,000 samples, 0.01%)</title><rect x="368.8" y="773" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="371.85" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17,500,000 samples, 0.03%)</title><rect x="73.8" y="1061" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="76.79" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (10,750,000 samples, 0.02%)</title><rect x="350.7" y="197" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="353.65" y="207.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (35,000,000 samples, 0.05%)</title><rect x="794.1" y="309" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="797.05" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (17,500,000 samples, 0.03%)</title><rect x="534.0" y="933" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="537.00" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (38,250,000 samples, 0.05%)</title><rect x="81.4" y="1061" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="84.36" y="1071.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (76,750,000 samples, 0.11%)</title><rect x="719.2" y="373" width="1.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="722.16" y="383.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (24,250,000 samples, 0.03%)</title><rect x="468.1" y="741" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="471.06" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;char&gt; (15,250,000 samples, 0.02%)</title><rect x="752.1" y="341" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="755.08" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (33,250,000 samples, 0.05%)</title><rect x="32.0" y="1061" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="34.97" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hours (9,750,000 samples, 0.01%)</title><rect x="776.8" y="325" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="779.83" y="335.5" ></text>
</g>
<g >
<title>__lookup_mnt (6,000,000 samples, 0.01%)</title><rect x="22.5" y="933" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="25.54" y="943.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (6,000,000 samples, 0.01%)</title><rect x="972.2" y="997" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="975.15" y="1007.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,000,000 samples, 0.01%)</title><rect x="793.1" y="261" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="796.14" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,750,000 samples, 0.01%)</title><rect x="417.2" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="420.20" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="394.49" y="1071.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::rbegin (6,000,000 samples, 0.01%)</title><rect x="653.2" y="805" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="656.17" y="815.5" ></text>
</g>
<g >
<title>try_to_wake_up (25,500,000 samples, 0.04%)</title><rect x="392.8" y="997" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="395.78" y="1007.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (637,500,000 samples, 0.91%)</title><rect x="107.6" y="1045" width="10.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="110.63" y="1055.5" ></text>
</g>
<g >
<title>std::format&lt;long&gt; (374,750,000 samples, 0.54%)</title><rect x="352.8" y="277" width="6.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="355.76" y="287.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (21,000,000 samples, 0.03%)</title><rect x="512.6" y="277" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="515.60" y="287.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (318,500,000 samples, 0.46%)</title><rect x="795.9" y="245" width="5.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="798.89" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::__normal_iterator (7,750,000 samples, 0.01%)</title><rect x="856.9" y="757" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="859.91" y="767.5" ></text>
</g>
<g >
<title>_int_malloc (86,500,000 samples, 0.12%)</title><rect x="630.1" y="1141" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="633.12" y="1151.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (5,809,000,000 samples, 8.30%)</title><rect x="710.0" y="421" width="98.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="713.04" y="431.5" >std::format..</text>
</g>
<g >
<title>plist_add (20,250,000 samples, 0.03%)</title><rect x="889.8" y="741" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="892.79" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (8,500,000 samples, 0.01%)</title><rect x="476.7" y="613" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="479.66" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_disjunct (6,500,000 samples, 0.01%)</title><rect x="684.2" y="629" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="687.25" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (10,500,000 samples, 0.02%)</title><rect x="430.4" y="1125" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="433.42" y="1135.5" ></text>
</g>
<g >
<title>wake_up_q (7,500,000 samples, 0.01%)</title><rect x="390.4" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="393.36" y="1023.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::advance_to (9,500,000 samples, 0.01%)</title><rect x="858.3" y="805" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="861.29" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (279,250,000 samples, 0.40%)</title><rect x="657.0" y="821" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="660.00" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void  (17,500,000 samples, 0.03%)</title><rect x="881.7" y="869" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="884.74" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (74,250,000 samples, 0.11%)</title><rect x="874.9" y="533" width="1.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="877.90" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (8,250,000 samples, 0.01%)</title><rect x="811.3" y="373" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="814.29" y="383.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (243,250,000 samples, 0.35%)</title><rect x="873.0" y="821" width="4.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="876.01" y="831.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (16,500,000 samples, 0.02%)</title><rect x="455.8" y="901" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="458.77" y="911.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (7,000,000 samples, 0.01%)</title><rect x="825.8" y="741" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="828.77" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (276,500,000 samples, 0.40%)</title><rect x="496.9" y="405" width="4.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="499.86" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (7,500,000 samples, 0.01%)</title><rect x="379.8" y="981" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="382.85" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (398,250,000 samples, 0.57%)</title><rect x="732.6" y="293" width="6.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="735.65" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (15,500,000 samples, 0.02%)</title><rect x="859.5" y="805" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="862.53" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (13,250,000 samples, 0.02%)</title><rect x="495.5" y="421" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="498.54" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,500,000 samples, 0.01%)</title><rect x="371.5" y="709" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="374.50" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="981" width="326.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="636.43" y="991.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (3,941,750,000 samples, 5.63%)</title><rect x="893.8" y="901" width="66.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="896.82" y="911.5" >std::un..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (125,250,000 samples, 0.18%)</title><rect x="874.2" y="613" width="2.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="877.17" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (364,250,000 samples, 0.52%)</title><rect x="34.4" y="1093" width="6.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="37.35" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (39,500,000 samples, 0.06%)</title><rect x="497.9" y="325" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="500.87" y="335.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (10,000,000 samples, 0.01%)</title><rect x="690.1" y="549" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="693.05" y="559.5" ></text>
</g>
<g >
<title>__virt_addr_valid (14,250,000 samples, 0.02%)</title><rect x="52.0" y="981" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="54.98" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;long&gt; (16,000,000 samples, 0.02%)</title><rect x="752.3" y="341" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="755.34" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (25,000,000 samples, 0.04%)</title><rect x="490.4" y="405" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="493.36" y="415.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (44,250,000 samples, 0.06%)</title><rect x="372.4" y="693" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="375.42" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4,534,500,000 samples, 6.48%)</title><rect x="11.0" y="1125" width="76.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.00" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (10,500,000 samples, 0.02%)</title><rect x="503.1" y="405" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="506.11" y="415.5" ></text>
</g>
<g >
<title>inode_permission (24,500,000 samples, 0.04%)</title><rect x="46.0" y="965" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="48.99" y="975.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (1,827,250,000 samples, 2.61%)</title><rect x="87.8" y="1125" width="30.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="90.83" y="1135.5" >__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,500,000 samples, 0.02%)</title><rect x="534.0" y="885" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="537.03" y="895.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt;::_S_make_elt&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (11,000,000 samples, 0.02%)</title><rect x="326.4" y="469" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="329.40" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1013" width="326.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="636.43" y="1023.5" >std::__invoke_r&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (21,750,000 samples, 0.03%)</title><rect x="357.7" y="69" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="360.72" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,000,000 samples, 0.01%)</title><rect x="834.6" y="853" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="837.60" y="863.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (24,750,000 samples, 0.04%)</title><rect x="759.9" y="197" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="762.91" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20,000,000 samples, 0.03%)</title><rect x="83.7" y="1077" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="86.67" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (29,500,000 samples, 0.04%)</title><rect x="509.0" y="421" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="512.03" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt;, long, std::ratio&lt;60l, 1l&gt; &gt; (14,750,000 samples, 0.02%)</title><rect x="776.0" y="309" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="778.96" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (94,250,000 samples, 0.13%)</title><rect x="327.4" y="453" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="330.40" y="463.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (11,250,000 samples, 0.02%)</title><rect x="419.1" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="422.13" y="1119.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (24,000,000 samples, 0.03%)</title><rect x="535.4" y="869" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="538.42" y="879.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (7,500,000 samples, 0.01%)</title><rect x="1179.2" y="1077" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1182.22" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,000,000 samples, 0.01%)</title><rect x="492.2" y="453" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="495.21" y="463.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (9,103,250,000 samples, 13.01%)</title><rect x="673.2" y="789" width="153.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="676.22" y="799.5" >std::__format::_Sca..</text>
</g>
<g >
<title>std::mutex::unlock (3,932,000,000 samples, 5.62%)</title><rect x="894.0" y="869" width="66.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="896.98" y="879.5" >std::mu..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (60,000,000 samples, 0.09%)</title><rect x="302.4" y="1125" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="305.41" y="1135.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (21,250,000 samples, 0.03%)</title><rect x="514.6" y="405" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="517.59" y="415.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (7,500,000 samples, 0.01%)</title><rect x="854.3" y="805" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="857.25" y="815.5" ></text>
</g>
<g >
<title>_int_free (45,000,000 samples, 0.06%)</title><rect x="629.4" y="1141" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="632.36" y="1151.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_character&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (91,250,000 samples, 0.13%)</title><rect x="760.7" y="197" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="763.70" y="207.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (18,000,000 samples, 0.03%)</title><rect x="417.3" y="1125" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="420.34" y="1135.5" ></text>
</g>
<g >
<title>do_futex (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1045" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="443.52" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (197,250,000 samples, 0.28%)</title><rect x="786.8" y="341" width="3.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="789.78" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (738,000,000 samples, 1.06%)</title><rect x="106.2" y="1077" width="12.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="109.21" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (6,500,000 samples, 0.01%)</title><rect x="743.4" y="357" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="746.44" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (15,500,000 samples, 0.02%)</title><rect x="475.5" y="565" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="478.52" y="575.5" ></text>
</g>
<g >
<title>ankerl::nanobench::templates::parseMustacheTemplate (6,000,000 samples, 0.01%)</title><rect x="387.1" y="1125" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="390.07" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned long&gt; (16,750,000 samples, 0.02%)</title><rect x="347.1" y="69" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="350.14" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="418.32" y="1071.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::~basic_format_context (7,500,000 samples, 0.01%)</title><rect x="813.5" y="533" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="816.50" y="543.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,000,000 samples, 0.01%)</title><rect x="830.8" y="789" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="833.78" y="799.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (183,500,000 samples, 0.26%)</title><rect x="373.9" y="677" width="3.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="376.95" y="687.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7,500,000 samples, 0.01%)</title><rect x="378.1" y="773" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="381.06" y="783.5" ></text>
</g>
<g >
<title>plist_add (162,500,000 samples, 0.23%)</title><rect x="134.3" y="1013" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="137.28" y="1023.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (53,000,000 samples, 0.08%)</title><rect x="457.4" y="901" width="0.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="460.42" y="911.5" ></text>
</g>
<g >
<title>complete_walk (79,000,000 samples, 0.11%)</title><rect x="19.3" y="981" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="22.33" y="991.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (32,500,000 samples, 0.05%)</title><rect x="339.0" y="101" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="342.03" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,413,250,000 samples, 12.03%)</title><rect x="159.8" y="1109" width="141.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="162.76" y="1119.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,500,000 samples, 0.02%)</title><rect x="712.9" y="389" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="715.94" y="399.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (21,750,000 samples, 0.03%)</title><rect x="503.6" y="453" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="506.61" y="463.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_locale&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="493.5" y="453" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="496.53" y="463.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (172,750,000 samples, 0.25%)</title><rect x="877.5" y="837" width="2.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="880.53" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter, void&gt; (37,500,000 samples, 0.05%)</title><rect x="379.0" y="965" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="382.04" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (40,000,000 samples, 0.06%)</title><rect x="548.2" y="965" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="551.15" y="975.5" ></text>
</g>
<g >
<title>do_futex (8,311,500,000 samples, 11.88%)</title><rect x="160.5" y="1061" width="140.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="163.52" y="1071.5" >do_futex</text>
</g>
<g >
<title>__rseq_handle_notify_resume (26,500,000 samples, 0.04%)</title><rect x="33.9" y="1029" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="36.86" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (11,250,000 samples, 0.02%)</title><rect x="457.6" y="837" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="460.62" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (17,500,000 samples, 0.03%)</title><rect x="369.5" y="757" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="372.54" y="767.5" ></text>
</g>
<g >
<title>futex_wait (37,000,000 samples, 0.05%)</title><rect x="33.1" y="1029" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="36.07" y="1039.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (55,250,000 samples, 0.08%)</title><rect x="740.0" y="309" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="743.00" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (56,250,000 samples, 0.08%)</title><rect x="1188.2" y="1125" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.21" y="1135.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (16,000,000 samples, 0.02%)</title><rect x="378.5" y="901" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="381.50" y="911.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt; (13,250,000 samples, 0.02%)</title><rect x="326.6" y="469" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="329.63" y="479.5" ></text>
</g>
<g >
<title>wake_up_q (11,617,250,000 samples, 16.61%)</title><rect x="972.4" y="1045" width="196.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="975.42" y="1055.5" >wake_up_q</text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (8,000,000 samples, 0.01%)</title><rect x="364.0" y="549" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="366.99" y="559.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (17,250,000 samples, 0.02%)</title><rect x="661.7" y="821" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="664.71" y="831.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (73,250,000 samples, 0.10%)</title><rect x="460.6" y="853" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="463.63" y="863.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (7,000,000 samples, 0.01%)</title><rect x="319.3" y="677" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="322.29" y="687.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (6,500,000 samples, 0.01%)</title><rect x="345.3" y="85" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="348.32" y="95.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (16,750,000 samples, 0.02%)</title><rect x="496.6" y="405" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="499.58" y="415.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;int, unsigned long long&gt; (25,750,000 samples, 0.04%)</title><rect x="368.3" y="773" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="371.26" y="783.5" ></text>
</g>
<g >
<title>walk_component (35,750,000 samples, 0.05%)</title><rect x="47.5" y="981" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="50.50" y="991.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::seconds (7,750,000 samples, 0.01%)</title><rect x="350.8" y="229" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="353.84" y="239.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (49,500,000 samples, 0.07%)</title><rect x="850.7" y="853" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="853.66" y="863.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (36,750,000 samples, 0.05%)</title><rect x="323.8" y="549" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="326.78" y="559.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (337,000,000 samples, 0.48%)</title><rect x="396.4" y="1125" width="5.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="399.37" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (7,750,000 samples, 0.01%)</title><rect x="755.1" y="309" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="758.15" y="319.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_WidthPrecVisitor&gt; (26,000,000 samples, 0.04%)</title><rect x="763.4" y="133" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="766.38" y="143.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (11,000,000 samples, 0.02%)</title><rect x="452.0" y="965" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="454.95" y="975.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;int&gt; (16,000,000 samples, 0.02%)</title><rect x="483.0" y="453" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="485.99" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,250,000 samples, 0.01%)</title><rect x="392.7" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="395.66" y="1103.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;test (89,250,000 samples, 0.13%)</title><rect x="874.8" y="581" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="877.76" y="591.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (30,250,000 samples, 0.04%)</title><rect x="522.5" y="789" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="525.54" y="799.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (117,750,000 samples, 0.17%)</title><rect x="891.1" y="805" width="2.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="894.12" y="815.5" ></text>
</g>
<g >
<title>plist_del (9,000,000 samples, 0.01%)</title><rect x="165.3" y="997" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="168.26" y="1007.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (32,750,000 samples, 0.05%)</title><rect x="735.0" y="165" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="737.96" y="175.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, unsigned short, char const*&gt; (6,000,000 samples, 0.01%)</title><rect x="735.7" y="165" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="738.69" y="175.5" ></text>
</g>
<g >
<title>futex_wake (14,500,000 samples, 0.02%)</title><rect x="393.5" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="396.46" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10,750,000 samples, 0.02%)</title><rect x="713.2" y="373" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="716.19" y="383.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (380,500,000 samples, 0.54%)</title><rect x="844.2" y="853" width="6.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="847.24" y="863.5" ></text>
</g>
<g >
<title>futex_wake (359,250,000 samples, 0.51%)</title><rect x="34.4" y="1029" width="6.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="37.40" y="1039.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; const&gt; (6,000,000 samples, 0.01%)</title><rect x="524.8" y="821" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="527.80" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;int&gt; (14,000,000 samples, 0.02%)</title><rect x="334.2" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="337.18" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,000,000 samples, 0.02%)</title><rect x="417.4" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="420.45" y="1087.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (28,750,000 samples, 0.04%)</title><rect x="771.6" y="309" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="774.59" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13,000,000 samples, 0.02%)</title><rect x="325.1" y="517" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="328.06" y="527.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (8,500,000 samples, 0.01%)</title><rect x="417.9" y="1125" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="420.88" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (52,750,000 samples, 0.08%)</title><rect x="764.1" y="165" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="767.13" y="175.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (100,250,000 samples, 0.14%)</title><rect x="499.6" y="309" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="502.60" y="319.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (11,000,000 samples, 0.02%)</title><rect x="98.5" y="1013" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="101.54" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,250,000 samples, 0.02%)</title><rect x="474.5" y="645" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="477.55" y="655.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::_S_abs (6,750,000 samples, 0.01%)</title><rect x="504.2" y="437" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="507.15" y="447.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator-- (31,000,000 samples, 0.04%)</title><rect x="871.3" y="901" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="874.28" y="911.5" ></text>
</g>
<g >
<title>pthread_cond_clockwait@@GLIBC_2.34 (14,750,000 samples, 0.02%)</title><rect x="396.1" y="1125" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="399.12" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10,000,000 samples, 0.01%)</title><rect x="546.8" y="917" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="549.84" y="927.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="539.9" y="917" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="542.87" y="927.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (156,000,000 samples, 0.22%)</title><rect x="733.8" y="213" width="2.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="736.83" y="223.5" ></text>
</g>
<g >
<title>_fini (17,000,000 samples, 0.02%)</title><rect x="381.4" y="1125" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="384.35" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (729,250,000 samples, 1.04%)</title><rect x="42.3" y="1077" width="12.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="45.29" y="1087.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,924,000,000 samples, 5.61%)</title><rect x="561.1" y="837" width="66.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="564.12" y="847.5" >try_to_..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (107,000,000 samples, 0.15%)</title><rect x="338.0" y="149" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="340.99" y="159.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::first (9,000,000 samples, 0.01%)</title><rect x="661.4" y="789" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="664.44" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (138,000,000 samples, 0.20%)</title><rect x="534.9" y="933" width="2.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="537.87" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (29,500,000 samples, 0.04%)</title><rect x="850.8" y="789" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="853.83" y="799.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (13,000,000 samples, 0.02%)</title><rect x="33.2" y="1013" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="36.16" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11,750,000 samples, 0.02%)</title><rect x="687.1" y="613" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="690.15" y="623.5" ></text>
</g>
<g >
<title>atime_needs_update (40,000,000 samples, 0.06%)</title><rect x="43.4" y="1013" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="46.37" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,796,250,000 samples, 16.86%)</title><rect x="969.6" y="1125" width="199.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="972.61" y="1135.5" >entry_SYSCALL_64_after_hwf..</text>
</g>
<g >
<title>std::__future_base::_Result&lt;void&gt;::_M_destroy (30,500,000 samples, 0.04%)</title><rect x="875.5" y="501" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="878.45" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (15,500,000 samples, 0.02%)</title><rect x="318.0" y="645" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="321.03" y="655.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (15,750,000 samples, 0.02%)</title><rect x="459.9" y="885" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="462.87" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, unsigned char, std::ratio&lt;1l, 1l&gt; &gt; (11,250,000 samples, 0.02%)</title><rect x="777.8" y="293" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="780.84" y="303.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (125,500,000 samples, 0.18%)</title><rect x="729.7" y="309" width="2.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="732.70" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (8,500,000 samples, 0.01%)</title><rect x="493.2" y="469" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="496.21" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (11,250,000 samples, 0.02%)</title><rect x="719.5" y="341" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="722.52" y="351.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1109" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="392.95" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (412,000,000 samples, 0.59%)</title><rect x="794.6" y="309" width="7.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="797.64" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (19,000,000 samples, 0.03%)</title><rect x="826.8" y="789" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="829.78" y="799.5" ></text>
</g>
<g >
<title>std::formatter&lt;char const*, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (101,750,000 samples, 0.15%)</title><rect x="818.9" y="709" width="1.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="821.90" y="719.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::to_local&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (90,250,000 samples, 0.13%)</title><rect x="468.5" y="757" width="1.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="471.50" y="767.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (10,000,000 samples, 0.01%)</title><rect x="778.2" y="277" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="781.19" y="287.5" ></text>
</g>
<g >
<title>std::chrono::tzdb::current_zone (369,500,000 samples, 0.53%)</title><rect x="71.4" y="1109" width="6.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="74.40" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;int, std::__format::_Sink_iter&lt;char&gt; &gt; (45,250,000 samples, 0.06%)</title><rect x="374.6" y="629" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="377.57" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (25,000,000 samples, 0.04%)</title><rect x="852.5" y="837" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="855.50" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9,500,000 samples, 0.01%)</title><rect x="104.8" y="1013" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="107.79" y="1023.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (13,000,000 samples, 0.02%)</title><rect x="544.2" y="693" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="547.16" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,878,000,000 samples, 5.54%)</title><rect x="894.3" y="821" width="65.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="897.32" y="831.5" >do_sysc..</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_hms&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (170,000,000 samples, 0.24%)</title><rect x="349.2" y="277" width="2.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="352.19" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (126,000,000 samples, 0.18%)</title><rect x="434.0" y="1125" width="2.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="436.96" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::tzdb::current_zone (240,000,000 samples, 0.34%)</title><rect x="426.0" y="1125" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="428.97" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,000,000 samples, 0.01%)</title><rect x="409.6" y="1061" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="412.58" y="1071.5" ></text>
</g>
<g >
<title>walk_component (96,000,000 samples, 0.14%)</title><rect x="23.7" y="981" width="1.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="26.69" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (45,750,000 samples, 0.07%)</title><rect x="315.1" y="677" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="318.08" y="687.5" ></text>
</g>
<g >
<title>wake_q_add_safe (9,500,000 samples, 0.01%)</title><rect x="972.3" y="1045" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="975.26" y="1055.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (43,000,000 samples, 0.06%)</title><rect x="643.2" y="853" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="646.22" y="863.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_local_time (92,250,000 samples, 0.13%)</title><rect x="468.5" y="773" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="471.47" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,750,000 samples, 0.01%)</title><rect x="701.2" y="517" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="704.20" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,250,000 samples, 0.01%)</title><rect x="724.8" y="309" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="727.81" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (84,000,000 samples, 0.12%)</title><rect x="543.5" y="805" width="1.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="546.53" y="815.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (10,750,000 samples, 0.02%)</title><rect x="521.3" y="725" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="524.34" y="735.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (9,750,000 samples, 0.01%)</title><rect x="756.2" y="293" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="759.22" y="303.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (22,750,000 samples, 0.03%)</title><rect x="680.6" y="693" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="683.65" y="703.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash&lt;unsigned long&gt; (9,500,000 samples, 0.01%)</title><rect x="378.1" y="789" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="381.06" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_fill_and_align (6,750,000 samples, 0.01%)</title><rect x="734.4" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="737.42" y="207.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;86400l, 1l&gt;, void&gt; (16,250,000 samples, 0.02%)</title><rect x="717.4" y="293" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="720.37" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (6,750,000 samples, 0.01%)</title><rect x="646.2" y="805" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="649.23" y="815.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (67,750,000 samples, 0.10%)</title><rect x="749.8" y="341" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="752.84" y="351.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="421.66" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned long long, std::__format::_Sink_iter&lt;char&gt; &gt; (89,250,000 samples, 0.13%)</title><rect x="375.4" y="629" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="378.38" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (14,000,000 samples, 0.02%)</title><rect x="713.1" y="389" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="716.13" y="399.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (105,000,000 samples, 0.15%)</title><rect x="45.2" y="981" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="48.23" y="991.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (27,750,000 samples, 0.04%)</title><rect x="879.3" y="773" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="882.31" y="783.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;unsigned int const&gt; (15,250,000 samples, 0.02%)</title><rect x="752.8" y="325" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="755.76" y="335.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (139,250,000 samples, 0.20%)</title><rect x="798.8" y="213" width="2.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="801.83" y="223.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (508,500,000 samples, 0.73%)</title><rect x="369.3" y="773" width="8.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="372.32" y="783.5" ></text>
</g>
<g >
<title>std::queue&lt;std::function&lt;void  (36,000,000 samples, 0.05%)</title><rect x="547.4" y="997" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="550.38" y="1007.5" ></text>
</g>
<g >
<title>do_futex (11,000,000 samples, 0.02%)</title><rect x="419.1" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="422.14" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13,750,000 samples, 0.02%)</title><rect x="492.7" y="469" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="495.69" y="479.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (39,250,000 samples, 0.06%)</title><rect x="539.4" y="965" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="542.42" y="975.5" ></text>
</g>
<g >
<title>std::chrono::tzdb_list::begin (37,000,000 samples, 0.05%)</title><rect x="530.4" y="965" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="533.39" y="975.5" ></text>
</g>
<g >
<title>doctest::Context::run (28,000,000 samples, 0.04%)</title><rect x="393.2" y="1125" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="396.24" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (15,500,000 samples, 0.02%)</title><rect x="503.7" y="437" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="506.67" y="447.5" ></text>
</g>
<g >
<title>futex_wake (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1029" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="441.54" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (6,750,000 samples, 0.01%)</title><rect x="849.7" y="805" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="852.66" y="815.5" ></text>
</g>
<g >
<title>std::condition_variable::__wait_until_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (24,000,000 samples, 0.03%)</title><rect x="541.2" y="949" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="544.22" y="959.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 5ul&gt; (156,250,000 samples, 0.22%)</title><rect x="652.6" y="821" width="2.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="655.60" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (9,250,000 samples, 0.01%)</title><rect x="418.7" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="421.66" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (110,000,000 samples, 0.16%)</title><rect x="687.5" y="645" width="1.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="690.54" y="655.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (11,000,000 samples, 0.02%)</title><rect x="458.6" y="901" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="461.60" y="911.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (37,750,000 samples, 0.05%)</title><rect x="497.9" y="309" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="500.89" y="319.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (41,500,000 samples, 0.06%)</title><rect x="16.2" y="1013" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="19.22" y="1023.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (6,250,000 samples, 0.01%)</title><rect x="868.2" y="805" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="871.19" y="815.5" ></text>
</g>
<g >
<title>std::to_chars (39,500,000 samples, 0.06%)</title><rect x="824.4" y="677" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="827.36" y="687.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (21,000,000 samples, 0.03%)</title><rect x="338.3" y="101" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="341.30" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (7,000,000 samples, 0.01%)</title><rect x="700.8" y="517" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="703.83" y="527.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (16,500,000 samples, 0.02%)</title><rect x="720.1" y="341" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="723.07" y="351.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="418.32" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (8,500,000 samples, 0.01%)</title><rect x="352.6" y="277" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="355.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (11,000,000 samples, 0.02%)</title><rect x="789.2" y="277" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="792.18" y="287.5" ></text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (73,250,000 samples, 0.10%)</title><rect x="346.2" y="133" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="349.19" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (17,500,000 samples, 0.03%)</title><rect x="471.2" y="709" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="474.23" y="719.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_get_width&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (18,750,000 samples, 0.03%)</title><rect x="346.3" y="85" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="349.34" y="95.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (58,000,000 samples, 0.08%)</title><rect x="685.0" y="661" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="688.03" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (24,750,000 samples, 0.04%)</title><rect x="659.5" y="725" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="662.49" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,250,000 samples, 0.02%)</title><rect x="660.2" y="725" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="663.24" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (30,500,000 samples, 0.04%)</title><rect x="531.7" y="933" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="534.75" y="943.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (23,000,000 samples, 0.03%)</title><rect x="959.9" y="853" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="962.91" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,500,000 samples, 0.02%)</title><rect x="393.5" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="396.46" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (13,250,000 samples, 0.02%)</title><rect x="350.6" y="213" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="353.61" y="223.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (14,500,000 samples, 0.02%)</title><rect x="778.1" y="309" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="781.13" y="319.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6,000,000 samples, 0.01%)</title><rect x="323.1" y="517" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="326.11" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,250,000 samples, 0.01%)</title><rect x="381.4" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="384.44" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (16,000,000 samples, 0.02%)</title><rect x="749.4" y="325" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="752.43" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (9,750,000 samples, 0.01%)</title><rect x="381.4" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="384.44" y="1023.5" ></text>
</g>
<g >
<title>_copy_to_user (46,500,000 samples, 0.07%)</title><rect x="16.1" y="1029" width="0.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="19.13" y="1039.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (8,465,000,000 samples, 12.10%)</title><rect x="158.9" y="1125" width="142.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="161.88" y="1135.5" >__GI___lll_lock_wake</text>
</g>
<g >
<title>std::__deque_buf_size (6,000,000 samples, 0.01%)</title><rect x="542.2" y="885" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="545.19" y="895.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (58,500,000 samples, 0.08%)</title><rect x="689.4" y="629" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="692.45" y="639.5" ></text>
</g>
<g >
<title>futex_wake (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1029" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="443.52" y="1039.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (29,000,000 samples, 0.04%)</title><rect x="319.2" y="693" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="322.17" y="703.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_type (14,500,000 samples, 0.02%)</title><rect x="676.2" y="741" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="679.16" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;backward::ResolvedTrace::SourceLoc, std::allocator&lt;backward::ResolvedTrace::SourceLoc&gt; &gt;::_M_realloc_insert&lt;backward::ResolvedTrace::SourceLoc const&amp;&gt; (6,000,000 samples, 0.01%)</title><rect x="441.0" y="1125" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="443.98" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (7,000,000 samples, 0.01%)</title><rect x="672.4" y="773" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="675.44" y="783.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;__int128, std::__format::_Sink_iter&lt;char&gt; &gt; (6,000,000 samples, 0.01%)</title><rect x="419.7" y="1125" width="0.1" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="422.66" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::end (7,750,000 samples, 0.01%)</title><rect x="827.1" y="789" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="830.10" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (21,750,000 samples, 0.03%)</title><rect x="1173.8" y="1141" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1176.75" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (6,250,000 samples, 0.01%)</title><rect x="1177.0" y="1093" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1180.01" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (278,500,000 samples, 0.40%)</title><rect x="343.6" y="245" width="4.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="346.65" y="255.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (18,500,000 samples, 0.03%)</title><rect x="346.7" y="85" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="349.66" y="95.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (49,500,000 samples, 0.07%)</title><rect x="548.0" y="997" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="550.99" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned long&gt; (60,750,000 samples, 0.09%)</title><rect x="765.7" y="165" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="768.66" y="175.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_local_time (264,500,000 samples, 0.38%)</title><rect x="686.0" y="677" width="4.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="689.02" y="687.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (68,500,000 samples, 0.10%)</title><rect x="734.7" y="181" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="737.66" y="191.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (60,000,000 samples, 0.09%)</title><rect x="761.1" y="149" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="764.06" y="159.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (25,000,000 samples, 0.04%)</title><rect x="352.1" y="277" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="355.10" y="287.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (13,250,000 samples, 0.02%)</title><rect x="679.6" y="677" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="682.58" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (14,500,000 samples, 0.02%)</title><rect x="1168.6" y="1141" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1171.61" y="1151.5" ></text>
</g>
<g >
<title>do_readlinkat (638,750,000 samples, 0.91%)</title><rect x="42.6" y="1045" width="10.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="45.57" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (10,000,000 samples, 0.01%)</title><rect x="660.9" y="757" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="663.87" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,750,000 samples, 0.02%)</title><rect x="715.1" y="309" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="718.14" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (42,000,000 samples, 0.06%)</title><rect x="889.7" y="757" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="892.67" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (97,250,000 samples, 0.14%)</title><rect x="799.0" y="197" width="1.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="801.99" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (27,000,000 samples, 0.04%)</title><rect x="812.7" y="517" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="815.66" y="527.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="719.8" y="341" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="722.82" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="421.66" y="1071.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (165,500,000 samples, 0.24%)</title><rect x="554.0" y="901" width="2.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="557.00" y="911.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (8,500,000 samples, 0.01%)</title><rect x="692.9" y="565" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="695.86" y="575.5" ></text>
</g>
<g >
<title>std::formatter&lt;char, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (42,500,000 samples, 0.06%)</title><rect x="498.6" y="325" width="0.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="501.63" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (80,500,000 samples, 0.12%)</title><rect x="535.0" y="917" width="1.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="538.02" y="927.5" ></text>
</g>
<g >
<title>[unknown] (11,500,000 samples, 0.02%)</title><rect x="534.0" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.03" y="927.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (51,500,000 samples, 0.07%)</title><rect x="685.1" y="645" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="688.13" y="655.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (186,750,000 samples, 0.27%)</title><rect x="373.9" y="693" width="3.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="376.91" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (34,750,000 samples, 0.05%)</title><rect x="462.3" y="885" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="465.30" y="895.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="442.01" y="1119.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_WidthPrecVisitor, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (7,250,000 samples, 0.01%)</title><rect x="346.4" y="53" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="349.44" y="63.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (9,250,000 samples, 0.01%)</title><rect x="545.6" y="853" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="548.58" y="863.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (249,500,000 samples, 0.36%)</title><rect x="510.8" y="421" width="4.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="513.83" y="431.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (44,500,000 samples, 0.06%)</title><rect x="523.2" y="805" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="526.22" y="815.5" ></text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (239,500,000 samples, 0.34%)</title><rect x="762.7" y="229" width="4.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="765.68" y="239.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (72,250,000 samples, 0.10%)</title><rect x="799.3" y="165" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="802.28" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (78,750,000 samples, 0.11%)</title><rect x="846.9" y="757" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="849.93" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (168,750,000 samples, 0.24%)</title><rect x="374.1" y="661" width="2.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="377.08" y="671.5" ></text>
</g>
<g >
<title>do_futex (9,750,000 samples, 0.01%)</title><rect x="381.4" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="384.44" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (6,250,000 samples, 0.01%)</title><rect x="1179.3" y="1093" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1182.35" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (24,000,000 samples, 0.03%)</title><rect x="1172.0" y="1141" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1175.04" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,000,000 samples, 0.01%)</title><rect x="724.4" y="309" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="727.44" y="319.5" ></text>
</g>
<g >
<title>do_futex (8,250,000 samples, 0.01%)</title><rect x="87.6" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="90.62" y="1055.5" ></text>
</g>
<g >
<title>std::format&lt;int&gt; (510,250,000 samples, 0.73%)</title><rect x="482.7" y="469" width="8.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="485.70" y="479.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (153,750,000 samples, 0.22%)</title><rect x="345.0" y="165" width="2.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="347.96" y="175.5" ></text>
</g>
<g >
<title>__memchr_avx2 (9,250,000 samples, 0.01%)</title><rect x="811.1" y="373" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="814.10" y="383.5" ></text>
</g>
<g >
<title>test (4,089,250,000 samples, 5.85%)</title><rect x="309.3" y="821" width="69.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="312.31" y="831.5" >test</text>
</g>
<g >
<title>do_syscall_64 (8,413,250,000 samples, 12.03%)</title><rect x="159.8" y="1093" width="141.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="162.76" y="1103.5" >do_syscall_64</text>
</g>
<g >
<title>exit_to_user_mode_prepare (734,500,000 samples, 1.05%)</title><rect x="106.3" y="1061" width="12.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="109.27" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (8,000,000 samples, 0.01%)</title><rect x="703.6" y="469" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="706.60" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ankerl::nanobench::BigO, std::allocator&lt;ankerl::nanobench::BigO&gt; &gt;::_M_realloc_insert&lt;char const  (30,250,000 samples, 0.04%)</title><rect x="438.4" y="1125" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="441.37" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (9,750,000 samples, 0.01%)</title><rect x="547.1" y="965" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="550.06" y="975.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (99,000,000 samples, 0.14%)</title><rect x="736.9" y="197" width="1.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="739.85" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (138,000,000 samples, 0.20%)</title><rect x="1184.0" y="1125" width="2.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1187.00" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_date&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (132,500,000 samples, 0.19%)</title><rect x="716.7" y="373" width="2.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="719.70" y="383.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (26,750,000 samples, 0.04%)</title><rect x="345.6" y="117" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="348.64" y="127.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (167,750,000 samples, 0.24%)</title><rect x="487.2" y="357" width="2.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="490.24" y="367.5" ></text>
</g>
<g >
<title>__virt_addr_valid (24,500,000 samples, 0.04%)</title><rect x="28.5" y="965" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="31.48" y="975.5" ></text>
</g>
<g >
<title>__schedule (90,000,000 samples, 0.13%)</title><rect x="100.5" y="997" width="1.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="103.53" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::operator= (7,250,000 samples, 0.01%)</title><rect x="445.0" y="1125" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="447.95" y="1135.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1109" width="326.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="636.43" y="1119.5" >std::thread::_Invoker&lt;std::tuple&lt;std::functi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (39,500,000 samples, 0.06%)</title><rect x="65.6" y="1109" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="68.61" y="1119.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (7,750,000 samples, 0.01%)</title><rect x="408.6" y="1109" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="411.61" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (37,500,000 samples, 0.05%)</title><rect x="716.0" y="373" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="719.05" y="383.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (24,250,000 samples, 0.03%)</title><rect x="450.0" y="997" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="453.05" y="1007.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (28,500,000 samples, 0.04%)</title><rect x="32.0" y="1029" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="35.03" y="1039.5" ></text>
</g>
<g >
<title>__check_object_size (49,500,000 samples, 0.07%)</title><rect x="28.1" y="981" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="31.09" y="991.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,250,000 samples, 0.01%)</title><rect x="417.5" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="420.45" y="1007.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,000,000 samples, 0.02%)</title><rect x="627.3" y="901" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="630.31" y="911.5" ></text>
</g>
<g >
<title>minilog::details::log_level_name[abi:cxx11] (56,500,000 samples, 0.08%)</title><rect x="452.3" y="949" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="455.33" y="959.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (6,000,000 samples, 0.01%)</title><rect x="536.4" y="917" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="539.38" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (200,500,000 samples, 0.29%)</title><rect x="877.1" y="885" width="3.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="880.12" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (11,250,000 samples, 0.02%)</title><rect x="370.6" y="677" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="373.59" y="687.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (8,750,000 samples, 0.01%)</title><rect x="418.9" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="421.89" y="1119.5" ></text>
</g>
<g >
<title>malloc (7,000,000 samples, 0.01%)</title><rect x="702.9" y="437" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="705.87" y="447.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (44,000,000 samples, 0.06%)</title><rect x="697.9" y="549" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="700.93" y="559.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (21,250,000 samples, 0.03%)</title><rect x="351.0" y="229" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="354.04" y="239.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__format::_Sink&lt;char&gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="814.1" y="549" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="817.10" y="559.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (18,500,000 samples, 0.03%)</title><rect x="46.6" y="933" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="49.58" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,000,000 samples, 0.01%)</title><rect x="547.3" y="949" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="550.26" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,750,000 samples, 0.01%)</title><rect x="851.3" y="821" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="854.33" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (6,250,000 samples, 0.01%)</title><rect x="492.5" y="453" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="495.48" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::imbue@plt (21,500,000 samples, 0.03%)</title><rect x="68.7" y="1109" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="71.75" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14,000,000 samples, 0.02%)</title><rect x="684.4" y="629" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="687.38" y="639.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (67,500,000 samples, 0.10%)</title><rect x="837.4" y="853" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="840.42" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6,500,000 samples, 0.01%)</title><rect x="371.5" y="661" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="374.50" y="671.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;60l, 1l&gt; &gt; (20,750,000 samples, 0.03%)</title><rect x="780.1" y="293" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="783.08" y="303.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;int&gt; (40,750,000 samples, 0.06%)</title><rect x="721.8" y="357" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="724.79" y="367.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (35,250,000 samples, 0.05%)</title><rect x="488.9" y="277" width="0.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="491.86" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14,750,000 samples, 0.02%)</title><rect x="660.2" y="741" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="663.23" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (15,000,000 samples, 0.02%)</title><rect x="1176.2" y="1109" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1179.24" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (65,000,000 samples, 0.09%)</title><rect x="781.6" y="373" width="1.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="784.59" y="383.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (74,250,000 samples, 0.11%)</title><rect x="759.1" y="229" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="762.11" y="239.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (18,750,000 samples, 0.03%)</title><rect x="859.1" y="805" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="862.12" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,250,000 samples, 0.02%)</title><rect x="727.5" y="325" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="730.54" y="335.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (13,500,000 samples, 0.02%)</title><rect x="849.9" y="821" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="852.93" y="831.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::packaged_task&lt;void  (157,250,000 samples, 0.22%)</title><rect x="543.1" y="917" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="546.13" y="927.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (8,000,000 samples, 0.01%)</title><rect x="872.2" y="901" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="875.18" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (9,750,000 samples, 0.01%)</title><rect x="876.5" y="725" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="879.52" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (58,250,000 samples, 0.08%)</title><rect x="372.3" y="725" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="375.34" y="735.5" ></text>
</g>
<g >
<title>std::__format::__formatter_fp&lt;char&gt;::format&lt;long double, std::__format::_Sink_iter&lt;char&gt; &gt; (17,750,000 samples, 0.03%)</title><rect x="419.0" y="1125" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="422.04" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (143,250,000 samples, 0.20%)</title><rect x="345.0" y="149" width="2.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="348.02" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (23,250,000 samples, 0.03%)</title><rect x="702.7" y="453" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="705.69" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (32,750,000 samples, 0.05%)</title><rect x="310.9" y="757" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="313.92" y="767.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (69,000,000 samples, 0.10%)</title><rect x="525.9" y="885" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="528.89" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (23,250,000 samples, 0.03%)</title><rect x="484.2" y="405" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="487.24" y="415.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::advance_to (6,000,000 samples, 0.01%)</title><rect x="812.5" y="517" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="815.47" y="527.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (29,250,000 samples, 0.04%)</title><rect x="654.0" y="789" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="657.05" y="799.5" ></text>
</g>
<g >
<title>do_futex (837,250,000 samples, 1.20%)</title><rect x="130.9" y="1061" width="14.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="133.91" y="1071.5" ></text>
</g>
<g >
<title>std::operator== (20,750,000 samples, 0.03%)</title><rect x="886.8" y="885" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="889.79" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (7,500,000 samples, 0.01%)</title><rect x="724.9" y="309" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="727.95" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_self (17,750,000 samples, 0.03%)</title><rect x="309.4" y="805" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="312.38" y="815.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (8,000,000 samples, 0.01%)</title><rect x="503.3" y="405" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="506.31" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14,500,000 samples, 0.02%)</title><rect x="649.2" y="821" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="652.21" y="831.5" ></text>
</g>
<g >
<title>walk_component (39,000,000 samples, 0.06%)</title><rect x="22.0" y="965" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="24.98" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,000,000 samples, 0.01%)</title><rect x="82.1" y="1077" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="85.11" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="949" width="326.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="636.43" y="959.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13,000,000 samples, 0.02%)</title><rect x="848.4" y="757" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="851.43" y="767.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40,000,000 samples, 0.06%)</title><rect x="773.2" y="341" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="776.23" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,000,000 samples, 0.01%)</title><rect x="834.8" y="853" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="837.78" y="863.5" ></text>
</g>
<g >
<title>std::formatter&lt;int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (81,750,000 samples, 0.12%)</title><rect x="488.6" y="325" width="1.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="491.62" y="335.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;char, long long, unsigned int&gt; (42,750,000 samples, 0.06%)</title><rect x="348.4" y="245" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="351.38" y="255.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (38,250,000 samples, 0.05%)</title><rect x="833.5" y="869" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="836.48" y="879.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (6,500,000 samples, 0.01%)</title><rect x="513.7" y="245" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="516.66" y="255.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2,134,000,000 samples, 3.05%)</title><rect x="325.8" y="517" width="36.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="328.80" y="527.5" >std..</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_date&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (47,750,000 samples, 0.07%)</title><rect x="332.4" y="277" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="335.40" y="287.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;60000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;60l, 1l&gt; &gt; (17,500,000 samples, 0.03%)</title><rect x="780.1" y="277" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="783.09" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (218,500,000 samples, 0.31%)</title><rect x="846.2" y="821" width="3.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="849.23" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (118,750,000 samples, 0.17%)</title><rect x="543.4" y="821" width="2.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="546.40" y="831.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (15,000,000 samples, 0.02%)</title><rect x="761.4" y="133" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="764.44" y="143.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (14,750,000 samples, 0.02%)</title><rect x="393.5" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="396.45" y="1119.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (20,000,000 samples, 0.03%)</title><rect x="697.4" y="549" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="700.39" y="559.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,000,000 samples, 0.02%)</title><rect x="959.4" y="805" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="962.41" y="815.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="446.66" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::packaged_task&lt;void  (6,000,000 samples, 0.01%)</title><rect x="878.1" y="805" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="881.08" y="815.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hours (7,500,000 samples, 0.01%)</title><rect x="783.0" y="373" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="785.96" y="383.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (899,000,000 samples, 1.29%)</title><rect x="754.4" y="325" width="15.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="757.39" y="335.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_WidthPrecVisitor&gt; (6,750,000 samples, 0.01%)</title><rect x="346.4" y="37" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="349.45" y="47.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt; (13,250,000 samples, 0.02%)</title><rect x="651.6" y="805" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="654.65" y="815.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,500,000 samples, 0.02%)</title><rect x="469.8" y="709" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="472.75" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (36,750,000 samples, 0.05%)</title><rect x="702.6" y="469" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="705.55" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (10,250,000 samples, 0.01%)</title><rect x="641.9" y="869" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="644.94" y="879.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (39,250,000 samples, 0.06%)</title><rect x="485.9" y="373" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="488.86" y="383.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (17,750,000 samples, 0.03%)</title><rect x="871.9" y="901" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="874.88" y="911.5" ></text>
</g>
<g >
<title>std::formatter&lt;char const*, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (25,750,000 samples, 0.04%)</title><rect x="362.3" y="613" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="365.34" y="623.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (12,500,000 samples, 0.02%)</title><rect x="823.7" y="629" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="826.67" y="639.5" ></text>
</g>
<g >
<title>futex_wait_setup (7,750,000 samples, 0.01%)</title><rect x="31.8" y="1013" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="34.82" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (33,000,000 samples, 0.05%)</title><rect x="699.5" y="549" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="702.51" y="559.5" ></text>
</g>
<g >
<title>schedule (20,000,000 samples, 0.03%)</title><rect x="553.1" y="837" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.07" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (24,250,000 samples, 0.03%)</title><rect x="367.2" y="773" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="370.23" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (65,500,000 samples, 0.09%)</title><rect x="700.4" y="533" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="703.45" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (26,500,000 samples, 0.04%)</title><rect x="448.3" y="981" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="451.27" y="991.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1141" width="326.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="636.43" y="1151.5" >execute_native_thread_routine</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (20,250,000 samples, 0.03%)</title><rect x="519.2" y="613" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="522.15" y="623.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;char const*&gt; (8,250,000 samples, 0.01%)</title><rect x="650.3" y="805" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="653.33" y="815.5" ></text>
</g>
<g >
<title>futex_wake (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="393.35" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;int, void&gt; (13,000,000 samples, 0.02%)</title><rect x="447.9" y="1013" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="450.93" y="1023.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (91,000,000 samples, 0.13%)</title><rect x="1186.6" y="1141" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1189.55" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (20,750,000 samples, 0.03%)</title><rect x="1171.3" y="1141" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1174.32" y="1151.5" ></text>
</g>
<g >
<title>std::__format::__write_padded&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (9,500,000 samples, 0.01%)</title><rect x="500.7" y="277" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="503.69" y="287.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,967,250,000 samples, 4.24%)</title><rect x="316.2" y="725" width="50.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="319.22" y="735.5" >std::..</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="466.2" y="773" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="469.17" y="783.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (11,250,000 samples, 0.02%)</title><rect x="468.7" y="741" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="471.68" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (7,168,500,000 samples, 10.25%)</title><rect x="694.8" y="613" width="120.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="697.78" y="623.5" >std::chrono::op..</text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (10,000,000 samples, 0.01%)</title><rect x="698.4" y="533" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="701.35" y="543.5" ></text>
</g>
<g >
<title>operator delete (9,750,000 samples, 0.01%)</title><rect x="72.7" y="1061" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="75.72" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,500,000 samples, 0.01%)</title><rect x="660.9" y="741" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="663.91" y="751.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (11,000,000 samples, 0.02%)</title><rect x="455.9" y="885" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="458.86" y="895.5" ></text>
</g>
<g >
<title>std::source_location::line (6,750,000 samples, 0.01%)</title><rect x="366.5" y="757" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="369.48" y="767.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::packaged_task&lt;void  (161,250,000 samples, 0.23%)</title><rect x="873.8" y="709" width="2.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="876.76" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (209,250,000 samples, 0.30%)</title><rect x="542.9" y="949" width="3.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="545.88" y="959.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (13,250,000 samples, 0.02%)</title><rect x="373.3" y="725" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="376.32" y="735.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (16,000,000 samples, 0.02%)</title><rect x="732.8" y="277" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="735.77" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (141,750,000 samples, 0.20%)</title><rect x="1175.6" y="1125" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1178.64" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::out (7,500,000 samples, 0.01%)</title><rect x="671.0" y="773" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="674.02" y="783.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (23,000,000 samples, 0.03%)</title><rect x="728.3" y="309" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="731.32" y="319.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;86400000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; (12,500,000 samples, 0.02%)</title><rect x="773.6" y="277" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="776.63" y="287.5" ></text>
</g>
<g >
<title>std::format_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, long, unsigned int const&amp;&gt; (1,250,750,000 samples, 1.79%)</title><rect x="751.7" y="357" width="21.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="754.70" y="367.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (6,500,000 samples, 0.01%)</title><rect x="774.2" y="341" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="777.21" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,750,000 samples, 0.01%)</title><rect x="341.8" y="277" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="344.77" y="287.5" ></text>
</g>
<g >
<title>std::locale::locale (36,500,000 samples, 0.05%)</title><rect x="435.5" y="1093" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="438.47" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (8,750,000 samples, 0.01%)</title><rect x="686.8" y="613" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="689.82" y="623.5" ></text>
</g>
<g >
<title>std::formatter&lt;char, char&gt;::parse (22,500,000 samples, 0.03%)</title><rect x="762.3" y="229" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="765.30" y="239.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::operator[] (6,000,000 samples, 0.01%)</title><rect x="720.6" y="373" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="723.56" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (9,500,000 samples, 0.01%)</title><rect x="348.7" y="213" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="351.74" y="223.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (13,000,000 samples, 0.02%)</title><rect x="539.1" y="949" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="542.13" y="959.5" ></text>
</g>
<g >
<title>std::to_chars (86,500,000 samples, 0.12%)</title><rect x="864.0" y="709" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="867.04" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (9,250,000 samples, 0.01%)</title><rect x="379.5" y="933" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="382.51" y="943.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (6,750,000 samples, 0.01%)</title><rect x="518.8" y="549" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="521.81" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (18,250,000 samples, 0.03%)</title><rect x="438.5" y="1013" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="441.54" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (39,000,000 samples, 0.06%)</title><rect x="362.8" y="597" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="365.81" y="607.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;void  (154,750,000 samples, 0.22%)</title><rect x="543.2" y="901" width="2.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="546.17" y="911.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (14,000,000 samples, 0.02%)</title><rect x="822.3" y="645" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="825.28" y="655.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (323,000,000 samples, 0.46%)</title><rect x="133.3" y="1029" width="5.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="136.28" y="1039.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::formatter (21,000,000 samples, 0.03%)</title><rect x="818.1" y="677" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="821.14" y="687.5" ></text>
</g>
<g >
<title>units_test (69,952,250,000 samples, 100.00%)</title><rect x="10.0" y="1157" width="1180.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >units_test</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (7,542,500,000 samples, 10.78%)</title><rect x="690.7" y="645" width="127.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="693.72" y="655.5" >std::__format::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,250,000 samples, 0.01%)</title><rect x="703.3" y="453" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="706.28" y="463.5" ></text>
</g>
<g >
<title>std::locale::classic (7,000,000 samples, 0.01%)</title><rect x="815.9" y="613" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="818.85" y="623.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_hms&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (511,500,000 samples, 0.73%)</title><rect x="772.9" y="373" width="8.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="775.90" y="383.5" ></text>
</g>
<g >
<title>lookup_fast (88,750,000 samples, 0.13%)</title><rect x="23.7" y="965" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="26.75" y="975.5" ></text>
</g>
<g >
<title>try_to_wake_up (18,250,000 samples, 0.03%)</title><rect x="438.5" y="997" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="441.54" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (4,049,500,000 samples, 5.79%)</title><rect x="559.0" y="869" width="68.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="562.00" y="879.5" >futex_w..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8,500,000 samples, 0.01%)</title><rect x="342.5" y="245" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="345.49" y="255.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::XmlReporter::log_assert (11,000,000 samples, 0.02%)</title><rect x="390.3" y="1125" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="393.30" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (54,250,000 samples, 0.08%)</title><rect x="781.7" y="357" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="784.66" y="367.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (216,250,000 samples, 0.31%)</title><rect x="723.8" y="341" width="3.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="726.81" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (7,000,000 samples, 0.01%)</title><rect x="806.8" y="389" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="809.77" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10,000,000 samples, 0.01%)</title><rect x="427.7" y="1093" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="430.74" y="1103.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (16,500,000 samples, 0.02%)</title><rect x="738.1" y="149" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="741.14" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (19,000,000 samples, 0.03%)</title><rect x="427.2" y="1093" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="430.17" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (177,000,000 samples, 0.25%)</title><rect x="652.4" y="837" width="3.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="655.42" y="847.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,250,000 samples, 0.01%)</title><rect x="868.3" y="821" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="871.32" y="831.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (14,500,000 samples, 0.02%)</title><rect x="74.2" y="1029" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="77.24" y="1039.5" ></text>
</g>
<g >
<title>try_to_wake_up (7,500,000 samples, 0.01%)</title><rect x="390.4" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="393.36" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,500,000 samples, 0.01%)</title><rect x="844.9" y="821" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="847.92" y="831.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (16,000,000 samples, 0.02%)</title><rect x="764.4" y="149" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="767.37" y="159.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (8,000,000 samples, 0.01%)</title><rect x="316.5" y="693" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="319.48" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;ankerl::nanobench::detail::fmt::MarkDownColumn, std::allocator&lt;ankerl::nanobench::detail::fmt::MarkDownColumn&gt; &gt;::_M_realloc_insert&lt;int, int, char const  (36,750,000 samples, 0.05%)</title><rect x="439.6" y="1125" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="442.56" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (147,250,000 samples, 0.21%)</title><rect x="874.0" y="661" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="876.99" y="671.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (51,250,000 samples, 0.07%)</title><rect x="372.4" y="709" width="0.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="375.36" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (35,000,000 samples, 0.05%)</title><rect x="723.1" y="341" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="726.13" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (17,750,000 samples, 0.03%)</title><rect x="671.2" y="773" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="674.23" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (8,000,000 samples, 0.01%)</title><rect x="328.3" y="357" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="331.30" y="367.5" ></text>
</g>
<g >
<title>from_kuid_munged (16,250,000 samples, 0.02%)</title><rect x="17.0" y="1029" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="20.02" y="1039.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (10,000,000 samples, 0.01%)</title><rect x="74.6" y="1061" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="77.56" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::name (84,500,000 samples, 0.12%)</title><rect x="69.4" y="1109" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="72.45" y="1119.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (6,250,000 samples, 0.01%)</title><rect x="472.1" y="661" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="475.06" y="671.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::rend (33,000,000 samples, 0.05%)</title><rect x="771.0" y="309" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="774.03" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (12,000,000 samples, 0.02%)</title><rect x="408.9" y="1109" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="411.93" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (14,250,000 samples, 0.02%)</title><rect x="440.5" y="1013" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="443.53" y="1023.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (74,250,000 samples, 0.11%)</title><rect x="66.3" y="1109" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="69.27" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (27,750,000 samples, 0.04%)</title><rect x="691.0" y="629" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="694.01" y="639.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (13,250,000 samples, 0.02%)</title><rect x="541.0" y="949" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="543.99" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,000,000 samples, 0.01%)</title><rect x="656.3" y="805" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="659.31" y="815.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_WidthPrecVisitor, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (15,000,000 samples, 0.02%)</title><rect x="499.9" y="245" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="502.88" y="255.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::formatter (25,750,000 samples, 0.04%)</title><rect x="818.1" y="693" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="821.06" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (15,500,000 samples, 0.02%)</title><rect x="346.7" y="69" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="349.68" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (23,750,000 samples, 0.03%)</title><rect x="76.7" y="1077" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="79.67" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (9,250,000 samples, 0.01%)</title><rect x="480.1" y="469" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="483.06" y="479.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (13,500,000 samples, 0.02%)</title><rect x="498.3" y="293" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="501.29" y="303.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,750,000 samples, 0.01%)</title><rect x="468.2" y="709" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="471.22" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,000,000 samples, 0.01%)</title><rect x="547.1" y="949" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="550.11" y="959.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::locale (6,000,000 samples, 0.01%)</title><rect x="748.2" y="341" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="751.18" y="351.5" ></text>
</g>
<g >
<title>std::condition_variable::wait (84,000,000 samples, 0.12%)</title><rect x="635.9" y="917" width="1.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="638.88" y="927.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (6,250,000 samples, 0.01%)</title><rect x="476.7" y="597" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="479.70" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (133,750,000 samples, 0.19%)</title><rect x="874.1" y="629" width="2.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="877.06" y="639.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::formatter (9,250,000 samples, 0.01%)</title><rect x="517.0" y="517" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="519.98" y="527.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::basic_format_context (12,250,000 samples, 0.02%)</title><rect x="813.2" y="533" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="816.25" y="543.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (8,250,000 samples, 0.01%)</title><rect x="507.5" y="469" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="510.48" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (22,750,000 samples, 0.03%)</title><rect x="354.4" y="213" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="357.35" y="223.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (3,083,750,000 samples, 4.41%)</title><rect x="470.1" y="741" width="52.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="473.08" y="751.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,250,000 samples, 0.01%)</title><rect x="701.1" y="517" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="704.10" y="527.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;86400l, 1l&gt;, void&gt; (11,750,000 samples, 0.02%)</title><rect x="781.1" y="325" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="784.14" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (78,500,000 samples, 0.11%)</title><rect x="642.6" y="869" width="1.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="645.62" y="879.5" ></text>
</g>
<g >
<title>futex_wake (9,750,000 samples, 0.01%)</title><rect x="381.4" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="384.44" y="1039.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (14,750,000 samples, 0.02%)</title><rect x="694.4" y="565" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="697.37" y="575.5" ></text>
</g>
<g >
<title>try_to_unlazy (51,000,000 samples, 0.07%)</title><rect x="44.4" y="965" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="47.37" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,335,000,000 samples, 1.91%)</title><rect x="96.1" y="1093" width="22.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="99.14" y="1103.5" >d..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,000,000 samples, 0.01%)</title><rect x="761.7" y="133" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="764.70" y="143.5" ></text>
</g>
<g >
<title>minilog::details::output_log (3,343,500,000 samples, 4.78%)</title><rect x="310.2" y="773" width="56.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="313.19" y="783.5" >minil..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,500,000 samples, 0.01%)</title><rect x="848.9" y="757" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="851.86" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,250,000 samples, 0.01%)</title><rect x="428.1" y="1077" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="431.14" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (30,000,000 samples, 0.04%)</title><rect x="333.3" y="277" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="336.29" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,500,000 samples, 0.01%)</title><rect x="1179.9" y="1109" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1182.92" y="1119.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned short, char const*&gt; (9,000,000 samples, 0.01%)</title><rect x="735.5" y="165" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="738.54" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (7,000,000 samples, 0.01%)</title><rect x="723.3" y="325" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="726.32" y="335.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="549.2" y="981" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="552.19" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (51,500,000 samples, 0.07%)</title><rect x="315.1" y="693" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="318.07" y="703.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (6,000,000 samples, 0.01%)</title><rect x="843.4" y="805" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="846.45" y="815.5" ></text>
</g>
<g >
<title>wake_up_q (13,750,000 samples, 0.02%)</title><rect x="393.5" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="396.47" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,750,000 samples, 0.01%)</title><rect x="723.6" y="325" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="726.56" y="335.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (88,000,000 samples, 0.13%)</title><rect x="517.2" y="501" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="520.16" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (52,000,000 samples, 0.07%)</title><rect x="557.0" y="949" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="559.98" y="959.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (6,000,000 samples, 0.01%)</title><rect x="352.4" y="245" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="355.38" y="255.5" ></text>
</g>
<g >
<title>std::locale::locale (6,750,000 samples, 0.01%)</title><rect x="813.3" y="517" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="816.33" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (14,250,000 samples, 0.02%)</title><rect x="440.5" y="997" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="443.53" y="1007.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_days&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (20,250,000 samples, 0.03%)</title><rect x="332.4" y="261" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="335.43" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,000,000 samples, 0.01%)</title><rect x="532.0" y="917" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="535.00" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,500,000 samples, 0.03%)</title><rect x="353.9" y="229" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="356.89" y="239.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (16,750,000 samples, 0.02%)</title><rect x="461.6" y="837" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="464.59" y="847.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (12,250,000 samples, 0.02%)</title><rect x="869.9" y="837" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="872.90" y="847.5" ></text>
</g>
<g >
<title>do_futex (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="433.50" y="1055.5" ></text>
</g>
<g >
<title>__once_proxy (12,000,000 samples, 0.02%)</title><rect x="304.6" y="1125" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="307.62" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (6,000,000 samples, 0.01%)</title><rect x="326.5" y="453" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="329.47" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (45,500,000 samples, 0.07%)</title><rect x="83.4" y="1093" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="86.37" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::time_zone_link::name (31,000,000 samples, 0.04%)</title><rect x="70.9" y="1109" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="73.87" y="1119.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (15,750,000 samples, 0.02%)</title><rect x="553.1" y="805" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="556.14" y="815.5" ></text>
</g>
<g >
<title>wake_up_q (349,500,000 samples, 0.50%)</title><rect x="34.6" y="1013" width="5.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="37.56" y="1023.5" ></text>
</g>
<g >
<title>plist_del (7,000,000 samples, 0.01%)</title><rect x="972.1" y="1013" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="975.14" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (6,453,250,000 samples, 9.23%)</title><rect x="705.2" y="549" width="108.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="708.24" y="559.5" >std::__format..</text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (56,500,000 samples, 0.08%)</title><rect x="513.3" y="325" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="516.27" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (13,500,000 samples, 0.02%)</title><rect x="389.9" y="997" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="392.95" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (13,500,000 samples, 0.02%)</title><rect x="329.7" y="421" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="332.70" y="431.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_S&lt;std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,497,000,000 samples, 2.14%)</title><rect x="747.6" y="373" width="25.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="750.60" y="383.5" >s..</text>
</g>
<g >
<title>__gthread_mutex_unlock (9,500,000 samples, 0.01%)</title><rect x="627.7" y="949" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="630.66" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (29,500,000 samples, 0.04%)</title><rect x="850.8" y="805" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="853.83" y="815.5" ></text>
</g>
<g >
<title>__memchr_avx2 (42,000,000 samples, 0.06%)</title><rect x="768.5" y="293" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="771.52" y="303.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::_S_abs (6,750,000 samples, 0.01%)</title><rect x="349.7" y="245" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="352.69" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6,000,000 samples, 0.01%)</title><rect x="761.5" y="117" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="764.52" y="127.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (8,720,500,000 samples, 12.47%)</title><rect x="678.0" y="725" width="147.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="681.02" y="735.5" >std::__format::_Fo..</text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (18,750,000 samples, 0.03%)</title><rect x="540.6" y="949" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="543.57" y="959.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (110,750,000 samples, 0.16%)</title><rect x="862.0" y="709" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="865.05" y="719.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (22,500,000 samples, 0.03%)</title><rect x="487.9" y="293" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="490.89" y="303.5" ></text>
</g>
<g >
<title>all (69,952,250,000 samples, 100%)</title><rect x="10.0" y="1173" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (42,000,000 samples, 0.06%)</title><rect x="836.0" y="853" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="839.00" y="863.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (19,750,000 samples, 0.03%)</title><rect x="47.7" y="949" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="50.66" y="959.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (42,000,000 samples, 0.06%)</title><rect x="777.0" y="325" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="779.99" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum_to_val&lt;false&gt; (7,500,000 samples, 0.01%)</title><rect x="810.0" y="341" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="812.97" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,250,000 samples, 0.01%)</title><rect x="1178.1" y="1125" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1181.11" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (6,500,000 samples, 0.01%)</title><rect x="861.4" y="709" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="864.39" y="719.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (26,250,000 samples, 0.04%)</title><rect x="522.6" y="773" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="525.58" y="783.5" ></text>
</g>
<g >
<title>__get_user_8 (520,250,000 samples, 0.74%)</title><rect x="108.8" y="1029" width="8.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="111.83" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (58,750,000 samples, 0.08%)</title><rect x="306.8" y="1093" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="309.83" y="1103.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (42,250,000 samples, 0.06%)</title><rect x="362.8" y="613" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="365.77" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (10,500,000 samples, 0.02%)</title><rect x="874.3" y="597" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="877.35" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (12,500,000 samples, 0.02%)</title><rect x="849.4" y="789" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="852.35" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (37,500,000 samples, 0.05%)</title><rect x="712.2" y="389" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="715.15" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__extent_storage&lt;18446744073709551615ul&gt;::_M_extent (6,250,000 samples, 0.01%)</title><rect x="727.2" y="293" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="730.21" y="303.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (26,250,000 samples, 0.04%)</title><rect x="336.7" y="181" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="339.66" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14,750,000 samples, 0.02%)</title><rect x="1179.6" y="1109" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1182.61" y="1119.5" ></text>
</g>
<g >
<title>std::formatter&lt;char, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (103,000,000 samples, 0.15%)</title><rect x="760.6" y="229" width="1.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="763.56" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (10,250,000 samples, 0.01%)</title><rect x="1168.9" y="1125" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1171.86" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (20,250,000 samples, 0.03%)</title><rect x="679.5" y="693" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="682.46" y="703.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;void  (134,000,000 samples, 0.19%)</title><rect x="878.2" y="821" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="881.18" y="831.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (40,250,000 samples, 0.06%)</title><rect x="669.8" y="741" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="672.81" y="751.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::function&lt;void  (33,250,000 samples, 0.05%)</title><rect x="883.0" y="869" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="885.97" y="879.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,440,250,000 samples, 3.49%)</title><rect x="477.8" y="597" width="41.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="480.77" y="607.5" >std..</text>
</g>
<g >
<title>kmem_cache_free.part.0 (11,250,000 samples, 0.02%)</title><rect x="28.9" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.94" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29,750,000 samples, 0.04%)</title><rect x="315.1" y="661" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="318.15" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (16,250,000 samples, 0.02%)</title><rect x="745.0" y="357" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="747.99" y="367.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (22,750,000 samples, 0.03%)</title><rect x="356.8" y="101" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="359.81" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,000,000 samples, 0.01%)</title><rect x="745.3" y="357" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="748.27" y="367.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (47,250,000 samples, 0.07%)</title><rect x="142.6" y="1013" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="145.64" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,250,000 samples, 0.01%)</title><rect x="331.6" y="277" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="334.57" y="287.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="781.2" y="309" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="784.23" y="319.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;86400l, 1l&gt;, void&gt; (9,500,000 samples, 0.01%)</title><rect x="481.3" y="389" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="484.29" y="399.5" ></text>
</g>
<g >
<title>std::chrono::tzdb::current_zone (46,000,000 samples, 0.07%)</title><rect x="409.1" y="1109" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="412.13" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::ratio&lt;1l, 86400000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,750,000 samples, 0.01%)</title><rect x="717.1" y="293" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="720.05" y="303.5" ></text>
</g>
<g >
<title>[unknown] (29,500,000 samples, 0.04%)</title><rect x="850.8" y="773" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="853.83" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,500,000 samples, 0.01%)</title><rect x="726.0" y="261" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="728.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (154,750,000 samples, 0.22%)</title><rect x="846.5" y="789" width="2.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="849.51" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (172,750,000 samples, 0.25%)</title><rect x="543.0" y="933" width="2.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="546.01" y="943.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (12,000,000 samples, 0.02%)</title><rect x="860.3" y="789" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="863.29" y="799.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (38,750,000 samples, 0.06%)</title><rect x="679.2" y="709" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="682.24" y="719.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;long&gt; (8,750,000 samples, 0.01%)</title><rect x="752.5" y="325" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="755.46" y="335.5" ></text>
</g>
<g >
<title>doctest::assertString (6,000,000 samples, 0.01%)</title><rect x="394.2" y="1125" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="397.25" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (186,750,000 samples, 0.27%)</title><rect x="658.5" y="805" width="3.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="661.48" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_get_width&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (53,250,000 samples, 0.08%)</title><rect x="763.1" y="181" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="766.14" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (8,750,000 samples, 0.01%)</title><rect x="471.3" y="677" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="474.33" y="687.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,216,750,000 samples, 3.17%)</title><rect x="324.7" y="565" width="37.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="327.71" y="575.5" >std..</text>
</g>
<g >
<title>do_syscall_64 (11,796,250,000 samples, 16.86%)</title><rect x="969.6" y="1109" width="199.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="972.61" y="1119.5" >do_syscall_64</text>
</g>
<g >
<title>do_syscall_64 (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1077" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="392.95" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (151,250,000 samples, 0.22%)</title><rect x="762.9" y="197" width="2.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="765.94" y="207.5" ></text>
</g>
<g >
<title>get_futex_key (9,750,000 samples, 0.01%)</title><rect x="163.7" y="1029" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="166.69" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,500,000 samples, 0.01%)</title><rect x="418.9" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="421.90" y="1071.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (6,000,000 samples, 0.01%)</title><rect x="844.0" y="837" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="846.98" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (139,000,000 samples, 0.20%)</title><rect x="511.9" y="389" width="2.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="514.95" y="399.5" ></text>
</g>
<g >
<title>std::chrono::(anonymous namespace)::ZoneInfo::until (17,000,000 samples, 0.02%)</title><rect x="682.1" y="661" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="685.06" y="671.5" ></text>
</g>
<g >
<title>std::ios_base::imbue (19,250,000 samples, 0.03%)</title><rect x="84.2" y="1109" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="87.24" y="1119.5" ></text>
</g>
<g >
<title>std::formatter&lt;unsigned int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (225,500,000 samples, 0.32%)</title><rect x="861.8" y="741" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="864.76" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (128,250,000 samples, 0.18%)</title><rect x="460.1" y="885" width="2.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="463.14" y="895.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (53,250,000 samples, 0.08%)</title><rect x="858.9" y="821" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="861.92" y="831.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (18,250,000 samples, 0.03%)</title><rect x="29.2" y="1029" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="32.15" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (17,250,000 samples, 0.02%)</title><rect x="367.3" y="757" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="370.34" y="767.5" ></text>
</g>
<g >
<title>std::mutex::unlock (4,161,500,000 samples, 5.95%)</title><rect x="558.1" y="965" width="70.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="561.11" y="975.5" >std::mu..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (33,250,000 samples, 0.05%)</title><rect x="32.0" y="1045" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="34.97" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::_S_from_days (51,750,000 samples, 0.07%)</title><rect x="718.1" y="341" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="721.05" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (22,000,000 samples, 0.03%)</title><rect x="1185.5" y="1109" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1188.47" y="1119.5" ></text>
</g>
<g >
<title>__get_user_nocheck_4 (27,750,000 samples, 0.04%)</title><rect x="104.3" y="1013" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="107.33" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14,500,000 samples, 0.02%)</title><rect x="848.4" y="773" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="851.41" y="783.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::data (7,250,000 samples, 0.01%)</title><rect x="771.3" y="277" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="774.26" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (131,750,000 samples, 0.19%)</title><rect x="1181.8" y="1125" width="2.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1184.78" y="1135.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6,000,000 samples, 0.01%)</title><rect x="451.9" y="965" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="454.85" y="975.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::function&lt;void  (10,500,000 samples, 0.02%)</title><rect x="547.5" y="965" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="550.46" y="975.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (234,750,000 samples, 0.34%)</title><rect x="355.0" y="245" width="4.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="358.02" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, threadpool::ThreadPool::submit&lt;test (182,750,000 samples, 0.26%)</title><rect x="877.4" y="869" width="3.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="880.42" y="879.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 5ul&gt; (57,750,000 samples, 0.08%)</title><rect x="312.8" y="725" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="315.82" y="735.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (6,000,000 samples, 0.01%)</title><rect x="686.9" y="581" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="689.86" y="591.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (390,500,000 samples, 0.56%)</title><rect x="887.2" y="885" width="6.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="890.22" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (195,250,000 samples, 0.28%)</title><rect x="71.7" y="1093" width="3.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="74.68" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (6,750,000 samples, 0.01%)</title><rect x="661.1" y="773" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="664.09" y="783.5" ></text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (146,500,000 samples, 0.21%)</title><rect x="798.8" y="229" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="801.77" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;ankerl::nanobench::detail::fmt::MarkDownColumn, std::allocator&lt;ankerl::nanobench::detail::fmt::MarkDownColumn&gt; &gt;::emplace_back&lt;int, int, char const  (27,500,000 samples, 0.04%)</title><rect x="440.3" y="1125" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="443.32" y="1135.5" ></text>
</g>
<g >
<title>futex_wake (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="421.66" y="1039.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (71,500,000 samples, 0.10%)</title><rect x="792.5" y="293" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="795.48" y="303.5" ></text>
</g>
<g >
<title>std::format_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, long, unsigned int const&amp;&gt; (514,500,000 samples, 0.74%)</title><rect x="494.8" y="453" width="8.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="497.85" y="463.5" ></text>
</g>
<g >
<title>do_futex (14,500,000 samples, 0.02%)</title><rect x="393.5" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="396.46" y="1055.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (43,000,000 samples, 0.06%)</title><rect x="523.2" y="789" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="526.24" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (7,500,000 samples, 0.01%)</title><rect x="329.6" y="421" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="332.57" y="431.5" ></text>
</g>
<g >
<title>hash_futex (55,500,000 samples, 0.08%)</title><rect x="144.1" y="1013" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="147.09" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (138,000,000 samples, 0.20%)</title><rect x="796.3" y="213" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="799.28" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::numpunct&lt;char&gt;::decimal_point (6,000,000 samples, 0.01%)</title><rect x="341.9" y="277" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="344.94" y="287.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (4,099,750,000 samples, 5.86%)</title><rect x="458.4" y="917" width="69.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="461.42" y="927.5" >std::__..</text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (8,000,000 samples, 0.01%)</title><rect x="439.6" y="1109" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="442.56" y="1119.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (8,000,000 samples, 0.01%)</title><rect x="668.9" y="725" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="671.91" y="735.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (14,250,000 samples, 0.02%)</title><rect x="1185.2" y="1093" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1188.21" y="1103.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (7,750,000 samples, 0.01%)</title><rect x="740.9" y="309" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="743.94" y="319.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (99,500,000 samples, 0.14%)</title><rect x="145.0" y="1077" width="1.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="148.03" y="1087.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (78,250,000 samples, 0.11%)</title><rect x="768.1" y="309" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="771.05" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (37,750,000 samples, 0.05%)</title><rect x="509.5" y="421" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="512.54" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,500,000 samples, 0.01%)</title><rect x="646.4" y="821" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="649.38" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,500,000 samples, 0.02%)</title><rect x="393.5" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="396.46" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (63,750,000 samples, 0.09%)</title><rect x="353.8" y="245" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="356.84" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (8,250,000 samples, 0.01%)</title><rect x="418.9" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="421.90" y="1007.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_List (13,500,000 samples, 0.02%)</title><rect x="851.1" y="741" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="854.10" y="751.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (7,500,000 samples, 0.01%)</title><rect x="436.2" y="1125" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="439.16" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (233,750,000 samples, 0.33%)</title><rect x="873.2" y="773" width="3.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="876.17" y="783.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (8,000,000 samples, 0.01%)</title><rect x="869.3" y="821" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="872.31" y="831.5" ></text>
</g>
<g >
<title>_int_free (9,500,000 samples, 0.01%)</title><rect x="13.1" y="1093" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.09" y="1103.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::rend (11,250,000 samples, 0.02%)</title><rect x="455.6" y="901" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="458.58" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,750,000 samples, 0.01%)</title><rect x="417.2" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="420.20" y="1087.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (6,000,000 samples, 0.01%)</title><rect x="67.5" y="1109" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="70.53" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,750,000 samples, 0.01%)</title><rect x="789.2" y="261" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="792.21" y="271.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;void&gt;::_M_destroy (8,000,000 samples, 0.01%)</title><rect x="875.0" y="517" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="877.98" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (9,250,000 samples, 0.01%)</title><rect x="439.0" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="442.02" y="1007.5" ></text>
</g>
<g >
<title>operator delete (62,000,000 samples, 0.09%)</title><rect x="61.4" y="1109" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="64.40" y="1119.5" ></text>
</g>
<g >
<title>std::locale::~locale (14,000,000 samples, 0.02%)</title><rect x="804.3" y="373" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="807.29" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="446.66" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (8,250,000 samples, 0.01%)</title><rect x="707.8" y="485" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="710.75" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,000,000 samples, 0.01%)</title><rect x="716.5" y="325" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="719.49" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,000,000 samples, 0.01%)</title><rect x="790.3" y="293" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="793.32" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::packaged_task&lt;void  (164,500,000 samples, 0.24%)</title><rect x="873.7" y="725" width="2.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="876.73" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13,500,000 samples, 0.02%)</title><rect x="745.4" y="341" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="748.43" y="351.5" ></text>
</g>
<g >
<title>[unknown] (126,000,000 samples, 0.18%)</title><rect x="434.0" y="1109" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="436.96" y="1119.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (29,750,000 samples, 0.04%)</title><rect x="642.1" y="869" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="645.11" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (19,000,000 samples, 0.03%)</title><rect x="745.4" y="357" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="748.37" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (8,500,000 samples, 0.01%)</title><rect x="361.0" y="421" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="364.03" y="431.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (33,250,000 samples, 0.05%)</title><rect x="498.7" y="277" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="501.72" y="287.5" ></text>
</g>
<g >
<title>__check_object_size (92,000,000 samples, 0.13%)</title><rect x="50.8" y="997" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="53.75" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="418.32" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7,750,000 samples, 0.01%)</title><rect x="326.1" y="485" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="329.11" y="495.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; &gt; (13,750,000 samples, 0.02%)</title><rect x="506.5" y="453" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="509.45" y="463.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (61,000,000 samples, 0.09%)</title><rect x="792.6" y="277" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="795.57" y="287.5" ></text>
</g>
<g >
<title>futex_wake (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="394.49" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (63,000,000 samples, 0.09%)</title><rect x="689.4" y="645" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="692.41" y="655.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 2ul&gt; (21,250,000 samples, 0.03%)</title><rect x="368.3" y="757" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="371.29" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="433.50" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (13,250,000 samples, 0.02%)</title><rect x="331.8" y="229" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="334.82" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (15,750,000 samples, 0.02%)</title><rect x="307.6" y="1077" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="310.55" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15,000,000 samples, 0.02%)</title><rect x="323.0" y="549" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="326.00" y="559.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (8,500,000 samples, 0.01%)</title><rect x="353.2" y="229" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="356.17" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (47,250,000 samples, 0.07%)</title><rect x="370.4" y="709" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="373.38" y="719.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (8,828,000,000 samples, 12.62%)</title><rect x="676.9" y="741" width="148.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="679.85" y="751.5" >std::basic_format_a..</text>
</g>
<g >
<title>__check_object_size (42,250,000 samples, 0.06%)</title><rect x="49.5" y="981" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="52.45" y="991.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (20,000,000 samples, 0.03%)</title><rect x="362.4" y="581" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="365.37" y="591.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (15,500,000 samples, 0.02%)</title><rect x="759.6" y="181" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="762.57" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (7,250,000 samples, 0.01%)</title><rect x="1179.5" y="1109" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1182.49" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;3600l, 1l&gt;, void&gt; (41,500,000 samples, 0.06%)</title><rect x="778.8" y="309" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="781.83" y="319.5" ></text>
</g>
<g >
<title>try_to_unlazy (77,250,000 samples, 0.11%)</title><rect x="19.4" y="965" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="22.36" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (19,500,000 samples, 0.03%)</title><rect x="311.5" y="757" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="314.48" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1077" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="441.54" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (11,500,000 samples, 0.02%)</title><rect x="809.9" y="373" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="812.90" y="383.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (104,000,000 samples, 0.15%)</title><rect x="356.5" y="149" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="359.53" y="159.5" ></text>
</g>
<g >
<title>do_futex (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="418.32" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (22,250,000 samples, 0.03%)</title><rect x="1182.4" y="1093" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1185.37" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (7,000,000 samples, 0.01%)</title><rect x="370.6" y="661" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="373.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (56,750,000 samples, 0.08%)</title><rect x="81.2" y="1077" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="84.15" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (28,500,000 samples, 0.04%)</title><rect x="374.6" y="613" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="377.64" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,500,000 samples, 0.02%)</title><rect x="660.7" y="757" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="663.67" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (8,000,000 samples, 0.01%)</title><rect x="689.1" y="613" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="692.13" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,778,750,000 samples, 2.54%)</title><rect x="128.9" y="1109" width="30.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="131.88" y="1119.5" >en..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,500,000 samples, 0.02%)</title><rect x="456.7" y="917" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="459.73" y="927.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (8,250,000 samples, 0.01%)</title><rect x="731.2" y="245" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="734.21" y="255.5" ></text>
</g>
<g >
<title>__memchr_avx2 (64,250,000 samples, 0.09%)</title><rect x="829.3" y="773" width="1.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="832.35" y="783.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (24,750,000 samples, 0.04%)</title><rect x="689.8" y="597" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="692.82" y="607.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 3ul&gt; (35,750,000 samples, 0.05%)</title><rect x="348.4" y="229" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="351.44" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12,500,000 samples, 0.02%)</title><rect x="385.2" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="388.17" y="1071.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::reserve (9,750,000 samples, 0.01%)</title><rect x="1186.4" y="1141" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1189.39" y="1151.5" ></text>
</g>
<g >
<title>wake_up_q (8,250,000 samples, 0.01%)</title><rect x="418.9" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="421.90" y="1023.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,000,000 samples, 0.01%)</title><rect x="862.8" y="645" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="865.78" y="655.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt;::_S_make_elt&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (28,750,000 samples, 0.04%)</title><rect x="697.3" y="565" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="700.26" y="575.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (18,500,000 samples, 0.03%)</title><rect x="817.0" y="629" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="819.98" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (11,750,000 samples, 0.02%)</title><rect x="685.6" y="597" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="688.60" y="607.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_days&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (31,750,000 samples, 0.05%)</title><rect x="481.0" y="453" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="484.04" y="463.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="391.85" y="1119.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (9,750,000 samples, 0.01%)</title><rect x="883.2" y="789" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="886.23" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11,000,000 samples, 0.02%)</title><rect x="325.1" y="501" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="328.09" y="511.5" ></text>
</g>
<g >
<title>std::future&lt;void&gt;::future (27,000,000 samples, 0.04%)</title><rect x="546.6" y="981" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="549.58" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;char const*&gt; (18,500,000 samples, 0.03%)</title><rect x="650.2" y="837" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="653.16" y="847.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (23,000,000 samples, 0.03%)</title><rect x="778.0" y="325" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="781.03" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (31,250,000 samples, 0.04%)</title><rect x="645.0" y="821" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="648.02" y="831.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (239,750,000 samples, 0.34%)</title><rect x="336.4" y="229" width="4.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="339.39" y="239.5" ></text>
</g>
<g >
<title>std::__format::__int_from_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (35,750,000 samples, 0.05%)</title><rect x="763.2" y="165" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="766.22" y="175.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (30,000,000 samples, 0.04%)</title><rect x="755.3" y="309" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="758.28" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (28,750,000 samples, 0.04%)</title><rect x="10.4" y="1125" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.39" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (47,750,000 samples, 0.07%)</title><rect x="328.0" y="421" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="331.05" y="431.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (7,000,000 samples, 0.01%)</title><rect x="344.8" y="181" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="347.77" y="191.5" ></text>
</g>
<g >
<title>do_futex (34,250,000 samples, 0.05%)</title><rect x="307.0" y="1061" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="309.98" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (7,250,000 samples, 0.01%)</title><rect x="412.7" y="1125" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="415.71" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (14,000,000 samples, 0.02%)</title><rect x="363.7" y="549" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="366.68" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_futex (14,500,000 samples, 0.02%)</title><rect x="393.5" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="396.46" y="1071.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="454.7" y="901" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="457.73" y="911.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (17,250,000 samples, 0.02%)</title><rect x="806.9" y="389" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="809.92" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (8,750,000 samples, 0.01%)</title><rect x="446.2" y="1093" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="449.22" y="1103.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (8,250,000 samples, 0.01%)</title><rect x="696.5" y="533" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="699.54" y="543.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (39,750,000 samples, 0.06%)</title><rect x="336.6" y="213" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="339.56" y="223.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::is_open (22,000,000 samples, 0.03%)</title><rect x="838.6" y="869" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="841.63" y="879.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_get_width&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (24,750,000 samples, 0.04%)</title><rect x="499.8" y="277" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="502.79" y="287.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (109,500,000 samples, 0.16%)</title><rect x="792.2" y="309" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="795.20" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (14,000,000 samples, 0.02%)</title><rect x="328.2" y="373" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="331.23" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (23,750,000 samples, 0.03%)</title><rect x="347.8" y="213" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="350.77" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::release (10,500,000 samples, 0.02%)</title><rect x="379.5" y="949" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="382.49" y="959.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (13,250,000 samples, 0.02%)</title><rect x="819.4" y="645" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="822.40" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18,750,000 samples, 0.03%)</title><rect x="692.7" y="581" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="695.73" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;test (4,105,500,000 samples, 5.87%)</title><rect x="309.1" y="885" width="69.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="312.12" y="895.5" >std::_B..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (30,250,000 samples, 0.04%)</title><rect x="328.1" y="389" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="331.14" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12,750,000 samples, 0.02%)</title><rect x="310.6" y="725" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="313.60" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (200,250,000 samples, 0.29%)</title><rect x="373.7" y="709" width="3.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="376.68" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (42,250,000 samples, 0.06%)</title><rect x="714.9" y="325" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="717.93" y="335.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (24,250,000 samples, 0.03%)</title><rect x="451.2" y="981" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="454.24" y="991.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14,250,000 samples, 0.02%)</title><rect x="452.6" y="917" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="455.60" y="927.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::first (10,750,000 samples, 0.02%)</title><rect x="727.0" y="309" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="729.99" y="319.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;int&gt; (163,250,000 samples, 0.23%)</title><rect x="733.7" y="229" width="2.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="736.72" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (17,500,000 samples, 0.03%)</title><rect x="453.9" y="933" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="456.94" y="943.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (19,000,000 samples, 0.03%)</title><rect x="463.9" y="853" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="466.94" y="863.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (11,750,000 samples, 0.02%)</title><rect x="764.8" y="149" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="767.82" y="159.5" ></text>
</g>
<g >
<title>set_root (14,750,000 samples, 0.02%)</title><rect x="47.2" y="949" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="50.22" y="959.5" ></text>
</g>
<g >
<title>from_kgid_munged (6,000,000 samples, 0.01%)</title><rect x="16.9" y="1029" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="19.92" y="1039.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (98,000,000 samples, 0.14%)</title><rect x="314.4" y="725" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="317.45" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (135,750,000 samples, 0.19%)</title><rect x="531.7" y="949" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="534.68" y="959.5" ></text>
</g>
<g >
<title>ankerl::nanobench::detail::LinuxPerformanceCounters::calibrate&lt;ankerl::nanobench::detail::PerformanceCounters::PerformanceCounters (9,000,000 samples, 0.01%)</title><rect x="385.5" y="1125" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="388.51" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,500,000 samples, 0.01%)</title><rect x="439.6" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="442.59" y="1087.5" ></text>
</g>
<g >
<title>do_futex (38,750,000 samples, 0.06%)</title><rect x="33.0" y="1045" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="36.04" y="1055.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (19,250,000 samples, 0.03%)</title><rect x="524.2" y="757" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="527.25" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (73,000,000 samples, 0.10%)</title><rect x="864.2" y="677" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="867.23" y="687.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (20,500,000 samples, 0.03%)</title><rect x="469.7" y="741" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="472.67" y="751.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (67,000,000 samples, 0.10%)</title><rect x="540.5" y="965" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.49" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::packaged_task&lt;void  (45,750,000 samples, 0.07%)</title><rect x="548.1" y="981" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="551.06" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (20,750,000 samples, 0.03%)</title><rect x="662.8" y="789" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="665.77" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (27,500,000 samples, 0.04%)</title><rect x="483.7" y="421" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="486.66" y="431.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (9,750,000 samples, 0.01%)</title><rect x="498.1" y="277" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="501.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (11,250,000 samples, 0.02%)</title><rect x="738.9" y="149" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="741.88" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (137,250,000 samples, 0.20%)</title><rect x="75.2" y="1093" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="78.24" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;long long&gt; (71,500,000 samples, 0.10%)</title><rect x="784.2" y="357" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="787.25" y="367.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (131,500,000 samples, 0.19%)</title><rect x="512.1" y="373" width="2.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="515.07" y="383.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;int&gt; (9,500,000 samples, 0.01%)</title><rect x="721.5" y="341" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="724.52" y="351.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (7,000,000 samples, 0.01%)</title><rect x="1185.3" y="1077" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1188.33" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::_S_abs (18,250,000 samples, 0.03%)</title><rect x="774.4" y="341" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="777.41" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (14,250,000 samples, 0.02%)</title><rect x="669.1" y="741" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="672.14" y="751.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (7,250,000 samples, 0.01%)</title><rect x="843.5" y="805" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="846.55" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::count (8,250,000 samples, 0.01%)</title><rect x="780.2" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="783.24" y="271.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (33,250,000 samples, 0.05%)</title><rect x="654.6" y="805" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="657.58" y="815.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (102,250,000 samples, 0.15%)</title><rect x="1169.5" y="1125" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1172.46" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__is_digit (6,250,000 samples, 0.01%)</title><rect x="498.1" y="261" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="501.14" y="271.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (19,000,000 samples, 0.03%)</title><rect x="815.4" y="597" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="818.38" y="607.5" ></text>
</g>
<g >
<title>__strlen_avx2 (22,000,000 samples, 0.03%)</title><rect x="820.2" y="677" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="823.20" y="687.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (597,500,000 samples, 0.85%)</title><rect x="757.0" y="293" width="10.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="760.04" y="303.5" ></text>
</g>
<g >
<title>__schedule (18,500,000 samples, 0.03%)</title><rect x="553.1" y="821" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="556.09" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (202,000,000 samples, 0.29%)</title><rect x="846.3" y="805" width="3.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="849.25" y="815.5" ></text>
</g>
<g >
<title>std::locale::locale (8,250,000 samples, 0.01%)</title><rect x="520.9" y="709" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="523.91" y="719.5" ></text>
</g>
<g >
<title>do_futex (26,000,000 samples, 0.04%)</title><rect x="392.8" y="1045" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="395.77" y="1055.5" ></text>
</g>
<g >
<title>minilog::generic_log&lt;&gt; (5,100,250,000 samples, 7.29%)</title><rect x="451.7" y="981" width="86.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="454.69" y="991.5" >minilog::g..</text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (10,250,000 samples, 0.01%)</title><rect x="497.3" y="373" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="500.26" y="383.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rend (8,250,000 samples, 0.01%)</title><rect x="722.0" y="325" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="725.04" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,000,000 samples, 0.02%)</title><rect x="787.7" y="309" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="790.68" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (6,250,000 samples, 0.01%)</title><rect x="1185.0" y="1109" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1188.00" y="1119.5" ></text>
</g>
<g >
<title>mark_wake_futex (70,750,000 samples, 0.10%)</title><rect x="971.1" y="1045" width="1.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="974.06" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (16,750,000 samples, 0.02%)</title><rect x="1183.0" y="1093" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1185.96" y="1103.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (715,500,000 samples, 1.02%)</title><rect x="146.8" y="1061" width="12.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="149.81" y="1071.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (506,750,000 samples, 0.72%)</title><rect x="549.3" y="981" width="8.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="552.31" y="991.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_info (53,750,000 samples, 0.08%)</title><rect x="322.4" y="581" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="325.36" y="591.5" ></text>
</g>
<g >
<title>std::__format::__is_digit (6,750,000 samples, 0.01%)</title><rect x="734.8" y="165" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="737.85" y="175.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (40,250,000 samples, 0.06%)</title><rect x="879.1" y="789" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="882.12" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (8,250,000 samples, 0.01%)</title><rect x="428.7" y="1093" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="431.72" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (230,250,000 samples, 0.33%)</title><rect x="666.9" y="773" width="3.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="669.91" y="783.5" ></text>
</g>
<g >
<title>malloc (13,500,000 samples, 0.02%)</title><rect x="532.7" y="837" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="535.72" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::advance_to (7,000,000 samples, 0.01%)</title><rect x="831.4" y="805" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="834.43" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,250,000 samples, 0.33%)</title><rect x="889.2" y="821" width="3.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="892.15" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::advance_to (6,250,000 samples, 0.01%)</title><rect x="739.8" y="309" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="742.79" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,500,000 samples, 0.04%)</title><rect x="392.8" y="1077" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="395.77" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (17,250,000 samples, 0.02%)</title><rect x="473.2" y="677" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="476.18" y="687.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (9,750,000 samples, 0.01%)</title><rect x="814.4" y="549" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="817.42" y="559.5" ></text>
</g>
<g >
<title>std::chrono::sys_info::~sys_info (7,250,000 samples, 0.01%)</title><rect x="322.2" y="581" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="325.22" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (71,750,000 samples, 0.10%)</title><rect x="724.0" y="325" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="727.02" y="335.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (13,500,000 samples, 0.02%)</title><rect x="481.2" y="405" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="484.23" y="415.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (37,000,000 samples, 0.05%)</title><rect x="824.4" y="661" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="827.40" y="671.5" ></text>
</g>
<g >
<title>[unknown] (85,750,000 samples, 0.12%)</title><rect x="446.0" y="1109" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="449.03" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,500,000 samples, 0.01%)</title><rect x="689.0" y="613" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="692.02" y="623.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;&amp;, char const*, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (10,831,500,000 samples, 15.48%)</title><rect x="649.8" y="853" width="182.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="652.81" y="863.5" >std::format&lt;std::chrono..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (54,500,000 samples, 0.08%)</title><rect x="688.4" y="629" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="691.39" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (7,000,000 samples, 0.01%)</title><rect x="350.1" y="229" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="353.10" y="239.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::basic_format_context (6,000,000 samples, 0.01%)</title><rect x="519.6" y="629" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="522.56" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (7,750,000 samples, 0.01%)</title><rect x="446.0" y="1093" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="449.03" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15,250,000 samples, 0.02%)</title><rect x="349.3" y="261" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="352.26" y="271.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (75,500,000 samples, 0.11%)</title><rect x="543.7" y="789" width="1.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="546.67" y="799.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (6,045,000,000 samples, 8.64%)</title><rect x="709.7" y="437" width="102.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="712.74" y="447.5" >std::basic_f..</text>
</g>
<g >
<title>std::ostream::sentry::sentry (6,250,000 samples, 0.01%)</title><rect x="549.2" y="949" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="552.19" y="959.5" ></text>
</g>
<g >
<title>__memchr_avx2 (34,500,000 samples, 0.05%)</title><rect x="526.3" y="869" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="529.34" y="879.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (76,250,000 samples, 0.11%)</title><rect x="778.4" y="325" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="781.42" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (60,250,000 samples, 0.09%)</title><rect x="714.9" y="341" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="717.89" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,750,000 samples, 0.01%)</title><rect x="750.3" y="293" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="753.33" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="393.35" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,500,000 samples, 0.01%)</title><rect x="315.5" y="645" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="318.50" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16,000,000 samples, 0.02%)</title><rect x="531.4" y="949" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="534.37" y="959.5" ></text>
</g>
<g >
<title>_pthread_cleanup_push@@GLIBC_2.34 (14,500,000 samples, 0.02%)</title><rect x="383.5" y="1125" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="386.53" y="1135.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (14,250,000 samples, 0.02%)</title><rect x="379.1" y="949" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="382.07" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,250,000 samples, 0.02%)</title><rect x="1183.2" y="1093" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1186.24" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (41,500,000 samples, 0.06%)</title><rect x="33.0" y="1061" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="36.00" y="1071.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (21,500,000 samples, 0.03%)</title><rect x="869.8" y="853" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="872.77" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (8,750,000 samples, 0.01%)</title><rect x="681.5" y="629" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="684.53" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,750,000 samples, 0.02%)</title><rect x="646.0" y="805" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="648.99" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;std::packaged_task&lt;void  (8,250,000 samples, 0.01%)</title><rect x="878.0" y="821" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="881.04" y="831.5" ></text>
</g>
<g >
<title>path_lookupat (231,250,000 samples, 0.33%)</title><rect x="44.2" y="997" width="3.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.20" y="1007.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (12,500,000 samples, 0.02%)</title><rect x="831.9" y="805" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="834.88" y="815.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (12,000,000 samples, 0.02%)</title><rect x="750.7" y="309" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="753.71" y="319.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (25,500,000 samples, 0.04%)</title><rect x="797.2" y="165" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="800.15" y="175.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned short, char const*&gt; (6,000,000 samples, 0.01%)</title><rect x="797.7" y="149" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="800.67" y="159.5" ></text>
</g>
<g >
<title>path_init (27,750,000 samples, 0.04%)</title><rect x="47.0" y="981" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="50.01" y="991.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (10,494,750,000 samples, 15.00%)</title><rect x="655.5" y="837" width="177.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="658.49" y="847.5" >std::vformat[abi:cxx11]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (6,250,000 samples, 0.01%)</title><rect x="367.4" y="741" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="370.40" y="751.5" ></text>
</g>
<g >
<title>std::__format::__is_digit (8,750,000 samples, 0.01%)</title><rect x="809.9" y="357" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="812.95" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (19,500,000 samples, 0.03%)</title><rect x="746.1" y="341" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="749.11" y="351.5" ></text>
</g>
<g >
<title>cp_new_stat (84,750,000 samples, 0.12%)</title><rect x="15.9" y="1045" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="18.86" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (18,000,000 samples, 0.03%)</title><rect x="355.6" y="181" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="358.56" y="191.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (65,750,000 samples, 0.09%)</title><rect x="823.2" y="677" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="826.16" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (6,000,000 samples, 0.01%)</title><rect x="873.9" y="677" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="876.86" y="687.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (25,000,000 samples, 0.04%)</title><rect x="345.2" y="133" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="348.17" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,250,000 samples, 0.01%)</title><rect x="649.5" y="821" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="652.45" y="831.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (34,750,000 samples, 0.05%)</title><rect x="501.8" y="405" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="504.75" y="415.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (30,000,000 samples, 0.04%)</title><rect x="336.6" y="197" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="339.62" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,750,000 samples, 0.01%)</title><rect x="83.2" y="1093" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="86.20" y="1103.5" ></text>
</g>
<g >
<title>__schedule (81,750,000 samples, 0.12%)</title><rect x="137.4" y="997" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="140.35" y="1007.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (24,500,000 samples, 0.04%)</title><rect x="357.7" y="85" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="360.70" y="95.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (22,500,000 samples, 0.03%)</title><rect x="359.3" y="293" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="362.25" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (8,000,000 samples, 0.01%)</title><rect x="492.8" y="437" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="495.76" y="447.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (333,250,000 samples, 0.48%)</title><rect x="372.0" y="741" width="5.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="375.00" y="751.5" ></text>
</g>
<g >
<title>get_futex_key (13,000,000 samples, 0.02%)</title><rect x="143.9" y="1013" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="146.87" y="1023.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,250,000 samples, 0.02%)</title><rect x="815.1" y="597" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="818.12" y="607.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (12,500,000 samples, 0.02%)</title><rect x="513.0" y="293" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="515.99" y="303.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (41,500,000 samples, 0.06%)</title><rect x="881.0" y="805" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="884.01" y="815.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (6,250,000 samples, 0.01%)</title><rect x="440.4" y="1109" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="443.42" y="1119.5" ></text>
</g>
<g >
<title>std::to_chars (10,250,000 samples, 0.01%)</title><rect x="375.2" y="613" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="378.16" y="623.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (7,000,000 samples, 0.01%)</title><rect x="325.8" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="328.85" y="511.5" ></text>
</g>
<g >
<title>_ZZNSt6chrono12_GLOBAL__N_114do_locate_zoneERKSt6vectorINS_9time_zoneESaIS2_EERKS1_INS_14time_zone_linkESaIS7_EESt17basic_string_viewIcSt11char_traitsIcEEENKUlTyRKT_SF_E_clIS4_EEDaSI_SF_.isra.0 (28,000,000 samples, 0.04%)</title><rect x="12.6" y="1093" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="15.59" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::advance_to (13,750,000 samples, 0.02%)</title><rect x="818.5" y="709" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="821.51" y="719.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (155,000,000 samples, 0.22%)</title><rect x="487.4" y="341" width="2.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="490.38" y="351.5" ></text>
</g>
<g >
<title>std::queue&lt;std::function&lt;void  (38,000,000 samples, 0.05%)</title><rect x="541.7" y="949" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="544.73" y="959.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, unsigned char, std::ratio&lt;1l, 1l&gt; &gt; (7,000,000 samples, 0.01%)</title><rect x="751.4" y="325" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="754.39" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (8,000,000 samples, 0.01%)</title><rect x="547.2" y="965" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="550.24" y="975.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (67,750,000 samples, 0.10%)</title><rect x="693.6" y="597" width="1.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="696.56" y="607.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (16,250,000 samples, 0.02%)</title><rect x="318.5" y="645" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="321.53" y="655.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::next_arg_id (15,250,000 samples, 0.02%)</title><rect x="826.4" y="773" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="829.44" y="783.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (6,173,500,000 samples, 8.83%)</title><rect x="708.2" y="517" width="104.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="711.20" y="527.5" >std::__forma..</text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;test (72,750,000 samples, 0.10%)</title><rect x="543.7" y="773" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="546.69" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,500,000 samples, 0.01%)</title><rect x="699.8" y="533" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="702.83" y="543.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (9,250,000 samples, 0.01%)</title><rect x="466.2" y="789" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="469.16" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,500,000 samples, 0.01%)</title><rect x="74.7" y="1077" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="77.73" y="1087.5" ></text>
</g>
<g >
<title>futex_wait (81,000,000 samples, 0.12%)</title><rect x="889.5" y="773" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="892.55" y="783.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (28,250,000 samples, 0.04%)</title><rect x="738.7" y="181" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="741.66" y="191.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (2,915,000,000 samples, 4.17%)</title><rect x="316.8" y="709" width="49.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="319.76" y="719.5" >std:..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (613,500,000 samples, 0.88%)</title><rect x="148.2" y="1045" width="10.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="151.22" y="1055.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_List (6,000,000 samples, 0.01%)</title><rect x="534.1" y="837" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="537.12" y="847.5" ></text>
</g>
<g >
<title>plist_add (13,500,000 samples, 0.02%)</title><rect x="552.8" y="837" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="555.84" y="847.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (7,250,000 samples, 0.01%)</title><rect x="794.5" y="293" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="797.47" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12,000,000 samples, 0.02%)</title><rect x="661.8" y="805" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="664.80" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (196,000,000 samples, 0.28%)</title><rect x="701.6" y="533" width="3.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="704.56" y="543.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (15,750,000 samples, 0.02%)</title><rect x="20.3" y="933" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="23.33" y="943.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (46,250,000 samples, 0.07%)</title><rect x="360.0" y="325" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="363.02" y="335.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::formatter (10,000,000 samples, 0.01%)</title><rect x="522.2" y="773" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="525.17" y="783.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (200,000,000 samples, 0.29%)</title><rect x="808.3" y="421" width="3.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="811.32" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14,500,000 samples, 0.02%)</title><rect x="471.3" y="693" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="474.27" y="703.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (3,088,250,000 samples, 4.41%)</title><rect x="470.0" y="773" width="52.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="473.02" y="783.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (8,250,000 samples, 0.01%)</title><rect x="429.8" y="1109" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="432.84" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (7,500,000 samples, 0.01%)</title><rect x="417.2" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="420.20" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;unsigned int&gt; (20,500,000 samples, 0.03%)</title><rect x="861.2" y="741" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="864.22" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (7,750,000 samples, 0.01%)</title><rect x="704.3" y="501" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="707.28" y="511.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (7,750,000 samples, 0.01%)</title><rect x="482.4" y="437" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="485.38" y="447.5" ></text>
</g>
<g >
<title>malloc (9,250,000 samples, 0.01%)</title><rect x="81.7" y="1045" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="84.67" y="1055.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (53,500,000 samples, 0.08%)</title><rect x="376.0" y="597" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="378.99" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (22,000,000 samples, 0.03%)</title><rect x="439.8" y="1077" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="442.79" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="751.4" y="309" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="754.39" y="319.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (20,500,000 samples, 0.03%)</title><rect x="783.1" y="373" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="786.09" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (27,250,000 samples, 0.04%)</title><rect x="696.4" y="565" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="699.39" y="575.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (8,250,000 samples, 0.01%)</title><rect x="728.7" y="325" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="731.74" y="335.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (42,500,000 samples, 0.06%)</title><rect x="717.0" y="325" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="719.97" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,089,250,000 samples, 5.85%)</title><rect x="558.7" y="917" width="68.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="561.66" y="927.5" >do_sysc..</text>
</g>
<g >
<title>__x64_sys_futex (4,064,000,000 samples, 5.81%)</title><rect x="558.8" y="901" width="68.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="561.76" y="911.5" >__x64_s..</text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_R_T&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,459,500,000 samples, 2.09%)</title><rect x="491.3" y="485" width="24.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="494.33" y="495.5" >s..</text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_character&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (36,250,000 samples, 0.05%)</title><rect x="498.7" y="293" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="501.69" y="303.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,372,000,000 samples, 3.39%)</title><rect x="322.1" y="597" width="40.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="325.10" y="607.5" >std..</text>
</g>
<g >
<title>__get_user_8 (21,250,000 samples, 0.03%)</title><rect x="33.9" y="1013" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="36.91" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (48,000,000 samples, 0.07%)</title><rect x="475.3" y="597" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="478.30" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (6,000,000 samples, 0.01%)</title><rect x="1189.0" y="1109" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1192.01" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (21,500,000 samples, 0.03%)</title><rect x="753.8" y="309" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="756.79" y="319.5" ></text>
</g>
<g >
<title>path_put (17,250,000 samples, 0.02%)</title><rect x="42.8" y="1029" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="45.83" y="1039.5" ></text>
</g>
<g >
<title>hash_futex (9,500,000 samples, 0.01%)</title><rect x="163.9" y="1029" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="166.86" y="1039.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (11,250,000 samples, 0.02%)</title><rect x="763.8" y="165" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="766.84" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="997" width="326.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="636.43" y="1007.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (7,500,000 samples, 0.01%)</title><rect x="302.3" y="1125" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="305.28" y="1135.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (16,250,000 samples, 0.02%)</title><rect x="827.9" y="789" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="830.87" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (7,000,000 samples, 0.01%)</title><rect x="504.7" y="421" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="507.66" y="431.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (2,398,250,000 samples, 3.43%)</title><rect x="478.3" y="533" width="40.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="481.30" y="543.5" >std..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (123,750,000 samples, 0.18%)</title><rect x="356.3" y="197" width="2.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="359.26" y="207.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (529,750,000 samples, 0.76%)</title><rect x="758.1" y="261" width="9.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="761.13" y="271.5" ></text>
</g>
<g >
<title>[unknown] (6,500,000 samples, 0.01%)</title><rect x="371.5" y="677" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="374.50" y="687.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (11,250,000 samples, 0.02%)</title><rect x="336.2" y="229" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="339.17" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,250,000 samples, 0.01%)</title><rect x="705.1" y="517" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="708.13" y="527.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; const&gt; (2,402,000,000 samples, 3.43%)</title><rect x="321.7" y="613" width="40.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="324.72" y="623.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (29,500,000 samples, 0.04%)</title><rect x="746.0" y="357" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="749.00" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (20,250,000 samples, 0.03%)</title><rect x="838.0" y="837" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="840.98" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (7,000,000 samples, 0.01%)</title><rect x="338.4" y="53" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="341.42" y="63.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (27,250,000 samples, 0.04%)</title><rect x="663.2" y="805" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="666.15" y="815.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (10,000,000 samples, 0.01%)</title><rect x="813.9" y="517" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="816.89" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (69,000,000 samples, 0.10%)</title><rect x="100.9" y="981" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="103.88" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (8,750,000 samples, 0.01%)</title><rect x="703.4" y="469" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="706.45" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (12,500,000 samples, 0.02%)</title><rect x="545.5" y="869" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="548.54" y="879.5" ></text>
</g>
<g >
<title>operator new (6,500,000 samples, 0.01%)</title><rect x="659.7" y="709" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="662.73" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (16,500,000 samples, 0.02%)</title><rect x="480.4" y="421" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="483.41" y="431.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;long long&gt; (25,000,000 samples, 0.04%)</title><rect x="353.0" y="261" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="355.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,000,000 samples, 0.01%)</title><rect x="786.4" y="325" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="789.36" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (76,250,000 samples, 0.11%)</title><rect x="137.4" y="981" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="140.45" y="991.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (12,500,000 samples, 0.02%)</title><rect x="357.2" y="101" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="360.22" y="111.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (23,250,000 samples, 0.03%)</title><rect x="339.1" y="69" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="342.14" y="79.5" ></text>
</g>
<g >
<title>std::locale::~locale (7,000,000 samples, 0.01%)</title><rect x="520.2" y="693" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="523.24" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,250,000 samples, 0.01%)</title><rect x="392.7" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="395.66" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (4,297,000,000 samples, 6.14%)</title><rect x="308.0" y="1061" width="72.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="311.03" y="1071.5" >std::__i..</text>
</g>
<g >
<title>std::filesystem::read_symlink (67,750,000 samples, 0.10%)</title><rect x="1188.1" y="1141" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.09" y="1151.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_info (254,250,000 samples, 0.36%)</title><rect x="681.7" y="677" width="4.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="684.73" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::~unique_ptr (6,500,000 samples, 0.01%)</title><rect x="380.3" y="1013" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="383.31" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (28,000,000 samples, 0.04%)</title><rect x="883.0" y="837" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="885.99" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; const&gt; (8,500,000 samples, 0.01%)</title><rect x="825.2" y="725" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="828.18" y="735.5" ></text>
</g>
<g >
<title>futex_wake (12,250,000 samples, 0.02%)</title><rect x="385.2" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="388.17" y="1039.5" ></text>
</g>
<g >
<title>try_to_wake_up (8,250,000 samples, 0.01%)</title><rect x="443.7" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="446.66" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (11,000,000 samples, 0.02%)</title><rect x="707.7" y="501" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="710.71" y="511.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (50,500,000 samples, 0.07%)</title><rect x="105.4" y="1077" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="108.35" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (28,500,000 samples, 0.04%)</title><rect x="355.5" y="213" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="358.48" y="223.5" ></text>
</g>
<g >
<title>futex_wake (11,000,000 samples, 0.02%)</title><rect x="419.1" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="422.14" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (12,750,000 samples, 0.02%)</title><rect x="349.3" y="245" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="352.28" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,500,000 samples, 0.01%)</title><rect x="714.3" y="357" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="717.33" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result&lt;void&gt;*, std::__future_base::_Result_base::_Deleter&gt; (6,250,000 samples, 0.01%)</title><rect x="379.6" y="901" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="382.56" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::_Tuple_impl&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, void&gt; (6,000,000 samples, 0.01%)</title><rect x="379.2" y="901" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="382.19" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (57,500,000 samples, 0.08%)</title><rect x="835.8" y="869" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="838.77" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,750,000 samples, 0.01%)</title><rect x="656.5" y="805" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="659.51" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (43,250,000 samples, 0.06%)</title><rect x="656.2" y="821" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="659.18" y="831.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6,500,000 samples, 0.01%)</title><rect x="363.1" y="533" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="366.07" y="543.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;86400l, 1l&gt;, void&gt; (6,000,000 samples, 0.01%)</title><rect x="503.8" y="405" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="506.81" y="415.5" ></text>
</g>
<g >
<title>malloc (32,750,000 samples, 0.05%)</title><rect x="847.3" y="741" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="850.26" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,000,000 samples, 0.02%)</title><rect x="688.8" y="613" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="691.82" y="623.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (3,308,000,000 samples, 4.73%)</title><rect x="466.3" y="789" width="55.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="469.32" y="799.5" >std::..</text>
</g>
<g >
<title>futex_wake (21,500,000 samples, 0.03%)</title><rect x="439.8" y="1029" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="442.80" y="1039.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (51,250,000 samples, 0.07%)</title><rect x="300.7" y="1077" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="303.72" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (6,250,000 samples, 0.01%)</title><rect x="801.6" y="309" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="804.59" y="319.5" ></text>
</g>
<g >
<title>lookup_fast (25,500,000 samples, 0.04%)</title><rect x="47.6" y="965" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="50.56" y="975.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (37,000,000 samples, 0.05%)</title><rect x="157.9" y="1029" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="160.95" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,500,000 samples, 0.01%)</title><rect x="657.7" y="789" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="660.66" y="799.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (6,750,000 samples, 0.01%)</title><rect x="391.5" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="394.48" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (13,750,000 samples, 0.02%)</title><rect x="488.3" y="293" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="491.30" y="303.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (21,000,000 samples, 0.03%)</title><rect x="345.7" y="69" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="348.71" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (102,250,000 samples, 0.15%)</title><rect x="744.0" y="373" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="747.05" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="520.4" y="693" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="523.37" y="703.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;&amp;, char const*, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3,237,750,000 samples, 4.63%)</title><rect x="311.8" y="757" width="54.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="314.84" y="767.5" >std::..</text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (22,750,000 samples, 0.03%)</title><rect x="481.1" y="421" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="484.10" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,500,000 samples, 0.02%)</title><rect x="385.2" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="388.17" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (1,815,750,000 samples, 2.60%)</title><rect x="330.3" y="373" width="30.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="333.26" y="383.5" >st..</text>
</g>
<g >
<title>path_put (25,750,000 samples, 0.04%)</title><rect x="18.3" y="1029" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.35" y="1039.5" ></text>
</g>
<g >
<title>futex_wait (788,750,000 samples, 1.13%)</title><rect x="131.7" y="1045" width="13.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="134.72" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (145,250,000 samples, 0.21%)</title><rect x="504.0" y="453" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="507.00" y="463.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (13,000,000 samples, 0.02%)</title><rect x="520.5" y="693" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="523.48" y="703.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (23,250,000 samples, 0.03%)</title><rect x="44.8" y="933" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="47.75" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10,750,000 samples, 0.02%)</title><rect x="417.4" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="420.45" y="1071.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::XmlReporter::test_run_start (10,750,000 samples, 0.02%)</title><rect x="391.4" y="1125" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="394.42" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="505.3" y="373" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="508.26" y="383.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,614,750,000 samples, 3.74%)</title><rect x="320.2" y="677" width="44.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="323.20" y="687.5" >std:..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22,000,000 samples, 0.03%)</title><rect x="439.8" y="1093" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="442.79" y="1103.5" ></text>
</g>
<g >
<title>minilog::details::output_log (11,204,750,000 samples, 16.02%)</title><rect x="644.0" y="869" width="189.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="646.97" y="879.5" >minilog::details::output..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="690.0" y="565" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="693.04" y="575.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (15,500,000 samples, 0.02%)</title><rect x="454.6" y="917" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="457.62" y="927.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (10,250,000 samples, 0.01%)</title><rect x="830.6" y="773" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="833.56" y="783.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (130,750,000 samples, 0.19%)</title><rect x="820.6" y="709" width="2.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="823.61" y="719.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (9,750,000 samples, 0.01%)</title><rect x="534.5" y="933" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="537.46" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6,750,000 samples, 0.01%)</title><rect x="310.1" y="757" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="313.08" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (34,500,000 samples, 0.05%)</title><rect x="731.8" y="309" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="734.81" y="319.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::__subseconds&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::operator std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,250,000 samples, 0.01%)</title><rect x="751.5" y="341" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="754.55" y="351.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (31,500,000 samples, 0.05%)</title><rect x="516.0" y="485" width="0.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="519.03" y="495.5" ></text>
</g>
<g >
<title>[unknown] (11,500,000 samples, 0.02%)</title><rect x="534.0" y="869" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.03" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (36,000,000 samples, 0.05%)</title><rect x="532.6" y="869" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="535.56" y="879.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,093,250,000 samples, 8.71%)</title><rect x="709.3" y="469" width="102.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="712.30" y="479.5" >std::basic_f..</text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (6,500,000 samples, 0.01%)</title><rect x="719.9" y="341" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="722.95" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::function&lt;void  (6,250,000 samples, 0.01%)</title><rect x="542.2" y="901" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="545.19" y="911.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6,500,000 samples, 0.01%)</title><rect x="836.2" y="821" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="839.25" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::advance_to (8,000,000 samples, 0.01%)</title><rect x="866.3" y="821" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="869.26" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (22,250,000 samples, 0.03%)</title><rect x="648.8" y="821" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="651.82" y="831.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (111,750,000 samples, 0.16%)</title><rect x="349.8" y="245" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="352.80" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (137,750,000 samples, 0.20%)</title><rect x="1168.9" y="1141" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1171.86" y="1151.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (45,750,000 samples, 0.07%)</title><rect x="356.7" y="117" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="359.66" y="127.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (136,000,000 samples, 0.19%)</title><rect x="356.1" y="213" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="359.12" y="223.5" ></text>
</g>
<g >
<title>futex_wake (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="433.50" y="1039.5" ></text>
</g>
<g >
<title>test (10,721,500,000 samples, 15.33%)</title><rect x="447.5" y="1029" width="180.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="450.49" y="1039.5" >test</text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (38,750,000 samples, 0.06%)</title><rect x="523.3" y="773" width="0.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="526.29" y="783.5" ></text>
</g>
<g >
<title>lookup_fast (22,500,000 samples, 0.03%)</title><rect x="22.0" y="949" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="25.05" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (20,500,000 samples, 0.03%)</title><rect x="324.0" y="533" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="327.01" y="543.5" ></text>
</g>
<g >
<title>std::__condvar::wait_until (10,750,000 samples, 0.02%)</title><rect x="541.3" y="933" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="544.32" y="943.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;3600l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,500,000 samples, 0.02%)</title><rect x="776.4" y="325" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="779.40" y="335.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (134,750,000 samples, 0.19%)</title><rect x="349.5" y="261" width="2.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="352.53" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (258,250,000 samples, 0.37%)</title><rect x="882.4" y="885" width="4.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="885.43" y="895.5" ></text>
</g>
<g >
<title>__virt_addr_valid (14,250,000 samples, 0.02%)</title><rect x="49.9" y="965" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="52.87" y="975.5" ></text>
</g>
<g >
<title>futex_wake (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="391.85" y="1039.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;void  (50,250,000 samples, 0.07%)</title><rect x="546.5" y="997" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="549.53" y="1007.5" ></text>
</g>
<g >
<title>std::formatter&lt;int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (153,500,000 samples, 0.22%)</title><rect x="736.6" y="229" width="2.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="739.58" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (6,500,000 samples, 0.01%)</title><rect x="704.1" y="485" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="707.07" y="495.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (20,750,000 samples, 0.03%)</title><rect x="352.1" y="261" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="355.13" y="271.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (39,500,000 samples, 0.06%)</title><rect x="755.8" y="309" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="758.78" y="319.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::data (8,250,000 samples, 0.01%)</title><rect x="653.4" y="773" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="656.42" y="783.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (88,250,000 samples, 0.13%)</title><rect x="11.0" y="1109" width="1.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="14.00" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::packaged_task&lt;void  (218,250,000 samples, 0.31%)</title><rect x="542.7" y="965" width="3.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="545.75" y="975.5" ></text>
</g>
<g >
<title>[unknown] (6,500,000 samples, 0.01%)</title><rect x="371.5" y="725" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="374.50" y="735.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (164,250,000 samples, 0.23%)</title><rect x="554.0" y="885" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="557.02" y="895.5" ></text>
</g>
<g >
<title>futex_wake (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1029" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="446.66" y="1039.5" ></text>
</g>
<g >
<title>do_futex (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="394.49" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,250,000 samples, 0.01%)</title><rect x="480.8" y="469" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="483.84" y="479.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (68,000,000 samples, 0.10%)</title><rect x="370.3" y="741" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="373.27" y="751.5" ></text>
</g>
<g >
<title>std::format&lt;int&gt; (409,000,000 samples, 0.58%)</title><rect x="334.0" y="277" width="6.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="336.95" y="287.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="419.5" y="1125" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="422.48" y="1135.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (7,250,000 samples, 0.01%)</title><rect x="540.8" y="933" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="543.77" y="943.5" ></text>
</g>
<g >
<title>std::condition_variable::wait@plt (8,000,000 samples, 0.01%)</title><rect x="637.3" y="917" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="640.29" y="927.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (44,500,000 samples, 0.06%)</title><rect x="541.6" y="965" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="544.62" y="975.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (72,250,000 samples, 0.10%)</title><rect x="761.0" y="165" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="763.96" y="175.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (8,500,000 samples, 0.01%)</title><rect x="87.6" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="90.62" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::sys_info::~sys_info (6,000,000 samples, 0.01%)</title><rect x="323.6" y="549" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="326.63" y="559.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (8,750,000 samples, 0.01%)</title><rect x="371.8" y="741" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="374.79" y="751.5" ></text>
</g>
<g >
<title>futex_wake (26,000,000 samples, 0.04%)</title><rect x="392.8" y="1029" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="395.77" y="1039.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (6,000,000 samples, 0.01%)</title><rect x="741.7" y="325" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="744.67" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (9,250,000 samples, 0.01%)</title><rect x="510.6" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="513.57" y="415.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (43,000,000 samples, 0.06%)</title><rect x="60.7" y="1109" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="63.68" y="1119.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;std::__future_base::_Result_base*&amp;, std::__future_base::_Result_base::_Deleter, true&gt; (9,250,000 samples, 0.01%)</title><rect x="379.2" y="917" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="382.15" y="927.5" ></text>
</g>
<g >
<title>__memchr_avx2 (6,250,000 samples, 0.01%)</title><rect x="807.1" y="373" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="810.07" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (272,000,000 samples, 0.39%)</title><rect x="552.2" y="933" width="4.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="555.20" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (19,250,000 samples, 0.03%)</title><rect x="484.2" y="389" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="487.25" y="399.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (12,000,000 samples, 0.02%)</title><rect x="856.8" y="773" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="859.84" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_disjunct (12,000,000 samples, 0.02%)</title><rect x="1176.5" y="1109" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1179.54" y="1119.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::first (9,500,000 samples, 0.01%)</title><rect x="704.6" y="517" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="707.63" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (11,750,000 samples, 0.02%)</title><rect x="388.9" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="391.85" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="540.3" y="965" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="543.28" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (19,000,000 samples, 0.03%)</title><rect x="1180.0" y="1109" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1183.03" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,500,000 samples, 0.01%)</title><rect x="773.3" y="325" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="776.29" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (14,500,000 samples, 0.02%)</title><rect x="518.3" y="485" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="521.32" y="495.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (30,750,000 samples, 0.04%)</title><rect x="852.0" y="837" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="854.99" y="847.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (16,000,000 samples, 0.02%)</title><rect x="777.4" y="277" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="780.39" y="287.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (19,250,000 samples, 0.03%)</title><rect x="686.7" y="629" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="689.69" y="639.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (32,750,000 samples, 0.05%)</title><rect x="686.5" y="645" width="0.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="689.52" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (17,500,000 samples, 0.03%)</title><rect x="744.6" y="357" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="747.63" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (52,750,000 samples, 0.08%)</title><rect x="370.4" y="725" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="373.37" y="735.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,500,000 samples, 0.02%)</title><rect x="323.0" y="533" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="326.02" y="543.5" ></text>
</g>
<g >
<title>step_into (7,000,000 samples, 0.01%)</title><rect x="46.9" y="949" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="49.89" y="959.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (66,000,000 samples, 0.09%)</title><rect x="719.2" y="357" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="722.23" y="367.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (26,750,000 samples, 0.04%)</title><rect x="392.8" y="1109" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="395.77" y="1119.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::out (9,500,000 samples, 0.01%)</title><rect x="858.4" y="805" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="861.45" y="815.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (21,000,000 samples, 0.03%)</title><rect x="362.4" y="597" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="365.36" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (6,750,000 samples, 0.01%)</title><rect x="715.4" y="309" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="718.45" y="319.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (6,864,750,000 samples, 9.81%)</title><rect x="698.8" y="565" width="115.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="701.82" y="575.5" >std::vformat[a..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (9,000,000 samples, 0.01%)</title><rect x="545.2" y="805" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="548.23" y="815.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="737.9" y="149" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="740.89" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (10,000,000 samples, 0.01%)</title><rect x="429.3" y="1061" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="432.33" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (19,000,000 samples, 0.03%)</title><rect x="696.4" y="549" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="699.43" y="559.5" ></text>
</g>
<g >
<title>doctest::Context::run (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1109" width="180.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="450.48" y="1119.5" >doctest::Context::run</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,000,000 samples, 0.01%)</title><rect x="670.6" y="757" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="673.55" y="767.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (12,000,000 samples, 0.02%)</title><rect x="505.8" y="389" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="508.82" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (28,500,000 samples, 0.04%)</title><rect x="627.8" y="949" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="630.82" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,000,000 samples, 0.01%)</title><rect x="842.7" y="853" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="845.73" y="863.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (534,750,000 samples, 0.76%)</title><rect x="548.8" y="997" width="9.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="551.84" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (15,750,000 samples, 0.02%)</title><rect x="524.3" y="741" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="527.28" y="751.5" ></text>
</g>
<g >
<title>std::future&lt;void&gt;::~future (27,750,000 samples, 0.04%)</title><rect x="448.3" y="1013" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="451.25" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_State_baseV2,  (22,500,000 samples, 0.03%)</title><rect x="448.3" y="965" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="451.34" y="975.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (380,750,000 samples, 0.54%)</title><rect x="334.4" y="261" width="6.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="337.43" y="271.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (27,500,000 samples, 0.04%)</title><rect x="67.6" y="1109" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="70.63" y="1119.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (13,250,000 samples, 0.02%)</title><rect x="781.9" y="341" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="784.92" y="351.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (17,750,000 samples, 0.03%)</title><rect x="22.1" y="933" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="25.13" y="943.5" ></text>
</g>
<g >
<title>do_futex (90,250,000 samples, 0.13%)</title><rect x="889.4" y="789" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="892.39" y="799.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void  (4,308,250,000 samples, 6.16%)</title><rect x="307.9" y="1093" width="72.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="310.91" y="1103.5" >std::onc..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (74,250,000 samples, 0.11%)</title><rect x="532.4" y="901" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="535.37" y="911.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,405,500,000 samples, 3.44%)</title><rect x="478.2" y="549" width="40.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="481.23" y="559.5" >std..</text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;unsigned int&gt; (6,750,000 samples, 0.01%)</title><rect x="312.6" y="741" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="315.58" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (7,500,000 samples, 0.01%)</title><rect x="315.3" y="629" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="318.26" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (38,000,000 samples, 0.05%)</title><rect x="745.9" y="373" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="748.87" y="383.5" ></text>
</g>
<g >
<title>std::chrono::tzdb::current_zone (299,500,000 samples, 0.43%)</title><rect x="1181.3" y="1141" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1184.34" y="1151.5" ></text>
</g>
<g >
<title>std::function&lt;void  (576,750,000 samples, 0.82%)</title><rect x="872.4" y="901" width="9.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="875.40" y="911.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::year_month_day (62,750,000 samples, 0.09%)</title><rect x="717.9" y="357" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="720.87" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12,000,000 samples, 0.02%)</title><rect x="725.9" y="277" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="728.94" y="287.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (15,000,000 samples, 0.02%)</title><rect x="690.0" y="581" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="692.97" y="591.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,500,000 samples, 0.01%)</title><rect x="332.6" y="213" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="335.60" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,500,000 samples, 0.12%)</title><rect x="33.0" y="1093" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="35.96" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (125,000,000 samples, 0.18%)</title><rect x="725.3" y="325" width="2.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="728.25" y="335.5" ></text>
</g>
<g >
<title>std::to_address&lt;char const&gt; (6,250,000 samples, 0.01%)</title><rect x="858.7" y="789" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="861.74" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (17,000,000 samples, 0.02%)</title><rect x="528.9" y="965" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="531.88" y="975.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (21,750,000 samples, 0.03%)</title><rect x="353.0" y="245" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="356.00" y="255.5" ></text>
</g>
<g >
<title>_ZNKSt8__format14__formatter_fpIcE6formatIDF128_NS_10_Sink_iterIcEEEENSt20basic_format_contextIT0_cE8iteratorET_RS7_ (15,500,000 samples, 0.02%)</title><rect x="87.5" y="1125" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="90.51" y="1135.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (6,000,000 samples, 0.01%)</title><rect x="379.9" y="965" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="382.87" y="975.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (119,500,000 samples, 0.17%)</title><rect x="48.1" y="1013" width="2.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="51.15" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (25,250,000 samples, 0.04%)</title><rect x="457.6" y="853" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="460.55" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13,500,000 samples, 0.02%)</title><rect x="836.4" y="837" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="839.37" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (16,000,000 samples, 0.02%)</title><rect x="1184.7" y="1109" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1187.73" y="1119.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::newThread (19,089,500,000 samples, 27.29%)</title><rect x="638.3" y="917" width="322.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="641.29" y="927.5" >threadpool::ThreadPool::newThread</text>
</g>
<g >
<title>__vdso_clock_gettime (8,500,000 samples, 0.01%)</title><rect x="633.8" y="901" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="636.75" y="911.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (475,500,000 samples, 0.68%)</title><rect x="483.3" y="453" width="8.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="486.28" y="463.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (2,715,750,000 samples, 3.88%)</title><rect x="474.2" y="661" width="45.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="477.24" y="671.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (24,500,000 samples, 0.04%)</title><rect x="528.5" y="965" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="531.47" y="975.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (37,250,000 samples, 0.05%)</title><rect x="362.8" y="581" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="365.83" y="591.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (129,500,000 samples, 0.19%)</title><rect x="337.7" y="197" width="2.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="340.67" y="207.5" ></text>
</g>
<g >
<title>std::to_address&lt;char const&gt; (8,000,000 samples, 0.01%)</title><rect x="673.1" y="773" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="676.09" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (257,750,000 samples, 0.37%)</title><rect x="872.8" y="853" width="4.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="875.78" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (92,750,000 samples, 0.13%)</title><rect x="1181.9" y="1109" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1184.91" y="1119.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (7,750,000 samples, 0.01%)</title><rect x="43.9" y="981" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="46.92" y="991.5" ></text>
</g>
<g >
<title>__memchr_avx2 (24,250,000 samples, 0.03%)</title><rect x="802.5" y="293" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="805.48" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (7,750,000 samples, 0.01%)</title><rect x="647.3" y="837" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="650.28" y="847.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (26,500,000 samples, 0.04%)</title><rect x="511.1" y="389" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="514.11" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="540.2" y="981" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="543.24" y="991.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,500,000 samples, 0.01%)</title><rect x="780.7" y="341" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="783.65" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (40,250,000 samples, 0.06%)</title><rect x="411.5" y="1125" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="414.52" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,915,750,000 samples, 2.74%)</title><rect x="329.1" y="453" width="32.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="332.11" y="463.5" >st..</text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (26,750,000 samples, 0.04%)</title><rect x="505.7" y="421" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="508.66" y="431.5" ></text>
</g>
<g >
<title>__list_add_valid (6,250,000 samples, 0.01%)</title><rect x="100.1" y="997" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="103.10" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="393.75" y="1103.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1125" width="326.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="636.43" y="1135.5" >std::thread::_State_impl&lt;std::thread::_Invok..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (32,000,000 samples, 0.05%)</title><rect x="538.1" y="997" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="541.07" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (124,750,000 samples, 0.18%)</title><rect x="543.3" y="837" width="2.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="546.33" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::end (6,250,000 samples, 0.01%)</title><rect x="866.0" y="821" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="869.01" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (74,750,000 samples, 0.11%)</title><rect x="714.7" y="373" width="1.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="717.70" y="383.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (16,000,000 samples, 0.02%)</title><rect x="473.9" y="645" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="476.92" y="655.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt; (10,000,000 samples, 0.01%)</title><rect x="697.5" y="533" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="700.51" y="543.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt; (52,500,000 samples, 0.08%)</title><rect x="697.8" y="565" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="700.84" y="575.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_for&lt;long, std::ratio&lt;1l, 1l&gt;, threadpool::ThreadPool::submit&lt;test (225,750,000 samples, 0.32%)</title><rect x="538.7" y="997" width="3.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="541.73" y="1007.5" ></text>
</g>
<g >
<title>std::to_chars (8,500,000 samples, 0.01%)</title><rect x="514.1" y="293" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="517.07" y="303.5" ></text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (46,750,000 samples, 0.07%)</title><rect x="357.5" y="133" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="360.49" y="143.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (58,000,000 samples, 0.08%)</title><rect x="693.6" y="581" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="696.64" y="591.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (436,250,000 samples, 0.62%)</title><rect x="495.3" y="437" width="7.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="498.32" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::swap (30,500,000 samples, 0.04%)</title><rect x="379.8" y="997" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="382.77" y="1007.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (6,250,000 samples, 0.01%)</title><rect x="831.5" y="805" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="834.55" y="815.5" ></text>
</g>
<g >
<title>__get_user_8 (80,750,000 samples, 0.12%)</title><rect x="891.6" y="757" width="1.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="894.59" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (30,750,000 samples, 0.04%)</title><rect x="341.2" y="277" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="344.23" y="287.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (82,000,000 samples, 0.12%)</title><rect x="730.1" y="293" width="1.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="733.08" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (63,000,000 samples, 0.09%)</title><rect x="880.7" y="869" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="883.68" y="879.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (22,750,000 samples, 0.03%)</title><rect x="312.1" y="741" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="315.05" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,750,000 samples, 0.02%)</title><rect x="849.1" y="789" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="852.12" y="799.5" ></text>
</g>
<g >
<title>__memchr_avx2 (18,750,000 samples, 0.03%)</title><rect x="502.0" y="389" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="504.98" y="399.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (7,558,250,000 samples, 10.80%)</title><rect x="690.5" y="661" width="127.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="693.53" y="671.5" >std::__format::_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,500,000 samples, 0.01%)</title><rect x="418.9" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="421.90" y="1103.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (24,000,000 samples, 0.03%)</title><rect x="545.9" y="933" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="548.93" y="943.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (27,500,000 samples, 0.04%)</title><rect x="516.1" y="469" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="519.08" y="479.5" ></text>
</g>
<g >
<title>__unqueue_futex (25,250,000 samples, 0.04%)</title><rect x="971.8" y="1029" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="974.83" y="1039.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (7,000,000 samples, 0.01%)</title><rect x="337.0" y="165" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="339.98" y="175.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (27,000,000 samples, 0.04%)</title><rect x="833.0" y="869" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="836.03" y="879.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (122,750,000 samples, 0.18%)</title><rect x="820.7" y="693" width="2.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="823.68" y="703.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="313.1" y="693" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="316.11" y="703.5" ></text>
</g>
<g >
<title>mark_wake_futex (49,750,000 samples, 0.07%)</title><rect x="895.8" y="757" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="898.80" y="767.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_WidthPrecVisitor&gt; (13,750,000 samples, 0.02%)</title><rect x="499.9" y="229" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="502.89" y="239.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (60,250,000 samples, 0.09%)</title><rect x="764.1" y="181" width="1.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="767.05" y="191.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, int&gt;::_S_make_elt&lt;int&gt; (20,500,000 samples, 0.03%)</title><rect x="721.3" y="357" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="724.33" y="367.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (37,500,000 samples, 0.05%)</title><rect x="335.2" y="229" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="338.23" y="239.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (9,250,000 samples, 0.01%)</title><rect x="495.6" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="498.59" y="415.5" ></text>
</g>
<g >
<title>DOCTEST_ANON_FUNC_2 (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1093" width="180.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="450.48" y="1103.5" >DOCTEST_ANON_FUNC_2</text>
</g>
<g >
<title>schedule (108,750,000 samples, 0.16%)</title><rect x="100.2" y="1013" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="103.21" y="1023.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::seconds (17,500,000 samples, 0.03%)</title><rect x="751.2" y="357" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="754.22" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (44,250,000 samples, 0.06%)</title><rect x="1189.2" y="1141" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.23" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (9,250,000 samples, 0.01%)</title><rect x="470.1" y="725" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="473.13" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,250,000 samples, 0.02%)</title><rect x="65.1" y="1109" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="68.11" y="1119.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (12,500,000 samples, 0.02%)</title><rect x="859.2" y="789" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="862.23" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (19,000,000 samples, 0.03%)</title><rect x="672.0" y="773" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="675.04" y="783.5" ></text>
</g>
<g >
<title>futex_wait_setup (373,250,000 samples, 0.53%)</title><rect x="138.7" y="1029" width="6.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="141.73" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (23,250,000 samples, 0.03%)</title><rect x="781.0" y="341" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="784.00" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (14,750,000 samples, 0.02%)</title><rect x="76.4" y="1061" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="79.42" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (32,500,000 samples, 0.05%)</title><rect x="779.0" y="293" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="781.98" y="303.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,500,000 samples, 0.02%)</title><rect x="553.8" y="901" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="556.82" y="911.5" ></text>
</g>
<g >
<title>std::filesystem::read_symlink (15,250,000 samples, 0.02%)</title><rect x="432.9" y="1125" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="435.90" y="1135.5" ></text>
</g>
<g >
<title>std::formatter&lt;long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (103,250,000 samples, 0.15%)</title><rect x="499.6" y="325" width="1.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="502.57" y="335.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (6,500,000 samples, 0.01%)</title><rect x="879.5" y="757" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="882.45" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11,000,000 samples, 0.02%)</title><rect x="681.5" y="645" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="684.51" y="655.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (13,000,000 samples, 0.02%)</title><rect x="62.4" y="1109" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="65.45" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (74,750,000 samples, 0.11%)</title><rect x="508.9" y="437" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="511.94" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt; (7,750,000 samples, 0.01%)</title><rect x="380.0" y="965" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="383.00" y="975.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (6,250,000 samples, 0.01%)</title><rect x="740.8" y="293" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="743.83" y="303.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;char, long long, unsigned int&gt; (144,000,000 samples, 0.21%)</title><rect x="770.3" y="341" width="2.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="773.27" y="351.5" ></text>
</g>
<g >
<title>__list_add_valid (12,000,000 samples, 0.02%)</title><rect x="136.8" y="997" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="139.81" y="1007.5" ></text>
</g>
<g >
<title>step_into (12,500,000 samples, 0.02%)</title><rect x="22.4" y="949" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="25.43" y="959.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (9,500,000 samples, 0.01%)</title><rect x="785.0" y="309" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="788.03" y="319.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (38,750,000 samples, 0.06%)</title><rect x="68.1" y="1109" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="71.09" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (7,750,000 samples, 0.01%)</title><rect x="458.6" y="885" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="461.64" y="895.5" ></text>
</g>
<g >
<title>do_futex (3,849,750,000 samples, 5.50%)</title><rect x="894.5" y="789" width="64.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="897.47" y="799.5" >do_futex</text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (26,250,000 samples, 0.04%)</title><rect x="524.1" y="773" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="527.15" y="783.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (117,250,000 samples, 0.17%)</title><rect x="20.7" y="981" width="1.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="23.66" y="991.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (9,750,000 samples, 0.01%)</title><rect x="838.4" y="837" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="841.36" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (6,250,000 samples, 0.01%)</title><rect x="779.5" y="309" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="782.53" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (67,500,000 samples, 0.10%)</title><rect x="787.0" y="325" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="790.03" y="335.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,741,000,000 samples, 2.49%)</title><rect x="330.5" y="309" width="29.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="333.55" y="319.5" >st..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_deleter (7,750,000 samples, 0.01%)</title><rect x="379.4" y="933" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="382.36" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (55,000,000 samples, 0.08%)</title><rect x="475.3" y="613" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="478.28" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,000,000 samples, 0.01%)</title><rect x="851.4" y="805" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="854.36" y="815.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; &gt; (18,000,000 samples, 0.03%)</title><rect x="651.6" y="821" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="654.59" y="831.5" ></text>
</g>
<g >
<title>std::queue&lt;std::function&lt;void  (40,500,000 samples, 0.06%)</title><rect x="637.6" y="917" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="640.56" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (40,000,000 samples, 0.06%)</title><rect x="484.1" y="421" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="487.13" y="431.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (19,250,000 samples, 0.03%)</title><rect x="337.2" y="213" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="340.23" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,750,000 samples, 0.01%)</title><rect x="661.9" y="789" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="664.88" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (23,500,000 samples, 0.03%)</title><rect x="498.8" y="245" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="501.85" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;86400l, 1l&gt;, void&gt; (18,500,000 samples, 0.03%)</title><rect x="773.5" y="309" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="776.54" y="319.5" ></text>
</g>
<g >
<title>minilog::generic_log&lt;unsigned int&amp;&gt; (13,564,000,000 samples, 19.39%)</title><rect x="641.4" y="885" width="228.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="644.38" y="895.5" >minilog::generic_log&lt;unsigned ..</text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::subseconds (11,250,000 samples, 0.02%)</title><rect x="751.5" y="357" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="754.51" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (15,250,000 samples, 0.02%)</title><rect x="737.5" y="149" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="740.51" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8,000,000 samples, 0.01%)</title><rect x="483.4" y="437" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="486.44" y="447.5" ></text>
</g>
<g >
<title>wake_up_q (12,250,000 samples, 0.02%)</title><rect x="390.8" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="393.77" y="1023.5" ></text>
</g>
<g >
<title>ext4_getattr (46,000,000 samples, 0.07%)</title><rect x="17.5" y="1029" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="20.49" y="1039.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (8,250,000 samples, 0.01%)</title><rect x="874.6" y="597" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="877.56" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (6,000,000 samples, 0.01%)</title><rect x="879.9" y="773" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="882.95" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11,500,000 samples, 0.02%)</title><rect x="491.7" y="469" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="494.70" y="479.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (789,000,000 samples, 1.13%)</title><rect x="790.4" y="341" width="13.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="793.43" y="351.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (193,250,000 samples, 0.28%)</title><rect x="667.2" y="757" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="670.23" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (13,250,000 samples, 0.02%)</title><rect x="853.7" y="821" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="856.69" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (376,750,000 samples, 0.54%)</title><rect x="1174.1" y="1141" width="6.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1177.12" y="1151.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7,750,000 samples, 0.01%)</title><rect x="523.1" y="773" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="526.07" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (73,250,000 samples, 0.10%)</title><rect x="842.9" y="853" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="845.91" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (13,500,000 samples, 0.02%)</title><rect x="836.1" y="837" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="839.14" y="847.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (12,500,000 samples, 0.02%)</title><rect x="313.4" y="693" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="316.38" y="703.5" ></text>
</g>
<g >
<title>hash_futex (13,500,000 samples, 0.02%)</title><rect x="105.0" y="1013" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="107.99" y="1023.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (25,250,000 samples, 0.04%)</title><rect x="717.2" y="309" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="720.23" y="319.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (12,000,000 samples, 0.02%)</title><rect x="890.9" y="805" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="893.91" y="815.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (37,000,000 samples, 0.05%)</title><rect x="541.7" y="933" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="544.74" y="943.5" ></text>
</g>
<g >
<title>std::to_address&lt;char const&gt; (6,750,000 samples, 0.01%)</title><rect x="859.7" y="789" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="862.68" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::packaged_task&lt;void  (40,750,000 samples, 0.06%)</title><rect x="881.0" y="773" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="884.02" y="783.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (7,500,000 samples, 0.01%)</title><rect x="738.3" y="133" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="741.30" y="143.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,710,500,000 samples, 5.30%)</title><rect x="896.8" y="741" width="62.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="899.82" y="751.5" >try_to..</text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (18,500,000 samples, 0.03%)</title><rect x="470.5" y="725" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="473.54" y="735.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (10,750,000 samples, 0.02%)</title><rect x="761.9" y="133" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="764.89" y="143.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt; (19,000,000 samples, 0.03%)</title><rect x="473.9" y="661" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="476.88" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (34,000,000 samples, 0.05%)</title><rect x="475.4" y="581" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="478.42" y="591.5" ></text>
</g>
<g >
<title>std::locale::~locale (9,250,000 samples, 0.01%)</title><rect x="815.0" y="597" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="817.95" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (277,750,000 samples, 0.40%)</title><rect x="54.6" y="1109" width="4.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="57.59" y="1119.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (9,000,000 samples, 0.01%)</title><rect x="876.3" y="629" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="879.32" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (8,750,000 samples, 0.01%)</title><rect x="687.2" y="597" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="690.19" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,500,000 samples, 0.01%)</title><rect x="332.3" y="245" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="335.25" y="255.5" ></text>
</g>
<g >
<title>minilog::log_info&lt;int&amp;, unsigned long&gt; (4,051,250,000 samples, 5.79%)</title><rect x="309.7" y="805" width="68.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="312.69" y="815.5" >minilog..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (6,750,000 samples, 0.01%)</title><rect x="880.2" y="741" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="883.19" y="751.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (14,750,000 samples, 0.02%)</title><rect x="662.9" y="773" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="665.86" y="783.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (7,500,000 samples, 0.01%)</title><rect x="730.7" y="261" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="733.73" y="271.5" ></text>
</g>
<g >
<title>std::mutex::lock (486,250,000 samples, 0.70%)</title><rect x="549.7" y="965" width="8.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="552.66" y="975.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (36,500,000 samples, 0.05%)</title><rect x="695.0" y="597" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="698.04" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, threadpool::ThreadPool::submit&lt;test (178,500,000 samples, 0.26%)</title><rect x="877.4" y="853" width="3.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="880.43" y="863.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (7,500,000 samples, 0.01%)</title><rect x="1177.5" y="1093" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1180.46" y="1103.5" ></text>
</g>
<g >
<title>strncpy_from_user (82,000,000 samples, 0.12%)</title><rect x="48.8" y="997" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="51.78" y="1007.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (6,250,000 samples, 0.01%)</title><rect x="74.9" y="1077" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="77.87" y="1087.5" ></text>
</g>
<g >
<title>ankerl::nanobench::detail::IterationLogic::Impl::showResult (20,500,000 samples, 0.03%)</title><rect x="385.0" y="1125" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="388.05" y="1135.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (39,250,000 samples, 0.06%)</title><rect x="893.1" y="853" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="896.15" y="863.5" ></text>
</g>
<g >
<title>_ZZNSt6chrono12_GLOBAL__N_114do_locate_zoneERKSt6vectorINS_9time_zoneESaIS2_EERKS1_INS_14time_zone_linkESaIS7_EESt17basic_string_viewIcSt11char_traitsIcEEENKUlTyRKT_SF_E_clIS4_EEDaSI_SF_.isra.0 (72,250,000 samples, 0.10%)</title><rect x="13.4" y="1109" width="1.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="16.43" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (13,000,000 samples, 0.02%)</title><rect x="332.2" y="277" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="335.17" y="287.5" ></text>
</g>
<g >
<title>do_futex (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="391.85" y="1055.5" ></text>
</g>
<g >
<title>std::to_chars (7,250,000 samples, 0.01%)</title><rect x="524.6" y="773" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="527.62" y="783.5" ></text>
</g>
<g >
<title>generic_permission (14,750,000 samples, 0.02%)</title><rect x="46.1" y="949" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="49.15" y="959.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (21,500,000 samples, 0.03%)</title><rect x="375.6" y="597" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="378.56" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (21,250,000 samples, 0.03%)</title><rect x="539.1" y="965" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="542.06" y="975.5" ></text>
</g>
<g >
<title>ankerl::nanobench::detail::PerformanceCounters::PerformanceCounters (6,750,000 samples, 0.01%)</title><rect x="385.8" y="1125" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="388.81" y="1135.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (13,000,000 samples, 0.02%)</title><rect x="806.4" y="357" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="809.45" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (221,250,000 samples, 0.32%)</title><rect x="542.7" y="981" width="3.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="545.71" y="991.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (22,500,000 samples, 0.03%)</title><rect x="1180.9" y="1141" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1183.93" y="1151.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&amp;&gt; (2,761,500,000 samples, 3.95%)</title><rect x="473.5" y="677" width="46.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="476.47" y="687.5" >std:..</text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (7,000,000 samples, 0.01%)</title><rect x="518.0" y="485" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="520.96" y="495.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (17,250,000 samples, 0.02%)</title><rect x="728.4" y="293" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="731.41" y="303.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (4,172,250,000 samples, 5.96%)</title><rect x="557.9" y="981" width="70.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="560.93" y="991.5" >std::un..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (213,000,000 samples, 0.30%)</title><rect x="497.7" y="341" width="3.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="500.71" y="351.5" ></text>
</g>
<g >
<title>wake_up_q (10,250,000 samples, 0.01%)</title><rect x="417.5" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="420.45" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (35,750,000 samples, 0.05%)</title><rect x="301.7" y="1125" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="304.68" y="1135.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, unsigned short, char const*&gt; (7,250,000 samples, 0.01%)</title><rect x="797.7" y="165" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="800.67" y="175.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (18,750,000 samples, 0.03%)</title><rect x="852.2" y="821" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="855.17" y="831.5" ></text>
</g>
<g >
<title>do_futex (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="442.01" y="1055.5" ></text>
</g>
<g >
<title>do_futex (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1045" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="441.54" y="1055.5" ></text>
</g>
<g >
<title>__x64_sys_futex (540,500,000 samples, 0.77%)</title><rect x="96.2" y="1077" width="9.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="99.24" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,000,000 samples, 0.01%)</title><rect x="324.5" y="517" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="327.49" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (58,750,000 samples, 0.08%)</title><rect x="306.8" y="1109" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="309.83" y="1119.5" ></text>
</g>
<g >
<title>futex_wake (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="442.01" y="1039.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (10,250,000 samples, 0.01%)</title><rect x="338.4" y="69" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="341.39" y="79.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (24,500,000 samples, 0.04%)</title><rect x="1180.5" y="1141" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1183.50" y="1151.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 3ul&gt; (40,750,000 samples, 0.06%)</title><rect x="502.8" y="421" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="505.77" y="431.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (6,750,000 samples, 0.01%)</title><rect x="656.5" y="789" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="659.53" y="799.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::advance_to (7,250,000 samples, 0.01%)</title><rect x="760.4" y="229" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="763.39" y="239.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (359,750,000 samples, 0.51%)</title><rect x="795.4" y="277" width="6.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="798.38" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (8,250,000 samples, 0.01%)</title><rect x="1171.2" y="1141" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1174.18" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,500,000 samples, 0.01%)</title><rect x="418.9" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="421.90" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::packaged_task&lt;void  (236,500,000 samples, 0.34%)</title><rect x="873.1" y="789" width="4.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="876.13" y="799.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (16,000,000 samples, 0.02%)</title><rect x="862.7" y="661" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="865.73" y="671.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (14,000,000 samples, 0.02%)</title><rect x="792.9" y="261" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="795.90" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,750,000 samples, 0.02%)</title><rect x="845.1" y="821" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="848.09" y="831.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (14,750,000 samples, 0.02%)</title><rect x="693.9" y="565" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="696.93" y="575.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; const&gt; (3,350,000,000 samples, 4.79%)</title><rect x="465.8" y="805" width="56.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="468.84" y="815.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (96,000,000 samples, 0.14%)</title><rect x="846.7" y="773" width="1.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="849.75" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (31,500,000 samples, 0.05%)</title><rect x="409.3" y="1093" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="412.31" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (73,250,000 samples, 0.10%)</title><rect x="466.8" y="757" width="1.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="469.80" y="767.5" ></text>
</g>
<g >
<title>__legitimize_path (43,750,000 samples, 0.06%)</title><rect x="44.4" y="949" width="0.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="47.41" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,250,000 samples, 0.01%)</title><rect x="453.0" y="901" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="456.02" y="911.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (1,809,500,000 samples, 2.59%)</title><rect x="330.3" y="357" width="30.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="333.32" y="367.5" >st..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (6,250,000 samples, 0.01%)</title><rect x="352.6" y="245" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="355.64" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (8,250,000 samples, 0.01%)</title><rect x="521.7" y="725" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="524.68" y="735.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2,794,250,000 samples, 3.99%)</title><rect x="473.0" y="693" width="47.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="475.95" y="703.5" >std:..</text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40,750,000 samples, 0.06%)</title><rect x="689.6" y="613" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="692.57" y="623.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,574,000,000 samples, 3.68%)</title><rect x="320.9" y="645" width="43.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="323.88" y="655.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (6,750,000 samples, 0.01%)</title><rect x="701.4" y="517" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="704.37" y="527.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_dd_zero_fill&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (151,750,000 samples, 0.22%)</title><rect x="748.4" y="357" width="2.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="751.44" y="367.5" ></text>
</g>
<g >
<title>wake_up_q (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="418.32" y="1023.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (10,250,000 samples, 0.01%)</title><rect x="717.5" y="277" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="720.47" y="287.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::is_open (11,500,000 samples, 0.02%)</title><rect x="529.3" y="965" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="532.26" y="975.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (7,250,000 samples, 0.01%)</title><rect x="316.1" y="725" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="319.10" y="735.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (18,000,000 samples, 0.03%)</title><rect x="750.3" y="309" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="753.26" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;char const*&gt; (6,500,000 samples, 0.01%)</title><rect x="311.9" y="741" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="314.94" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (33,000,000 samples, 0.05%)</title><rect x="362.9" y="565" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="365.87" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (9,250,000 samples, 0.01%)</title><rect x="825.6" y="725" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="828.61" y="735.5" ></text>
</g>
<g >
<title>__legitimize_mnt (53,000,000 samples, 0.08%)</title><rect x="19.4" y="933" width="0.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="22.43" y="943.5" ></text>
</g>
<g >
<title>__memchr_avx2 (22,750,000 samples, 0.03%)</title><rect x="740.4" y="293" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="743.39" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (16,750,000 samples, 0.02%)</title><rect x="648.2" y="837" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="651.22" y="847.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_info (109,500,000 samples, 0.16%)</title><rect x="466.6" y="773" width="1.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="469.62" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::~shared_ptr (9,000,000 samples, 0.01%)</title><rect x="547.2" y="981" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="550.22" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,000,000 samples, 0.01%)</title><rect x="693.0" y="581" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="696.05" y="591.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (10,250,000 samples, 0.01%)</title><rect x="323.5" y="549" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="326.45" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13,250,000 samples, 0.02%)</title><rect x="788.8" y="277" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="791.79" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (27,000,000 samples, 0.04%)</title><rect x="1178.9" y="1093" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1181.89" y="1103.5" ></text>
</g>
<g >
<title>malloc (477,250,000 samples, 0.68%)</title><rect x="960.3" y="1141" width="8.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="963.31" y="1151.5" ></text>
</g>
<g >
<title>std::locale::locale (16,250,000 samples, 0.02%)</title><rect x="447.1" y="1093" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="450.10" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (82,250,000 samples, 0.12%)</title><rect x="532.4" y="917" width="1.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="535.35" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (11,500,000 samples, 0.02%)</title><rect x="527.9" y="965" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="530.87" y="975.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (21,250,000 samples, 0.03%)</title><rect x="705.8" y="517" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="708.84" y="527.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (24,750,000 samples, 0.04%)</title><rect x="482.1" y="453" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="485.09" y="463.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="869.7" y="853" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="872.67" y="863.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::_M_get_sys_info (39,500,000 samples, 0.06%)</title><rect x="469.0" y="741" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="472.00" y="751.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (106,500,000 samples, 0.15%)</title><rect x="866.5" y="821" width="1.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="869.50" y="831.5" ></text>
</g>
<g >
<title>wake_up_q (7,750,000 samples, 0.01%)</title><rect x="87.6" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="90.63" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (70,250,000 samples, 0.10%)</title><rect x="499.7" y="293" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="502.70" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1061" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="392.95" y="1071.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (11,750,000 samples, 0.02%)</title><rect x="669.6" y="741" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="672.55" y="751.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (41,500,000 samples, 0.06%)</title><rect x="653.8" y="805" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="656.84" y="815.5" ></text>
</g>
<g >
<title>std::__format::__int_from_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (18,000,000 samples, 0.03%)</title><rect x="499.8" y="261" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="502.83" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (18,500,000 samples, 0.03%)</title><rect x="509.6" y="389" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="512.64" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (34,750,000 samples, 0.05%)</title><rect x="547.4" y="981" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="550.39" y="991.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (83,000,000 samples, 0.12%)</title><rect x="693.4" y="613" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="696.36" y="623.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::fulltext_log_assert_to_stream (6,500,000 samples, 0.01%)</title><rect x="391.9" y="1125" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="394.91" y="1135.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (11,500,000 samples, 0.02%)</title><rect x="793.4" y="261" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="796.41" y="271.5" ></text>
</g>
<g >
<title>schedule (14,750,000 samples, 0.02%)</title><rect x="890.1" y="741" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="893.13" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, test (4,093,000,000 samples, 5.85%)</title><rect x="309.2" y="837" width="69.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="312.25" y="847.5" >std::__..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (33,250,000 samples, 0.05%)</title><rect x="879.8" y="789" width="0.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="882.81" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (100,000,000 samples, 0.14%)</title><rect x="532.3" y="933" width="1.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="535.26" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20,250,000 samples, 0.03%)</title><rect x="334.9" y="229" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="337.88" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,250,000 samples, 0.01%)</title><rect x="787.5" y="309" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="790.54" y="319.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="783.3" y="325" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="786.32" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (187,250,000 samples, 0.27%)</title><rect x="487.0" y="405" width="3.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="489.99" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (7,500,000 samples, 0.01%)</title><rect x="725.8" y="277" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="728.82" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__future_base::_Result&lt;void&gt;*, std::__future_base::_Result_base::_Deleter&gt; (6,000,000 samples, 0.01%)</title><rect x="379.4" y="917" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="382.39" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1093" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="441.54" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (26,500,000 samples, 0.04%)</title><rect x="375.5" y="613" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="378.49" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (20,250,000 samples, 0.03%)</title><rect x="448.4" y="933" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="451.37" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1093" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="443.52" y="1103.5" ></text>
</g>
<g >
<title>lockref_put_return (13,500,000 samples, 0.02%)</title><rect x="42.9" y="997" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="45.89" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::get_tzdb_list (35,750,000 samples, 0.05%)</title><rect x="529.7" y="965" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="532.74" y="975.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (22,000,000 samples, 0.03%)</title><rect x="447.5" y="1013" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="450.53" y="1023.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (191,250,000 samples, 0.27%)</title><rect x="344.4" y="213" width="3.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="347.43" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="393.75" y="1071.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (6,250,000 samples, 0.01%)</title><rect x="498.9" y="229" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="501.94" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11,781,500,000 samples, 16.84%)</title><rect x="969.6" y="1093" width="198.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="972.64" y="1103.5" >__x64_sys_futex</text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (9,250,000 samples, 0.01%)</title><rect x="310.0" y="773" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="313.03" y="783.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (8,500,000 samples, 0.01%)</title><rect x="468.7" y="725" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="471.71" y="735.5" ></text>
</g>
<g >
<title>[unknown] (29,500,000 samples, 0.04%)</title><rect x="850.8" y="821" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="853.83" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;unsigned int&gt; (81,000,000 samples, 0.12%)</title><rect x="837.3" y="869" width="1.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="840.27" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,500,000 samples, 0.02%)</title><rect x="660.0" y="741" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="663.02" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (38,000,000 samples, 0.05%)</title><rect x="786.1" y="341" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="789.07" y="351.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;unsigned int const&gt; (6,750,000 samples, 0.01%)</title><rect x="343.5" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="346.52" y="255.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, unsigned int&gt;::_S_make_elt&lt;unsigned int&gt; (21,500,000 samples, 0.03%)</title><rect x="836.7" y="869" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="839.74" y="879.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (7,250,000 samples, 0.01%)</title><rect x="495.6" y="389" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="498.62" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (70,750,000 samples, 0.10%)</title><rect x="450.5" y="997" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="453.46" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (40,000,000 samples, 0.06%)</title><rect x="511.0" y="405" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="513.99" y="415.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (65,000,000 samples, 0.09%)</title><rect x="312.8" y="741" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="315.78" y="751.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned int, std::__format::_Sink_iter&lt;char&gt; &gt; (218,000,000 samples, 0.31%)</title><rect x="861.8" y="725" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="864.82" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (92,000,000 samples, 0.13%)</title><rect x="821.0" y="661" width="1.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="823.96" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (930,750,000 samples, 1.33%)</title><rect x="15.5" y="1093" width="15.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.50" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,500,000 samples, 0.01%)</title><rect x="443.7" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="446.66" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (10,250,000 samples, 0.01%)</title><rect x="775.2" y="325" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="778.21" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (42,500,000 samples, 0.06%)</title><rect x="881.0" y="821" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="883.99" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (17,750,000 samples, 0.03%)</title><rect x="452.9" y="917" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="455.88" y="927.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (205,750,000 samples, 0.29%)</title><rect x="25.5" y="1013" width="3.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="28.45" y="1023.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (51,750,000 samples, 0.07%)</title><rect x="675.5" y="757" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="678.53" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (53,000,000 samples, 0.08%)</title><rect x="648.7" y="837" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="651.69" y="847.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (9,250,000 samples, 0.01%)</title><rect x="76.5" y="1045" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="79.51" y="1055.5" ></text>
</g>
<g >
<title>minilog::details::output_log (4,488,500,000 samples, 6.42%)</title><rect x="452.1" y="965" width="75.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="455.14" y="975.5" >minilog:..</text>
</g>
<g >
<title>__memchr_avx2 (9,250,000 samples, 0.01%)</title><rect x="304.5" y="1125" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="307.47" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,500,000 samples, 0.01%)</title><rect x="371.5" y="693" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="374.50" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (7,000,000 samples, 0.01%)</title><rect x="754.2" y="325" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="757.19" y="335.5" ></text>
</g>
<g >
<title>do_futex (12,500,000 samples, 0.02%)</title><rect x="385.2" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="388.17" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::_S_from_days (17,750,000 samples, 0.03%)</title><rect x="481.7" y="437" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="484.65" y="447.5" ></text>
</g>
<g >
<title>readlink_copy (161,250,000 samples, 0.23%)</title><rect x="50.6" y="1013" width="2.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="53.63" y="1023.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;unsigned int&gt; (9,750,000 samples, 0.01%)</title><rect x="836.9" y="837" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="839.93" y="847.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (13,500,000 samples, 0.02%)</title><rect x="858.6" y="805" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="861.62" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (108,000,000 samples, 0.15%)</title><rect x="788.2" y="325" width="1.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="791.18" y="335.5" ></text>
</g>
<g >
<title>do_futex (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="421.66" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_ChronoSpec&lt;char&gt;::_ChronoSpec (8,750,000 samples, 0.01%)</title><rect x="808.1" y="389" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="811.15" y="399.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (6,500,000 samples, 0.01%)</title><rect x="529.5" y="965" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="532.46" y="975.5" ></text>
</g>
<g >
<title>__schedule (13,000,000 samples, 0.02%)</title><rect x="890.2" y="725" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="893.16" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,000,000 samples, 0.02%)</title><rect x="419.1" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="422.14" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7,250,000 samples, 0.01%)</title><rect x="341.1" y="277" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="344.09" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::numpunct&lt;char&gt;::decimal_point (38,500,000 samples, 0.06%)</title><rect x="746.5" y="373" width="0.7" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="749.51" y="383.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (32,500,000 samples, 0.05%)</title><rect x="721.9" y="341" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="724.87" y="351.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (20,750,000 samples, 0.03%)</title><rect x="800.8" y="181" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="803.83" y="191.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (23,250,000 samples, 0.03%)</title><rect x="707.1" y="517" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="710.14" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned int&gt; (28,250,000 samples, 0.04%)</title><rect x="865.0" y="661" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="867.98" y="671.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (12,750,000 samples, 0.02%)</title><rect x="672.1" y="757" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="675.15" y="767.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9,000,000 samples, 0.01%)</title><rect x="547.5" y="949" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="550.49" y="959.5" ></text>
</g>
<g >
<title>std::chrono::abs&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (14,750,000 samples, 0.02%)</title><rect x="774.5" y="325" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="777.46" y="335.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_dd_zero_fill&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (55,250,000 samples, 0.08%)</title><rect x="493.7" y="453" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="496.67" y="463.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_F&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (684,500,000 samples, 0.98%)</title><rect x="479.8" y="485" width="11.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="482.78" y="495.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (1,803,000,000 samples, 2.58%)</title><rect x="330.4" y="341" width="30.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="333.39" y="351.5" >st..</text>
</g>
<g >
<title>std::__basic_future&lt;void&gt;::__basic_future (25,000,000 samples, 0.04%)</title><rect x="546.6" y="965" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="549.58" y="975.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (6,250,000 samples, 0.01%)</title><rect x="883.3" y="757" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="886.29" y="767.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (20,250,000 samples, 0.03%)</title><rect x="539.7" y="949" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="542.72" y="959.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (26,000,000 samples, 0.04%)</title><rect x="820.2" y="693" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="823.17" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (14,500,000 samples, 0.02%)</title><rect x="458.8" y="901" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="461.78" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (23,750,000 samples, 0.03%)</title><rect x="314.6" y="709" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="317.55" y="719.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (374,500,000 samples, 0.54%)</title><rect x="733.0" y="277" width="6.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="736.05" y="287.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (383,000,000 samples, 0.55%)</title><rect x="795.0" y="293" width="6.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="797.99" y="303.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::minutes (15,250,000 samples, 0.02%)</title><rect x="505.1" y="421" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="508.15" y="431.5" ></text>
</g>
<g >
<title>__memchr_avx2 (14,000,000 samples, 0.02%)</title><rect x="490.5" y="389" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="493.51" y="399.5" ></text>
</g>
<g >
<title>futex_wait (18,000,000 samples, 0.03%)</title><rect x="31.6" y="1029" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="34.64" y="1039.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (9,250,000 samples, 0.01%)</title><rect x="356.0" y="213" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="358.96" y="223.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned int, std::__format::_Sink_iter&lt;char&gt; &gt; (35,750,000 samples, 0.05%)</title><rect x="363.5" y="597" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="366.53" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13,500,000 samples, 0.02%)</title><rect x="703.8" y="485" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="706.82" y="495.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::begin (13,750,000 samples, 0.02%)</title><rect x="771.2" y="293" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="774.15" y="303.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (7,000,000 samples, 0.01%)</title><rect x="336.2" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="339.23" y="223.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (236,000,000 samples, 0.34%)</title><rect x="497.4" y="373" width="4.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="500.43" y="383.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (51,500,000 samples, 0.07%)</title><rect x="823.4" y="661" width="0.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="826.37" y="671.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (6,250,000 samples, 0.01%)</title><rect x="765.1" y="149" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="768.14" y="159.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 3ul&gt;::rend (7,750,000 samples, 0.01%)</title><rect x="348.6" y="213" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="351.61" y="223.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (60,500,000 samples, 0.09%)</title><rect x="784.4" y="341" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="787.36" y="351.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;3600l, 1l&gt; &gt;, std::ratio&lt;1l, 3600000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,250,000 samples, 0.01%)</title><rect x="776.4" y="309" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="779.41" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (70,750,000 samples, 0.10%)</title><rect x="730.2" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="733.17" y="287.5" ></text>
</g>
<g >
<title>std::__format::__formatter_fp&lt;char&gt;::format&lt;float, std::__format::_Sink_iter&lt;char&gt; &gt; (12,750,000 samples, 0.02%)</title><rect x="418.8" y="1125" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="421.82" y="1135.5" ></text>
</g>
<g >
<title>inode_permission (45,750,000 samples, 0.07%)</title><rect x="21.1" y="965" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="24.15" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (19,250,000 samples, 0.03%)</title><rect x="29.5" y="1061" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="32.46" y="1071.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (10,000,000 samples, 0.01%)</title><rect x="326.7" y="453" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="329.68" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (126,500,000 samples, 0.18%)</title><rect x="543.3" y="853" width="2.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="546.32" y="863.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (85,750,000 samples, 0.12%)</title><rect x="446.0" y="1125" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="449.03" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (42,000,000 samples, 0.06%)</title><rect x="485.8" y="389" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="488.84" y="399.5" ></text>
</g>
<g >
<title>do_futex (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1045" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="392.95" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1045" width="326.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="636.43" y="1055.5" >std::function&lt;void </text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,750,000 samples, 0.01%)</title><rect x="372.2" y="725" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="375.22" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (69,000,000 samples, 0.10%)</title><rect x="63.1" y="1109" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="66.09" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (129,250,000 samples, 0.18%)</title><rect x="1178.3" y="1125" width="2.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1181.27" y="1135.5" ></text>
</g>
<g >
<title>_copy_to_user (31,750,000 samples, 0.05%)</title><rect x="52.3" y="997" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="55.30" y="1007.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (4,116,500,000 samples, 5.88%)</title><rect x="558.2" y="949" width="69.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="561.20" y="959.5" >__GI___..</text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::first (16,250,000 samples, 0.02%)</title><rect x="850.2" y="821" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="853.19" y="831.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (7,000,000 samples, 0.01%)</title><rect x="534.5" y="917" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="537.51" y="927.5" ></text>
</g>
<g >
<title>nd_jump_root (47,000,000 samples, 0.07%)</title><rect x="22.8" y="965" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="25.84" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (8,000,000 samples, 0.01%)</title><rect x="647.8" y="821" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="650.80" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10,000,000 samples, 0.01%)</title><rect x="381.4" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="384.44" y="1071.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (10,250,000 samples, 0.01%)</title><rect x="523.5" y="741" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="526.48" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,250,000 samples, 0.02%)</title><rect x="845.3" y="821" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="848.34" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (7,250,000 samples, 0.01%)</title><rect x="487.1" y="373" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="490.11" y="383.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned short, char const*&gt; (6,750,000 samples, 0.01%)</title><rect x="735.5" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="738.54" y="159.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (140,250,000 samples, 0.20%)</title><rect x="337.6" y="213" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="340.56" y="223.5" ></text>
</g>
<g >
<title>futex_wake (3,844,000,000 samples, 5.50%)</title><rect x="894.6" y="773" width="64.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="897.57" y="783.5" >futex_w..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (98,250,000 samples, 0.14%)</title><rect x="891.4" y="773" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="894.39" y="783.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (13,500,000 samples, 0.02%)</title><rect x="544.9" y="805" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="547.95" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (9,750,000 samples, 0.01%)</title><rect x="1177.7" y="1093" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1180.71" y="1103.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (7,500,000 samples, 0.01%)</title><rect x="830.9" y="789" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="833.88" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (22,000,000 samples, 0.03%)</title><rect x="448.3" y="949" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="451.34" y="959.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (6,750,000 samples, 0.01%)</title><rect x="720.2" y="325" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="723.18" y="335.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (9,000,000 samples, 0.01%)</title><rect x="857.1" y="773" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="860.12" y="783.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (120,000,000 samples, 0.17%)</title><rect x="337.8" y="165" width="2.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="340.83" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (8,000,000 samples, 0.01%)</title><rect x="489.0" y="245" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="492.03" y="255.5" ></text>
</g>
<g >
<title>futex_wake (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1029" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="392.95" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; &gt; (13,750,000 samples, 0.02%)</title><rect x="351.8" y="261" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="354.81" y="271.5" ></text>
</g>
<g >
<title>__memchr_avx2 (6,500,000 samples, 0.01%)</title><rect x="358.7" y="197" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="361.65" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (26,500,000 samples, 0.04%)</title><rect x="883.0" y="821" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="886.02" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (6,750,000 samples, 0.01%)</title><rect x="786.2" y="325" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="789.21" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (4,153,750,000 samples, 5.94%)</title><rect x="308.8" y="965" width="70.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="311.82" y="975.5" >std::__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,000,000 samples, 0.01%)</title><rect x="699.7" y="533" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="702.71" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (23,750,000 samples, 0.03%)</title><rect x="82.7" y="1077" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="85.69" y="1087.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (6,500,000 samples, 0.01%)</title><rect x="856.3" y="757" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="859.29" y="767.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (815,500,000 samples, 1.17%)</title><rect x="15.7" y="1061" width="13.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="18.70" y="1071.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (18,000,000 samples, 0.03%)</title><rect x="791.1" y="309" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="794.09" y="319.5" ></text>
</g>
<g >
<title>std::chrono::tzdb_list::begin (70,000,000 samples, 0.10%)</title><rect x="840.6" y="869" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="843.64" y="879.5" ></text>
</g>
<g >
<title>std::format&lt;int&gt; (1,269,250,000 samples, 1.81%)</title><rect x="720.9" y="373" width="21.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="723.90" y="383.5" >s..</text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (17,500,000 samples, 0.03%)</title><rect x="863.5" y="661" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="866.50" y="671.5" ></text>
</g>
<g >
<title>try_to_wake_up (7,500,000 samples, 0.01%)</title><rect x="417.2" y="997" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="420.20" y="1007.5" ></text>
</g>
<g >
<title>try_to_wake_up (11,750,000 samples, 0.02%)</title><rect x="385.2" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="388.18" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (12,000,000 samples, 0.02%)</title><rect x="415.3" y="1125" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="418.27" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (14,750,000 samples, 0.02%)</title><rect x="371.4" y="757" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="374.44" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (159,750,000 samples, 0.23%)</title><rect x="408.6" y="1125" width="2.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="411.61" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (19,500,000 samples, 0.03%)</title><rect x="790.1" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="793.10" y="351.5" ></text>
</g>
<g >
<title>complete_walk (53,500,000 samples, 0.08%)</title><rect x="44.3" y="981" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="47.33" y="991.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; const&gt; (8,217,500,000 samples, 11.75%)</title><rect x="679.9" y="709" width="138.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="682.90" y="719.5" >std::basic_format..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (16,500,000 samples, 0.02%)</title><rect x="544.1" y="725" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="547.11" y="735.5" ></text>
</g>
<g >
<title>ankerl::nanobench::Bench::run&lt;DOCTEST_ANON_FUNC_2 (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1077" width="180.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="450.48" y="1087.5" >ankerl::nanobench::Benc..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (31,250,000 samples, 0.04%)</title><rect x="777.2" y="309" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="780.15" y="319.5" ></text>
</g>
<g >
<title>__memchr_avx2 (14,250,000 samples, 0.02%)</title><rect x="365.5" y="677" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="368.46" y="687.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,250,000 samples, 0.01%)</title><rect x="503.8" y="421" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="506.76" y="431.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (651,500,000 samples, 0.93%)</title><rect x="756.5" y="309" width="10.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="759.45" y="319.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (13,250,000 samples, 0.02%)</title><rect x="483.0" y="437" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="486.03" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr&lt;std::__future_base::_Result_base::_Deleter, void&gt; (13,500,000 samples, 0.02%)</title><rect x="544.6" y="725" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="547.62" y="735.5" ></text>
</g>
<g >
<title>std::__create_task_state&lt;void  (151,750,000 samples, 0.22%)</title><rect x="543.2" y="885" width="2.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="546.19" y="895.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_get_width&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="862.2" y="693" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="865.23" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20,500,000 samples, 0.03%)</title><rect x="474.9" y="629" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="477.86" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="454.9" y="933" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="457.91" y="943.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (10,500,000 samples, 0.02%)</title><rect x="486.3" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="489.35" y="367.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_two_digits (11,750,000 samples, 0.02%)</title><rect x="719.0" y="373" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="721.96" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,250,000 samples, 0.01%)</title><rect x="381.4" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="384.44" y="1087.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (95,750,000 samples, 0.14%)</title><rect x="517.1" y="517" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="520.14" y="527.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10,500,000 samples, 0.02%)</title><rect x="72.5" y="1061" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="75.54" y="1071.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (394,750,000 samples, 0.56%)</title><rect x="887.2" y="901" width="6.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="890.15" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (26,000,000 samples, 0.04%)</title><rect x="327.5" y="437" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="330.50" y="447.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="460.4" y="869" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="463.44" y="879.5" ></text>
</g>
<g >
<title>std::to_chars (54,250,000 samples, 0.08%)</title><rect x="376.0" y="613" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="378.97" y="623.5" ></text>
</g>
<g >
<title>__check_heap_object (36,750,000 samples, 0.05%)</title><rect x="51.4" y="981" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="54.36" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,000,000 samples, 0.01%)</title><rect x="332.2" y="261" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="335.22" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (7,750,000 samples, 0.01%)</title><rect x="429.7" y="1109" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="432.71" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (18,000,000 samples, 0.03%)</title><rect x="325.4" y="485" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="328.43" y="495.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (6,000,000 samples, 0.01%)</title><rect x="730.9" y="261" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="733.89" y="271.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (18,750,000 samples, 0.03%)</title><rect x="359.3" y="277" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="362.28" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (36,500,000 samples, 0.05%)</title><rect x="743.3" y="373" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="746.31" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl (8,250,000 samples, 0.01%)</title><rect x="544.7" y="693" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="547.67" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (41,500,000 samples, 0.06%)</title><rect x="692.5" y="613" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="695.53" y="623.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::numpunct&lt;char&gt; &gt; (18,500,000 samples, 0.03%)</title><rect x="515.6" y="469" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="518.62" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,250,000 samples, 0.01%)</title><rect x="727.7" y="293" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="730.66" y="303.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (3,938,500,000 samples, 5.63%)</title><rect x="893.9" y="885" width="66.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="896.87" y="895.5" >std::un..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (337,250,000 samples, 0.48%)</title><rect x="860.0" y="805" width="5.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="863.05" y="815.5" ></text>
</g>
<g >
<title>futex_wait (458,000,000 samples, 0.65%)</title><rect x="97.6" y="1045" width="7.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="100.58" y="1055.5" ></text>
</g>
<g >
<title>wake_up_q (3,718,750,000 samples, 5.32%)</title><rect x="896.7" y="757" width="62.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="899.68" y="767.5" >wake_u..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (110,000,000 samples, 0.16%)</title><rect x="631.6" y="1141" width="1.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="634.58" y="1151.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (58,500,000 samples, 0.08%)</title><rect x="716.8" y="341" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="719.83" y="351.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::time_point&lt;std::chrono::local_t, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,188,500,000 samples, 3.13%)</title><rect x="324.9" y="533" width="37.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="327.95" y="543.5" >std..</text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (35,500,000 samples, 0.05%)</title><rect x="864.4" y="661" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="867.38" y="671.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (13,000,000 samples, 0.02%)</title><rect x="838.1" y="821" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="841.10" y="831.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (4,305,500,000 samples, 6.15%)</title><rect x="307.9" y="1077" width="72.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="310.95" y="1087.5" >std::cal..</text>
</g>
<g >
<title>std::formatter&lt;unsigned long long, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (92,500,000 samples, 0.13%)</title><rect x="375.4" y="645" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="378.35" y="655.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;unsigned int&gt; (13,250,000 samples, 0.02%)</title><rect x="678.9" y="709" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="681.92" y="719.5" ></text>
</g>
<g >
<title>mark_wake_futex (82,750,000 samples, 0.12%)</title><rect x="164.0" y="1029" width="1.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="167.02" y="1039.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (16,750,000 samples, 0.02%)</title><rect x="312.2" y="725" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="315.15" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (3,539,500,000 samples, 5.06%)</title><rect x="465.1" y="821" width="59.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="468.07" y="831.5" >std::_..</text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (208,750,000 samples, 0.30%)</title><rect x="854.6" y="789" width="3.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="857.58" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (31,750,000 samples, 0.05%)</title><rect x="705.7" y="533" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="708.67" y="543.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (542,750,000 samples, 0.78%)</title><rect x="758.0" y="277" width="9.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="760.96" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::thread::id&gt;::operator (9,750,000 samples, 0.01%)</title><rect x="378.1" y="805" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="381.06" y="815.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__format::_Arg_t const*&gt; (7,000,000 samples, 0.01%)</title><rect x="722.2" y="325" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="725.18" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (145,000,000 samples, 0.21%)</title><rect x="874.0" y="645" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="877.02" y="655.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (94,250,000 samples, 0.13%)</title><rect x="369.9" y="757" width="1.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="372.85" y="767.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (7,250,000 samples, 0.01%)</title><rect x="785.2" y="325" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="788.20" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::operator+= (6,000,000 samples, 0.01%)</title><rect x="799.5" y="149" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="802.50" y="159.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="393.35" y="1119.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6,000,000 samples, 0.01%)</title><rect x="75.6" y="1077" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="78.56" y="1087.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (42,500,000 samples, 0.06%)</title><rect x="552.7" y="853" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="555.69" y="863.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (25,750,000 samples, 0.04%)</title><rect x="468.0" y="757" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="471.03" y="767.5" ></text>
</g>
<g >
<title>std::chrono::current_zone (10,000,000 samples, 0.01%)</title><rect x="529.6" y="965" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="532.57" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (69,250,000 samples, 0.10%)</title><rect x="714.8" y="357" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="717.78" y="367.5" ></text>
</g>
<g >
<title>ankerl::nanobench::render (9,000,000 samples, 0.01%)</title><rect x="386.5" y="1125" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="389.47" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (8,500,000 samples, 0.01%)</title><rect x="692.3" y="613" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="695.35" y="623.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (18,750,000 samples, 0.03%)</title><rect x="704.9" y="549" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="707.93" y="559.5" ></text>
</g>
<g >
<title>std::to_chars (23,500,000 samples, 0.03%)</title><rect x="800.8" y="197" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="803.78" y="207.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;test (23,750,000 samples, 0.03%)</title><rect x="877.6" y="821" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="880.60" y="831.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (6,750,000 samples, 0.01%)</title><rect x="804.2" y="373" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="807.18" y="383.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;&amp;, char const*, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (4,350,500,000 samples, 6.22%)</title><rect x="454.3" y="949" width="73.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="457.32" y="959.5" >std::for..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14,500,000 samples, 0.02%)</title><rect x="535.5" y="853" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="538.50" y="863.5" ></text>
</g>
<g >
<title>std::formatter&lt;char, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (27,000,000 samples, 0.04%)</title><rect x="345.6" y="133" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="348.64" y="143.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::begin (13,500,000 samples, 0.02%)</title><rect x="410.0" y="1109" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="412.95" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (63,000,000 samples, 0.09%)</title><rect x="334.8" y="245" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="337.82" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (23,500,000 samples, 0.03%)</title><rect x="749.3" y="341" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="752.32" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (85,250,000 samples, 0.12%)</title><rect x="844.5" y="837" width="1.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="847.48" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (70,250,000 samples, 0.10%)</title><rect x="455.2" y="933" width="1.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="458.23" y="943.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (6,750,000 samples, 0.01%)</title><rect x="499.4" y="293" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="502.45" y="303.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (20,750,000 samples, 0.03%)</title><rect x="680.7" y="677" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="683.67" y="687.5" ></text>
</g>
<g >
<title>try_to_wake_up (8,500,000 samples, 0.01%)</title><rect x="415.3" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="418.32" y="1007.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (67,000,000 samples, 0.10%)</title><rect x="431.8" y="1125" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="434.77" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned long&gt; (16,500,000 samples, 0.02%)</title><rect x="800.9" y="165" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="803.89" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11,750,000 samples, 0.02%)</title><rect x="1177.2" y="1093" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1180.23" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true&gt;::__uniq_ptr_impl (9,500,000 samples, 0.01%)</title><rect x="544.7" y="709" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="547.67" y="719.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (30,000,000 samples, 0.04%)</title><rect x="735.9" y="197" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="738.93" y="207.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (8,123,500,000 samples, 11.61%)</title><rect x="681.0" y="693" width="137.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="684.03" y="703.5" >std::formatter&lt;st..</text>
</g>
<g >
<title>lookup_fast (23,500,000 samples, 0.03%)</title><rect x="46.5" y="949" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="49.49" y="959.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;86400000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; (8,500,000 samples, 0.01%)</title><rect x="717.5" y="261" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="720.48" y="271.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;unsigned int&gt; (6,250,000 samples, 0.01%)</title><rect x="837.2" y="869" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="840.16" y="879.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (10,000,000 samples, 0.01%)</title><rect x="375.2" y="597" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="378.16" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (7,000,000 samples, 0.01%)</title><rect x="1185.6" y="1093" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1188.64" y="1103.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::begin (7,500,000 samples, 0.01%)</title><rect x="789.7" y="309" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="792.71" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (157,250,000 samples, 0.22%)</title><rect x="701.9" y="517" width="2.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="704.87" y="527.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (98,250,000 samples, 0.14%)</title><rect x="760.6" y="213" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="763.64" y="223.5" ></text>
</g>
<g >
<title>futex_wake (11,764,500,000 samples, 16.82%)</title><rect x="969.9" y="1061" width="198.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="972.93" y="1071.5" >futex_wake</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (44,000,000 samples, 0.06%)</title><rect x="457.5" y="885" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="460.48" y="895.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (14,750,000 samples, 0.02%)</title><rect x="695.7" y="597" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="698.66" y="607.5" ></text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (43,250,000 samples, 0.06%)</title><rect x="434.0" y="1093" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="437.00" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (56,250,000 samples, 0.08%)</title><rect x="532.5" y="885" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="535.46" y="895.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_WidthPrecVisitor, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (28,750,000 samples, 0.04%)</title><rect x="763.3" y="149" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="766.34" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (30,500,000 samples, 0.04%)</title><rect x="429.0" y="1077" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="431.98" y="1087.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (8,250,000 samples, 0.01%)</title><rect x="516.6" y="485" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="519.61" y="495.5" ></text>
</g>
<g >
<title>std::format&lt;long&gt; (461,250,000 samples, 0.66%)</title><rect x="507.7" y="469" width="7.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="510.66" y="479.5" ></text>
</g>
<g >
<title>wake_up_q (8,014,500,000 samples, 11.46%)</title><rect x="165.5" y="1029" width="135.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="168.53" y="1039.5" >wake_up_q</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (34,750,000 samples, 0.05%)</title><rect x="659.4" y="741" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="662.37" y="751.5" ></text>
</g>
<g >
<title>__pthread_once_slow (4,411,000,000 samples, 6.31%)</title><rect x="306.2" y="1125" width="74.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="309.18" y="1135.5" >__pthrea..</text>
</g>
<g >
<title>doctest::(anonymous namespace)::ConsoleReporter::test_run_end (8,000,000 samples, 0.01%)</title><rect x="389.3" y="1125" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="392.29" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (924,250,000 samples, 1.32%)</title><rect x="853.0" y="837" width="15.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="855.99" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;long&gt; (8,500,000 samples, 0.01%)</title><rect x="784.0" y="341" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="786.98" y="351.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (7,046,000,000 samples, 10.07%)</title><rect x="695.9" y="597" width="118.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="698.90" y="607.5" >std::chrono::o..</text>
</g>
<g >
<title>std::chrono::(anonymous namespace)::do_locate_zone (20,250,000 samples, 0.03%)</title><rect x="69.1" y="1109" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="72.11" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (141,500,000 samples, 0.20%)</title><rect x="80.8" y="1093" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="83.75" y="1103.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1109" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="441.54" y="1119.5" ></text>
</g>
<g >
<title>do_futex (7,500,000 samples, 0.01%)</title><rect x="417.2" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="420.20" y="1055.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 5ul&gt; (63,250,000 samples, 0.09%)</title><rect x="455.3" y="917" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="458.29" y="927.5" ></text>
</g>
<g >
<title>generic_fillattr (13,750,000 samples, 0.02%)</title><rect x="18.0" y="1013" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="21.03" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1061" width="326.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="636.43" y="1071.5" >std::__invoke_impl&lt;void, std::function&lt;void </text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (55,500,000 samples, 0.08%)</title><rect x="513.3" y="309" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="516.28" y="319.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,014,750,000 samples, 1.45%)</title><rect x="753.1" y="341" width="17.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="756.06" y="351.5" ></text>
</g>
<g >
<title>operator new (7,000,000 samples, 0.01%)</title><rect x="546.1" y="917" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="549.14" y="927.5" ></text>
</g>
<g >
<title>std::chrono::get_tzdb_list (47,500,000 samples, 0.07%)</title><rect x="839.7" y="869" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="842.73" y="879.5" ></text>
</g>
<g >
<title>do_futex (20,250,000 samples, 0.03%)</title><rect x="31.6" y="1045" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="34.60" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (17,500,000 samples, 0.03%)</title><rect x="324.4" y="549" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="327.40" y="559.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl_deleter::operator (64,500,000 samples, 0.09%)</title><rect x="430.6" y="1125" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="433.64" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (6,000,000 samples, 0.01%)</title><rect x="794.3" y="277" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="797.28" y="287.5" ></text>
</g>
<g >
<title>std::to_chars (26,500,000 samples, 0.04%)</title><rect x="489.5" y="293" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="492.53" y="303.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rbegin (6,250,000 samples, 0.01%)</title><rect x="837.6" y="837" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="840.62" y="847.5" ></text>
</g>
<g >
<title>path_lookupat (362,750,000 samples, 0.52%)</title><rect x="19.2" y="997" width="6.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="22.19" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; &gt; (24,000,000 samples, 0.03%)</title><rect x="651.5" y="837" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="654.50" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,500,000 samples, 0.01%)</title><rect x="418.7" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="421.66" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,750,000 samples, 0.01%)</title><rect x="786.5" y="325" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="789.48" y="335.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (7,750,000 samples, 0.01%)</title><rect x="505.5" y="421" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="508.53" y="431.5" ></text>
</g>
<g >
<title>std::filesystem::read_symlink (38,750,000 samples, 0.06%)</title><rect x="410.6" y="1109" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="413.65" y="1119.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::numpunct&lt;char&gt; &gt; (36,750,000 samples, 0.05%)</title><rect x="804.6" y="373" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="807.61" y="383.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (80,500,000 samples, 0.12%)</title><rect x="457.0" y="917" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="459.97" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (19,500,000 samples, 0.03%)</title><rect x="534.0" y="949" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="536.97" y="959.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,580,750,000 samples, 3.69%)</title><rect x="320.8" y="661" width="43.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="323.77" y="671.5" >std:..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;3600000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;3600l, 1l&gt; &gt; (9,500,000 samples, 0.01%)</title><rect x="505.8" y="373" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="508.84" y="383.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (7,750,000 samples, 0.01%)</title><rect x="835.2" y="837" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="838.24" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned int&gt; (10,750,000 samples, 0.02%)</title><rect x="824.8" y="629" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="827.81" y="639.5" ></text>
</g>
<g >
<title>[units_test] (7,500,000 samples, 0.01%)</title><rect x="10.9" y="1125" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="13.88" y="1135.5" ></text>
</g>
<g >
<title>do_futex (8,500,000 samples, 0.01%)</title><rect x="418.9" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="421.90" y="1055.5" ></text>
</g>
<g >
<title>try_to_wake_up (7,990,500,000 samples, 11.42%)</title><rect x="165.9" y="1013" width="134.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="168.93" y="1023.5" >try_to_wake_up</text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (7,000,000 samples, 0.01%)</title><rect x="473.7" y="645" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="476.71" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,250,000 samples, 0.01%)</title><rect x="870.6" y="901" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="873.60" y="911.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (45,250,000 samples, 0.06%)</title><rect x="357.5" y="117" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="360.50" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,500,000 samples, 0.01%)</title><rect x="870.2" y="885" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="873.23" y="895.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_date&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (56,500,000 samples, 0.08%)</title><rect x="481.0" y="469" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="484.00" y="479.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (20,250,000 samples, 0.03%)</title><rect x="843.3" y="821" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="846.33" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const  (12,750,000 samples, 0.02%)</title><rect x="443.6" y="1125" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="446.59" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (79,750,000 samples, 0.11%)</title><rect x="805.4" y="389" width="1.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="808.39" y="399.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, threadpool::ThreadPool::submit&lt;test (114,750,000 samples, 0.16%)</title><rect x="540.4" y="981" width="2.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="543.44" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (25,250,000 samples, 0.04%)</title><rect x="333.3" y="261" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="336.32" y="271.5" ></text>
</g>
<g >
<title>__memchr_avx2 (46,000,000 samples, 0.07%)</title><rect x="628.4" y="1141" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="631.36" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,500,000 samples, 0.01%)</title><rect x="439.6" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="442.59" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (40,250,000 samples, 0.06%)</title><rect x="428.9" y="1093" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="431.86" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (22,250,000 samples, 0.03%)</title><rect x="457.0" y="901" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="460.04" y="911.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (8,859,750,000 samples, 12.67%)</title><rect x="676.4" y="757" width="149.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="679.43" y="767.5" >std::visit_format_a..</text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (13,250,000 samples, 0.02%)</title><rect x="762.4" y="197" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="765.45" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,500,000 samples, 0.01%)</title><rect x="439.0" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="442.01" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (77,250,000 samples, 0.11%)</title><rect x="317.6" y="677" width="1.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="320.61" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,878,000,000 samples, 5.54%)</title><rect x="894.3" y="837" width="65.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="897.32" y="847.5" >entry_S..</text>
</g>
<g >
<title>strlen (30,250,000 samples, 0.04%)</title><rect x="52.8" y="997" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="55.84" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_S_parse_width_or_precision (20,250,000 samples, 0.03%)</title><rect x="356.8" y="85" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="359.84" y="95.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="505.3" y="389" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="508.26" y="399.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (20,000,000 samples, 0.03%)</title><rect x="472.4" y="693" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="475.41" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (2,669,000,000 samples, 3.82%)</title><rect x="319.7" y="693" width="45.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="322.66" y="703.5" >std:..</text>
</g>
<g >
<title>std::_Bind&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="965" width="326.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="636.43" y="975.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>user_path_at_empty (610,750,000 samples, 0.87%)</title><rect x="18.8" y="1029" width="10.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="21.85" y="1039.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,000,000 samples, 0.01%)</title><rect x="433.7" y="1125" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="436.72" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (6,250,000 samples, 0.01%)</title><rect x="82.5" y="1061" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="85.49" y="1071.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="312.4" y="741" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="315.44" y="751.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (9,000,000 samples, 0.01%)</title><rect x="850.3" y="805" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="853.29" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (20,000,000 samples, 0.03%)</title><rect x="335.3" y="213" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="338.31" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,750,000 samples, 0.02%)</title><rect x="371.5" y="741" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="374.50" y="751.5" ></text>
</g>
<g >
<title>std::operator== (191,500,000 samples, 0.27%)</title><rect x="883.6" y="869" width="3.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="886.55" y="879.5" ></text>
</g>
<g >
<title>try_to_wake_up (12,250,000 samples, 0.02%)</title><rect x="390.8" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="393.77" y="1007.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (8,750,000 samples, 0.01%)</title><rect x="516.2" y="453" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="519.20" y="463.5" ></text>
</g>
<g >
<title>main (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1125" width="180.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="450.48" y="1135.5" >main</text>
</g>
<g >
<title>_raw_spin_lock (7,750,000 samples, 0.01%)</title><rect x="163.6" y="1029" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="166.56" y="1039.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::_Deleter::operator (56,000,000 samples, 0.08%)</title><rect x="875.1" y="517" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="878.11" y="527.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (10,639,500,000 samples, 15.21%)</title><rect x="448.9" y="1013" width="179.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="451.88" y="1023.5" >threadpool::ThreadPool:..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (41,000,000 samples, 0.06%)</title><rect x="881.0" y="789" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="884.02" y="799.5" ></text>
</g>
<g >
<title>minilog::details::log_level_name[abi:cxx11] (130,750,000 samples, 0.19%)</title><rect x="644.4" y="853" width="2.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="647.40" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,500,000 samples, 0.01%)</title><rect x="87.6" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="90.62" y="1087.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (23,500,000 samples, 0.03%)</title><rect x="672.7" y="773" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="675.69" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,750,000 samples, 0.01%)</title><rect x="480.9" y="453" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="483.88" y="463.5" ></text>
</g>
<g >
<title>__GI___lstat64 (31,750,000 samples, 0.05%)</title><rect x="40.5" y="1109" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="43.50" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;doctest::SubcaseSignature, std::allocator&lt;doctest::SubcaseSignature&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;doctest::SubcaseSignature*, std::vector&lt;doctest::SubcaseSignature, std::allocator&lt;doctest::SubcaseSignature&gt; &gt; &gt; &gt; (7,750,000 samples, 0.01%)</title><rect x="442.3" y="1125" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="445.35" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29,500,000 samples, 0.04%)</title><rect x="850.8" y="757" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="853.83" y="767.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (7,250,000 samples, 0.01%)</title><rect x="409.6" y="1045" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="412.60" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (75,750,000 samples, 0.11%)</title><rect x="734.6" y="197" width="1.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="737.60" y="207.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (28,500,000 samples, 0.04%)</title><rect x="757.5" y="277" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="760.45" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,000,000 samples, 0.01%)</title><rect x="324.2" y="517" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="327.16" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (22,750,000 samples, 0.03%)</title><rect x="714.1" y="373" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="717.13" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;std::__format::_Sink_iter&lt;char&gt;&amp;&gt; (7,250,000 samples, 0.01%)</title><rect x="818.6" y="693" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="821.62" y="703.5" ></text>
</g>
<g >
<title>user_path_at_empty (378,750,000 samples, 0.54%)</title><rect x="44.0" y="1029" width="6.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="47.05" y="1039.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rend (6,750,000 samples, 0.01%)</title><rect x="353.1" y="229" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="356.05" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (50,750,000 samples, 0.07%)</title><rect x="64.3" y="1109" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="67.25" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (4,039,250,000 samples, 5.77%)</title><rect x="459.1" y="901" width="68.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="462.11" y="911.5" >std::__..</text>
</g>
<g >
<title>std::formatter&lt;unsigned int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (36,750,000 samples, 0.05%)</title><rect x="363.5" y="613" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="366.52" y="623.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (13,500,000 samples, 0.02%)</title><rect x="534.6" y="933" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="537.63" y="943.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (727,250,000 samples, 1.04%)</title><rect x="728.9" y="325" width="12.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="731.92" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9,500,000 samples, 0.01%)</title><rect x="315.2" y="645" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="318.23" y="655.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (369,000,000 samples, 0.53%)</title><rect x="484.9" y="437" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="487.91" y="447.5" ></text>
</g>
<g >
<title>std::chrono::(anonymous namespace)::do_locate_zone (10,000,000 samples, 0.01%)</title><rect x="13.3" y="1093" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="16.25" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (94,750,000 samples, 0.14%)</title><rect x="659.1" y="757" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="662.07" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;test (4,098,500,000 samples, 5.86%)</title><rect x="309.2" y="853" width="69.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="312.20" y="863.5" >std::__..</text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (9,750,000 samples, 0.01%)</title><rect x="364.0" y="565" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="366.97" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,250,000 samples, 0.01%)</title><rect x="494.0" y="437" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="496.96" y="447.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (7,750,000 samples, 0.01%)</title><rect x="345.4" y="101" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="348.45" y="111.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (7,000,000 samples, 0.01%)</title><rect x="507.5" y="453" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="510.49" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::__normal_iterator (8,750,000 samples, 0.01%)</title><rect x="850.0" y="805" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="853.01" y="815.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle::_S_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (11,750,000 samples, 0.02%)</title><rect x="811.9" y="453" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="814.88" y="463.5" ></text>
</g>
<g >
<title>std::formatter&lt;int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (50,000,000 samples, 0.07%)</title><rect x="339.0" y="133" width="0.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="341.95" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (11,500,000 samples, 0.02%)</title><rect x="501.0" y="245" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="504.01" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1013" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="392.95" y="1023.5" ></text>
</g>
<g >
<title>doctest::toString (6,000,000 samples, 0.01%)</title><rect x="395.5" y="1125" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="398.46" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (729,250,000 samples, 1.04%)</title><rect x="42.3" y="1093" width="12.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="45.29" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&gt;::_S_make_elt&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&gt; (13,500,000 samples, 0.02%)</title><rect x="473.6" y="661" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="476.61" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,000,000 samples, 0.02%)</title><rect x="419.1" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="422.14" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,000,000 samples, 0.02%)</title><rect x="493.7" y="437" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="496.74" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12,250,000 samples, 0.02%)</title><rect x="749.5" y="309" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="752.46" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (26,500,000 samples, 0.04%)</title><rect x="513.5" y="261" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="516.51" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (6,250,000 samples, 0.01%)</title><rect x="1178.7" y="1109" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1181.68" y="1119.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;char const*&gt; (12,500,000 samples, 0.02%)</title><rect x="650.3" y="821" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="653.26" y="831.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::rend (33,500,000 samples, 0.05%)</title><rect x="653.3" y="805" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="656.27" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11,500,000 samples, 0.02%)</title><rect x="534.0" y="853" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="537.03" y="863.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (1,818,750,000 samples, 2.60%)</title><rect x="330.2" y="389" width="30.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="333.21" y="399.5" >st..</text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (12,750,000 samples, 0.02%)</title><rect x="852.3" y="805" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="855.26" y="815.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (45,250,000 samples, 0.06%)</title><rect x="117.6" y="1029" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="120.62" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (31,250,000 samples, 0.04%)</title><rect x="453.4" y="949" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="456.38" y="959.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (12,000,000 samples, 0.02%)</title><rect x="708.9" y="485" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="711.95" y="495.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (8,500,000 samples, 0.01%)</title><rect x="510.2" y="437" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="513.20" y="447.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (17,750,000 samples, 0.03%)</title><rect x="332.5" y="245" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="335.47" y="255.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (73,250,000 samples, 0.10%)</title><rect x="737.2" y="165" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="740.19" y="175.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::__format::_Arg_value&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_HandleBase, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle&amp;&gt; (6,500,000 samples, 0.01%)</title><rect x="651.7" y="789" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="654.74" y="799.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned int, std::__format::_Sink_iter&lt;char&gt; &gt; (38,750,000 samples, 0.06%)</title><rect x="524.1" y="789" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="527.08" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_futex (18,750,000 samples, 0.03%)</title><rect x="438.5" y="1061" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="441.54" y="1071.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (19,500,000 samples, 0.03%)</title><rect x="133.9" y="1013" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="136.95" y="1023.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::XmlReporter::report_query (21,000,000 samples, 0.03%)</title><rect x="390.6" y="1125" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="393.62" y="1135.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1029" width="326.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="636.43" y="1039.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>futex_wake (8,250,000 samples, 0.01%)</title><rect x="87.6" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="90.62" y="1039.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (7,500,000 samples, 0.01%)</title><rect x="342.0" y="277" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="345.05" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (20,000,000 samples, 0.03%)</title><rect x="10.0" y="1141" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.01" y="1151.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (16,750,000 samples, 0.02%)</title><rect x="753.9" y="293" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="756.86" y="303.5" ></text>
</g>
<g >
<title>std::to_chars (10,750,000 samples, 0.02%)</title><rect x="339.6" y="101" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="342.60" y="111.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (305,250,000 samples, 0.44%)</title><rect x="860.6" y="773" width="5.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="863.56" y="783.5" ></text>
</g>
<g >
<title>vfs_readlink (172,500,000 samples, 0.25%)</title><rect x="50.4" y="1029" width="2.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="53.44" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (12,250,000 samples, 0.02%)</title><rect x="434.7" y="1093" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="437.73" y="1103.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::advance_to (13,500,000 samples, 0.02%)</title><rect x="670.8" y="773" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="673.80" y="783.5" ></text>
</g>
<g >
<title>__tls_get_addr (38,500,000 samples, 0.06%)</title><rect x="380.7" y="1125" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="383.68" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (32,750,000 samples, 0.05%)</title><rect x="753.6" y="325" width="0.6" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="756.64" y="335.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (7,000,000 samples, 0.01%)</title><rect x="118.4" y="1045" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="121.38" y="1055.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (6,500,000 samples, 0.01%)</title><rect x="427.7" y="1077" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="430.74" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (44,500,000 samples, 0.06%)</title><rect x="488.7" y="293" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="491.72" y="303.5" ></text>
</g>
<g >
<title>futex_wait_setup (31,500,000 samples, 0.05%)</title><rect x="890.4" y="757" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="893.38" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;ankerl::nanobench::detail::fmt::MarkDownColumn, std::allocator&lt;ankerl::nanobench::detail::fmt::MarkDownColumn&gt; &gt;::_M_realloc_insert&lt;int, int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const  (6,750,000 samples, 0.01%)</title><rect x="440.2" y="1125" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="443.18" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (23,000,000 samples, 0.03%)</title><rect x="500.2" y="261" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="503.24" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::operator++ (7,250,000 samples, 0.01%)</title><rect x="747.4" y="357" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="750.36" y="367.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (232,250,000 samples, 0.33%)</title><rect x="497.5" y="357" width="3.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="500.47" y="367.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (9,750,000 samples, 0.01%)</title><rect x="775.7" y="309" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="778.67" y="319.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (10,250,000 samples, 0.01%)</title><rect x="795.2" y="277" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="798.20" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="393.35" y="1087.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,747,750,000 samples, 2.50%)</title><rect x="330.5" y="325" width="29.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="333.49" y="335.5" >st..</text>
</g>
<g >
<title>try_to_wake_up (9,750,000 samples, 0.01%)</title><rect x="381.4" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="384.44" y="1007.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,750,000 samples, 0.01%)</title><rect x="799.7" y="133" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="802.74" y="143.5" ></text>
</g>
<g >
<title>dput (23,500,000 samples, 0.03%)</title><rect x="18.4" y="1013" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="21.36" y="1023.5" ></text>
</g>
<g >
<title>vfs_statx (721,250,000 samples, 1.03%)</title><rect x="17.3" y="1045" width="12.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="20.29" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (60,750,000 samples, 0.09%)</title><rect x="880.7" y="853" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="883.71" y="863.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (78,500,000 samples, 0.11%)</title><rect x="31.2" y="1109" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="34.20" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_futex (100,500,000 samples, 0.14%)</title><rect x="889.2" y="805" width="1.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="892.22" y="815.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void  (4,313,750,000 samples, 6.17%)</title><rect x="307.8" y="1109" width="72.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="310.82" y="1119.5" >std::onc..</text>
</g>
<g >
<title>__list_add_valid (9,250,000 samples, 0.01%)</title><rect x="552.9" y="821" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="555.91" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;int&gt; (6,500,000 samples, 0.01%)</title><rect x="721.6" y="325" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="724.57" y="335.5" ></text>
</g>
<g >
<title>dput (15,500,000 samples, 0.02%)</title><rect x="42.9" y="1013" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="45.86" y="1023.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (1,171,000,000 samples, 1.67%)</title><rect x="722.6" y="357" width="19.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="725.56" y="367.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (11,000,000 samples, 0.02%)</title><rect x="488.0" y="261" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="490.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,500,000 samples, 0.01%)</title><rect x="743.6" y="357" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="746.60" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (21,750,000 samples, 0.03%)</title><rect x="1171.7" y="1141" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1174.67" y="1151.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (390,750,000 samples, 0.56%)</title><rect x="531.1" y="965" width="6.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="534.13" y="975.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (44,500,000 samples, 0.06%)</title><rect x="857.4" y="773" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="860.35" y="783.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::end (8,000,000 samples, 0.01%)</title><rect x="672.6" y="773" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="675.56" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10,750,000 samples, 0.02%)</title><rect x="658.2" y="789" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="661.17" y="799.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (7,000,000 samples, 0.01%)</title><rect x="375.0" y="565" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="377.96" y="575.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (7,000,000 samples, 0.01%)</title><rect x="329.3" y="421" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="332.26" y="431.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::time_point&lt;std::chrono::local_t, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (7,366,750,000 samples, 10.53%)</title><rect x="692.1" y="629" width="124.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="695.09" y="639.5" >std::__format::..</text>
</g>
<g >
<title>malloc (8,500,000 samples, 0.01%)</title><rect x="546.0" y="917" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="549.00" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (27,250,000 samples, 0.04%)</title><rect x="881.2" y="741" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="884.25" y="751.5" ></text>
</g>
<g >
<title>futex_wake (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="418.32" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::year_month_day::_S_from_days (20,750,000 samples, 0.03%)</title><rect x="332.8" y="245" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="335.85" y="255.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::to_local&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (83,250,000 samples, 0.12%)</title><rect x="323.3" y="565" width="1.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="326.30" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (234,250,000 samples, 0.33%)</title><rect x="889.2" y="837" width="3.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="892.15" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (12,250,000 samples, 0.02%)</title><rect x="539.9" y="933" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="542.85" y="943.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (8,750,000 samples, 0.01%)</title><rect x="775.7" y="293" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="778.68" y="303.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (2,454,500,000 samples, 3.51%)</title><rect x="477.6" y="613" width="41.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="480.61" y="623.5" >std..</text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_fill_and_align (7,250,000 samples, 0.01%)</title><rect x="796.7" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="799.69" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (47,000,000 samples, 0.07%)</title><rect x="668.3" y="741" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="671.31" y="751.5" ></text>
</g>
<g >
<title>futex_wait_setup (18,750,000 samples, 0.03%)</title><rect x="33.4" y="1013" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="36.38" y="1023.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (11,750,000 samples, 0.02%)</title><rect x="826.2" y="773" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="829.24" y="783.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (7,750,000 samples, 0.01%)</title><rect x="74.4" y="1013" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="77.36" y="1023.5" ></text>
</g>
<g >
<title>futex_wake (8,295,500,000 samples, 11.86%)</title><rect x="160.8" y="1045" width="139.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="163.79" y="1055.5" >futex_wake</text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_type (6,500,000 samples, 0.01%)</title><rect x="732.9" y="261" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="735.93" y="271.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (12,750,000 samples, 0.02%)</title><rect x="776.6" y="325" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="779.60" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;long&gt; (7,000,000 samples, 0.01%)</title><rect x="495.1" y="437" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="498.07" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_futex (360,750,000 samples, 0.52%)</title><rect x="34.4" y="1061" width="6.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="37.37" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="776.2" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="779.25" y="319.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (3,894,750,000 samples, 5.57%)</title><rect x="894.0" y="853" width="65.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="897.04" y="863.5" >__GI___..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (8,000,000 samples, 0.01%)</title><rect x="726.4" y="293" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="729.42" y="303.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (55,500,000 samples, 0.08%)</title><rect x="750.0" y="325" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="752.98" y="335.5" ></text>
</g>
<g >
<title>__memchr_avx2 (70,500,000 samples, 0.10%)</title><rect x="867.0" y="805" width="1.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="869.96" y="815.5" ></text>
</g>
<g >
<title>std::filesystem::read_symlink (256,750,000 samples, 0.37%)</title><rect x="79.8" y="1109" width="4.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="82.82" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__extent_storage&lt;18446744073709551615ul&gt;::__extent_storage (8,500,000 samples, 0.01%)</title><rect x="857.8" y="741" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="860.84" y="751.5" ></text>
</g>
<g >
<title>std::__format::__parse_integer&lt;char&gt; (9,250,000 samples, 0.01%)</title><rect x="356.9" y="69" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="359.92" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12,250,000 samples, 0.02%)</title><rect x="790.2" y="325" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="793.23" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (19,750,000 samples, 0.03%)</title><rect x="777.3" y="293" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="780.35" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,000,000 samples, 0.02%)</title><rect x="648.3" y="821" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="651.25" y="831.5" ></text>
</g>
<g >
<title>do_futex (85,500,000 samples, 0.12%)</title><rect x="552.4" y="885" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="555.38" y="895.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (30,000,000 samples, 0.04%)</title><rect x="665.6" y="789" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="668.65" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,000,000 samples, 0.01%)</title><rect x="366.6" y="773" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="369.60" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (56,000,000 samples, 0.08%)</title><rect x="31.6" y="1077" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.58" y="1087.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;unsigned int&gt; (6,000,000 samples, 0.01%)</title><rect x="455.0" y="933" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="458.02" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (10,500,000 samples, 0.02%)</title><rect x="714.5" y="373" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="717.52" y="383.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (11,500,000 samples, 0.02%)</title><rect x="678.9" y="693" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="681.95" y="703.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (6,000,000 samples, 0.01%)</title><rect x="782.2" y="341" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="785.15" y="351.5" ></text>
</g>
<g >
<title>map_id_up (14,000,000 samples, 0.02%)</title><rect x="17.1" y="1013" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="20.06" y="1023.5" ></text>
</g>
<g >
<title>threadpool::ThreadPool::submit&lt;test (6,500,000 samples, 0.01%)</title><rect x="883.3" y="773" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="886.28" y="783.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::base (15,750,000 samples, 0.02%)</title><rect x="771.8" y="293" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="774.81" y="303.5" ></text>
</g>
<g >
<title>do_futex (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="393.75" y="1055.5" ></text>
</g>
<g >
<title>std::queue&lt;std::function&lt;void  (290,250,000 samples, 0.41%)</title><rect x="882.2" y="901" width="4.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="885.24" y="911.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (31,000,000 samples, 0.04%)</title><rect x="446.5" y="1093" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="449.45" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (9,921,500,000 samples, 14.18%)</title><rect x="663.8" y="805" width="167.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="666.79" y="815.5" >std::__format::_Scann..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (11,750,000 samples, 0.02%)</title><rect x="473.2" y="645" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="476.23" y="655.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (91,750,000 samples, 0.13%)</title><rect x="874.7" y="597" width="1.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="877.73" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3,858,250,000 samples, 5.52%)</title><rect x="894.3" y="805" width="65.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="897.33" y="815.5" >__x64_s..</text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (8,250,000 samples, 0.01%)</title><rect x="727.2" y="309" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="730.17" y="319.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (13,750,000 samples, 0.02%)</title><rect x="816.7" y="629" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="819.75" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (28,000,000 samples, 0.04%)</title><rect x="691.5" y="629" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="694.50" y="639.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (4,175,750,000 samples, 5.97%)</title><rect x="557.9" y="997" width="70.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="560.87" y="1007.5" >std::un..</text>
</g>
<g >
<title>__vdso_clock_gettime (6,500,000 samples, 0.01%)</title><rect x="452.0" y="949" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="455.03" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,750,000 samples, 0.01%)</title><rect x="790.3" y="309" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="793.28" y="319.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (255,250,000 samples, 0.36%)</title><rect x="343.9" y="229" width="4.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="346.89" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (148,500,000 samples, 0.21%)</title><rect x="874.0" y="677" width="2.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="876.97" y="687.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="685.7" y="581" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="688.69" y="591.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_two_digits (6,000,000 samples, 0.01%)</title><rect x="749.7" y="341" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="752.74" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14,000,000 samples, 0.02%)</title><rect x="1183.0" y="1077" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1185.99" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::__formatter_chrono (16,250,000 samples, 0.02%)</title><rect x="818.2" y="661" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="821.22" y="671.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;3600000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;3600l, 1l&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="351.2" y="181" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="354.21" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (6,250,000 samples, 0.01%)</title><rect x="748.8" y="325" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="751.83" y="335.5" ></text>
</g>
<g >
<title>futex_wait_setup (24,750,000 samples, 0.04%)</title><rect x="553.4" y="853" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="556.40" y="863.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (7,000,000 samples, 0.01%)</title><rect x="525.4" y="885" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="528.38" y="895.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;unsigned int const&gt; (7,500,000 samples, 0.01%)</title><rect x="495.2" y="437" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="498.18" y="447.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (88,500,000 samples, 0.13%)</title><rect x="671.7" y="789" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="674.73" y="799.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (12,250,000 samples, 0.02%)</title><rect x="869.2" y="837" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="872.23" y="847.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::end (7,750,000 samples, 0.01%)</title><rect x="732.1" y="293" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="735.10" y="303.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (235,000,000 samples, 0.34%)</title><rect x="98.1" y="1029" width="3.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="101.08" y="1039.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (6,500,000 samples, 0.01%)</title><rect x="863.7" y="645" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="866.68" y="655.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (6,500,000 samples, 0.01%)</title><rect x="686.9" y="597" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="689.86" y="607.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (361,750,000 samples, 0.52%)</title><rect x="859.8" y="821" width="6.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="862.82" y="831.5" ></text>
</g>
<g >
<title>std::__format::__write_padded&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (6,500,000 samples, 0.01%)</title><rect x="347.0" y="85" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="349.98" y="95.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (19,000,000 samples, 0.03%)</title><rect x="461.0" y="837" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="463.98" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1061" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="433.50" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,500,000 samples, 0.01%)</title><rect x="532.1" y="917" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="535.10" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, int, unsigned long long&gt;::_S_make_elt&lt;int&gt; (34,250,000 samples, 0.05%)</title><rect x="367.6" y="773" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="370.64" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (7,750,000 samples, 0.01%)</title><rect x="1186.1" y="1109" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1189.15" y="1119.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (17,750,000 samples, 0.03%)</title><rect x="805.9" y="357" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="808.86" y="367.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (341,500,000 samples, 0.49%)</title><rect x="733.4" y="245" width="5.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="736.43" y="255.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (11,750,000 samples, 0.02%)</title><rect x="334.2" y="245" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="337.19" y="255.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 5ul&gt;::begin (11,250,000 samples, 0.02%)</title><rect x="653.4" y="789" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="656.37" y="799.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (18,750,000 samples, 0.03%)</title><rect x="375.6" y="581" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="378.59" y="591.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::~_Result_base (13,750,000 samples, 0.02%)</title><rect x="875.7" y="469" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="878.73" y="479.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (17,250,000 samples, 0.02%)</title><rect x="857.8" y="757" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="860.78" y="767.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (11,849,000,000 samples, 16.94%)</title><rect x="968.7" y="1141" width="199.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="971.72" y="1151.5" >pthread_cond_broadcast@@GL..</text>
</g>
<g >
<title>__GI___lll_lock_wait (2,384,500,000 samples, 3.41%)</title><rect x="118.7" y="1125" width="40.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="121.66" y="1135.5" >__G..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (16,250,000 samples, 0.02%)</title><rect x="816.4" y="629" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="819.40" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (12,750,000 samples, 0.02%)</title><rect x="476.6" y="629" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="479.60" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (10,750,000 samples, 0.02%)</title><rect x="485.1" y="421" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="488.10" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (71,500,000 samples, 0.10%)</title><rect x="657.3" y="805" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="660.27" y="815.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (85,500,000 samples, 0.12%)</title><rect x="23.8" y="949" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="26.80" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,750,000 samples, 0.01%)</title><rect x="466.5" y="757" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="469.50" y="767.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (7,750,000 samples, 0.01%)</title><rect x="339.4" y="53" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="342.40" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (101,500,000 samples, 0.15%)</title><rect x="73.0" y="1077" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="76.02" y="1087.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (12,500,000 samples, 0.02%)</title><rect x="876.7" y="725" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="879.69" y="735.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (12,000,000 samples, 0.02%)</title><rect x="472.7" y="693" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="475.75" y="703.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (173,000,000 samples, 0.25%)</title><rect x="344.6" y="197" width="3.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="347.64" y="207.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (115,500,000 samples, 0.17%)</title><rect x="356.4" y="165" width="1.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="359.39" y="175.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, int&gt;::_S_make_elt&lt;int&gt; (6,250,000 samples, 0.01%)</title><rect x="334.0" y="261" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="337.04" y="271.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (67,000,000 samples, 0.10%)</title><rect x="475.2" y="629" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="478.21" y="639.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (7,000,000 samples, 0.01%)</title><rect x="731.6" y="293" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="734.61" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (7,750,000 samples, 0.01%)</title><rect x="87.6" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="90.63" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (29,250,000 samples, 0.04%)</title><rect x="481.1" y="437" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="484.06" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,250,000 samples, 0.02%)</title><rect x="314.2" y="725" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="317.16" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (41,750,000 samples, 0.06%)</title><rect x="1178.8" y="1109" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1181.78" y="1119.5" ></text>
</g>
<g >
<title>__unqueue_futex (17,500,000 samples, 0.03%)</title><rect x="896.3" y="741" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="899.34" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1093" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="433.50" y="1103.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (13,750,000 samples, 0.02%)</title><rect x="813.8" y="533" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="816.82" y="543.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (66,750,000 samples, 0.10%)</title><rect x="805.5" y="373" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="808.54" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (9,250,000 samples, 0.01%)</title><rect x="380.0" y="981" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="382.97" y="991.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (4,148,250,000 samples, 5.93%)</title><rect x="308.8" y="949" width="70.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="311.83" y="959.5" >std::__..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter, true, true&gt;::__uniq_ptr_data (18,750,000 samples, 0.03%)</title><rect x="378.5" y="917" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="381.48" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (18,000,000 samples, 0.03%)</title><rect x="362.4" y="565" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="365.39" y="575.5" ></text>
</g>
<g >
<title>__check_heap_object (7,500,000 samples, 0.01%)</title><rect x="28.4" y="965" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="31.36" y="975.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;60l, 1l&gt; &gt; (16,250,000 samples, 0.02%)</title><rect x="506.1" y="421" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="509.11" y="431.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (18,750,000 samples, 0.03%)</title><rect x="731.0" y="261" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="734.05" y="271.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (370,000,000 samples, 0.53%)</title><rect x="733.1" y="261" width="6.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="736.12" y="271.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::format&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (7,563,250,000 samples, 10.81%)</title><rect x="690.5" y="677" width="127.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="693.48" y="687.5" >std::formatter&lt;s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (7,500,000 samples, 0.01%)</title><rect x="787.9" y="309" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="790.88" y="319.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::begin (6,250,000 samples, 0.01%)</title><rect x="698.2" y="517" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="701.15" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="933" width="326.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="636.43" y="943.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (7,750,000 samples, 0.01%)</title><rect x="845.4" y="805" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="848.37" y="815.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;int&gt; (32,000,000 samples, 0.05%)</title><rect x="367.7" y="757" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="370.68" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (17,000,000 samples, 0.02%)</title><rect x="861.3" y="725" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="864.27" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,500,000 samples, 0.01%)</title><rect x="342.6" y="245" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="345.64" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (6,500,000 samples, 0.01%)</title><rect x="512.7" y="245" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="515.73" y="255.5" ></text>
</g>
<g >
<title>__get_user_8 (513,250,000 samples, 0.73%)</title><rect x="149.3" y="1029" width="8.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="152.26" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (31,250,000 samples, 0.04%)</title><rect x="1188.5" y="1109" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1191.49" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format_to_ostream&lt;std::chrono::time_point&lt;std::chrono::local_t, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,972,250,000 samples, 4.25%)</title><rect x="471.0" y="725" width="50.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.95" y="735.5" >std::..</text>
</g>
<g >
<title>std::chrono::sys_info::~sys_info (17,000,000 samples, 0.02%)</title><rect x="687.1" y="645" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="690.07" y="655.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (10,250,000 samples, 0.01%)</title><rect x="321.5" y="613" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="324.54" y="623.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 3ul&gt; (126,000,000 samples, 0.18%)</title><rect x="770.4" y="325" width="2.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="773.41" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (20,000,000 samples, 0.03%)</title><rect x="453.9" y="949" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="456.91" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (14,250,000 samples, 0.02%)</title><rect x="335.3" y="197" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="338.32" y="207.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (17,250,000 samples, 0.02%)</title><rect x="651.1" y="805" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="654.12" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,250,000 samples, 0.01%)</title><rect x="87.6" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="90.62" y="1071.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (4,223,500,000 samples, 6.04%)</title><rect x="456.5" y="933" width="71.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="459.46" y="943.5" >std::vfo..</text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::zoned_time (7,500,000 samples, 0.01%)</title><rect x="649.7" y="853" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="652.68" y="863.5" ></text>
</g>
<g >
<title>std::format&lt;long&gt; (1,222,500,000 samples, 1.75%)</title><rect x="783.5" y="373" width="20.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="786.52" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (18,500,000 samples, 0.03%)</title><rect x="354.4" y="197" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="357.36" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (9,250,000 samples, 0.01%)</title><rect x="118.5" y="1045" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="121.50" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,500,000 samples, 0.01%)</title><rect x="727.6" y="309" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="730.63" y="319.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::ConsoleReporter::printHelp (17,250,000 samples, 0.02%)</title><rect x="388.8" y="1125" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="391.77" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (7,250,000 samples, 0.01%)</title><rect x="412.7" y="1109" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="415.71" y="1119.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&gt;::tuple&lt;true, true&gt; (6,750,000 samples, 0.01%)</title><rect x="544.7" y="677" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="547.70" y="687.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;char&gt; (20,500,000 samples, 0.03%)</title><rect x="762.3" y="213" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="765.33" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (10,000,000 samples, 0.01%)</title><rect x="848.8" y="773" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="851.84" y="783.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,428,750,000 samples, 3.47%)</title><rect x="478.0" y="581" width="40.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="480.97" y="591.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,500,000 samples, 0.02%)</title><rect x="479.3" y="485" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="482.30" y="495.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (14,750,000 samples, 0.02%)</title><rect x="670.2" y="725" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="673.20" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11,000,000 samples, 0.02%)</title><rect x="419.1" y="1061" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="422.14" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_futex (26,250,000 samples, 0.04%)</title><rect x="392.8" y="1061" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="395.77" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,500,000 samples, 0.02%)</title><rect x="385.2" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="388.17" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (7,750,000 samples, 0.01%)</title><rect x="375.2" y="581" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="378.19" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,250,000 samples, 0.01%)</title><rect x="703.2" y="469" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="706.25" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::function&lt;void  (19,377,750,000 samples, 27.70%)</title><rect x="633.4" y="1077" width="326.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="636.43" y="1087.5" >std::__invoke&lt;std::function&lt;void </text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (278,250,000 samples, 0.40%)</title><rect x="336.0" y="245" width="4.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="339.01" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (25,250,000 samples, 0.04%)</title><rect x="469.2" y="725" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="472.22" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_futex (923,500,000 samples, 1.32%)</title><rect x="129.5" y="1077" width="15.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="132.45" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (364,250,000 samples, 0.52%)</title><rect x="34.4" y="1077" width="6.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="37.35" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (9,500,000 samples, 0.01%)</title><rect x="789.0" y="277" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="792.02" y="287.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_set&lt;long long&gt; (7,250,000 samples, 0.01%)</title><rect x="752.5" y="309" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="755.49" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (21,250,000 samples, 0.03%)</title><rect x="31.6" y="1061" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="34.59" y="1071.5" ></text>
</g>
<g >
<title>std::to_chars (7,000,000 samples, 0.01%)</title><rect x="358.1" y="101" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="361.15" y="111.5" ></text>
</g>
<g >
<title>std::function&lt;void  (32,500,000 samples, 0.05%)</title><rect x="883.0" y="853" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="885.98" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (22,000,000 samples, 0.03%)</title><rect x="775.8" y="325" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="778.84" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (2,527,750,000 samples, 3.61%)</title><rect x="476.9" y="629" width="42.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="479.91" y="639.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,750,000 samples, 0.01%)</title><rect x="660.0" y="725" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="663.05" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (29,000,000 samples, 0.04%)</title><rect x="480.3" y="453" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="483.30" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,500,000 samples, 0.01%)</title><rect x="391.5" y="1077" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="394.49" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::__formatter_chrono (13,500,000 samples, 0.02%)</title><rect x="808.1" y="405" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="811.09" y="415.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (7,750,000 samples, 0.01%)</title><rect x="417.2" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="420.20" y="1119.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (8,250,000 samples, 0.01%)</title><rect x="494.2" y="405" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="497.22" y="415.5" ></text>
</g>
<g >
<title>generic_permission (27,750,000 samples, 0.04%)</title><rect x="21.4" y="949" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="24.45" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (22,500,000 samples, 0.03%)</title><rect x="480.4" y="437" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="483.39" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (18,250,000 samples, 0.03%)</title><rect x="1183.5" y="1109" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1186.47" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,000,000 samples, 0.01%)</title><rect x="349.4" y="229" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="352.37" y="239.5" ></text>
</g>
<g >
<title>walk_component (34,500,000 samples, 0.05%)</title><rect x="46.4" y="965" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="49.42" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,750,000 samples, 0.02%)</title><rect x="705.0" y="533" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="708.04" y="543.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (63,000,000 samples, 0.09%)</title><rect x="487.5" y="309" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="490.48" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (23,250,000 samples, 0.03%)</title><rect x="735.0" y="149" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="738.04" y="159.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (22,250,000 samples, 0.03%)</title><rect x="454.5" y="933" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="457.54" y="943.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (8,250,000 samples, 0.01%)</title><rect x="666.7" y="773" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="669.75" y="783.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (7,750,000 samples, 0.01%)</title><rect x="333.6" y="245" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="336.62" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (272,000,000 samples, 0.39%)</title><rect x="552.2" y="917" width="4.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="555.20" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_futex (42,250,000 samples, 0.06%)</title><rect x="306.8" y="1077" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="309.84" y="1087.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (51,750,000 samples, 0.07%)</title><rect x="512.3" y="309" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="515.34" y="319.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (63,500,000 samples, 0.09%)</title><rect x="765.6" y="181" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="768.62" y="191.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_S_hms&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt; (186,750,000 samples, 0.27%)</title><rect x="503.5" y="469" width="3.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="506.55" y="479.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (85,000,000 samples, 0.12%)</title><rect x="760.8" y="181" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="763.79" y="191.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (7,750,000 samples, 0.01%)</title><rect x="504.5" y="421" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="507.52" y="431.5" ></text>
</g>
<g >
<title>nd_jump_root (20,500,000 samples, 0.03%)</title><rect x="47.1" y="965" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="50.13" y="975.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_arg&lt;unsigned int&gt; (14,750,000 samples, 0.02%)</title><rect x="836.9" y="853" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="839.85" y="863.5" ></text>
</g>
<g >
<title>std::chrono::ceil&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (76,250,000 samples, 0.11%)</title><rect x="538.9" y="981" width="1.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="541.86" y="991.5" ></text>
</g>
<g >
<title>std::__format::__write_padded_as_spec&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (22,750,000 samples, 0.03%)</title><rect x="345.7" y="85" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="348.69" y="95.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl_deleter::operator (7,000,000 samples, 0.01%)</title><rect x="77.6" y="1109" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="80.63" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (73,000,000 samples, 0.10%)</title><rect x="483.6" y="437" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="486.60" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (117,000,000 samples, 0.17%)</title><rect x="891.1" y="789" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="894.13" y="799.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (106,250,000 samples, 0.15%)</title><rect x="32.5" y="1109" width="1.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="35.53" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (55,750,000 samples, 0.08%)</title><rect x="12.5" y="1109" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.49" y="1119.5" ></text>
</g>
<g >
<title>std::_V2::system_category (9,750,000 samples, 0.01%)</title><rect x="850.9" y="741" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="853.86" y="751.5" ></text>
</g>
<g >
<title>std::locale::locale (17,500,000 samples, 0.03%)</title><rect x="816.0" y="613" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="818.99" y="623.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (18,750,000 samples, 0.03%)</title><rect x="469.7" y="725" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="472.70" y="735.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (67,500,000 samples, 0.10%)</title><rect x="53.3" y="1061" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.35" y="1071.5" ></text>
</g>
<g >
<title>std::format_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, long, unsigned int const&amp;&gt; (347,250,000 samples, 0.50%)</title><rect x="343.3" y="261" width="5.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="346.30" y="271.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (14,750,000 samples, 0.02%)</title><rect x="775.6" y="325" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="778.58" y="335.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::seconds (7,250,000 samples, 0.01%)</title><rect x="505.4" y="421" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="508.40" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,250,000 samples, 0.02%)</title><rect x="353.6" y="245" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="356.61" y="255.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (3,114,250,000 samples, 4.45%)</title><rect x="313.9" y="741" width="52.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="316.92" y="751.5" >std::..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (8,966,250,000 samples, 12.82%)</title><rect x="674.6" y="773" width="151.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="677.64" y="783.5" >std::__format::_For..</text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (14,750,000 samples, 0.02%)</title><rect x="825.9" y="773" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="828.89" y="783.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (7,500,000 samples, 0.01%)</title><rect x="707.0" y="517" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="710.01" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (7,750,000 samples, 0.01%)</title><rect x="1188.9" y="1093" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1191.88" y="1103.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (31,500,000 samples, 0.05%)</title><rect x="870.7" y="901" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="873.75" y="911.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,000,000 samples, 0.01%)</title><rect x="676.8" y="741" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="679.75" y="751.5" ></text>
</g>
<g >
<title>DOCTEST_ANON_FUNC_2 (10,723,250,000 samples, 15.33%)</title><rect x="447.5" y="1045" width="180.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="450.48" y="1055.5" >DOCTEST_ANON_FUNC_2</text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (402,500,000 samples, 0.58%)</title><rect x="774.0" y="357" width="6.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="777.04" y="367.5" ></text>
</g>
<g >
<title>ankerl::nanobench::detail::gatherStabilityInformation (6,750,000 samples, 0.01%)</title><rect x="386.2" y="1125" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="389.20" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (53,250,000 samples, 0.08%)</title><rect x="773.1" y="357" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="776.12" y="367.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rend (19,250,000 samples, 0.03%)</title><rect x="784.6" y="325" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="787.60" y="335.5" ></text>
</g>
<g >
<title>std::__format::__write_padded&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (22,750,000 samples, 0.03%)</title><rect x="765.1" y="181" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="768.07" y="191.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::formatter (6,000,000 samples, 0.01%)</title><rect x="362.1" y="581" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="365.13" y="591.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::end (27,250,000 samples, 0.04%)</title><rect x="410.2" y="1109" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="413.18" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (8,250,000 samples, 0.01%)</title><rect x="726.1" y="277" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="729.15" y="287.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (14,250,000 samples, 0.02%)</title><rect x="705.9" y="501" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="708.92" y="511.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,270,500,000 samples, 3.25%)</title><rect x="478.6" y="501" width="38.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="481.60" y="511.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (8,750,000 samples, 0.01%)</title><rect x="849.4" y="773" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="852.39" y="783.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (30,750,000 samples, 0.04%)</title><rect x="821.4" y="645" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="824.44" y="655.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (9,000,000 samples, 0.01%)</title><rect x="506.5" y="437" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="509.51" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (13,250,000 samples, 0.02%)</title><rect x="82.8" y="1061" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="85.75" y="1071.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,000,000 samples, 0.01%)</title><rect x="429.1" y="1061" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="432.12" y="1071.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (10,750,000 samples, 0.02%)</title><rect x="708.0" y="501" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="711.00" y="511.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (1,668,250,000 samples, 2.38%)</title><rect x="842.0" y="869" width="28.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="845.05" y="879.5" >s..</text>
</g>
<g >
<title>copy_user_generic_unrolled (19,500,000 samples, 0.03%)</title><rect x="52.5" y="981" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="55.51" y="991.5" ></text>
</g>
<g >
<title>operator new (8,750,000 samples, 0.01%)</title><rect x="532.9" y="837" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="535.95" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (10,750,000 samples, 0.02%)</title><rect x="783.3" y="341" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="786.25" y="351.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (21,750,000 samples, 0.03%)</title><rect x="325.4" y="501" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="328.40" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (18,250,000 samples, 0.03%)</title><rect x="1177.6" y="1109" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1180.58" y="1119.5" ></text>
</g>
<g >
<title>doctest::(anonymous namespace)::XmlReporter::test_case_start_impl (9,250,000 samples, 0.01%)</title><rect x="391.2" y="1125" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="394.16" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (345,000,000 samples, 0.49%)</title><rect x="774.7" y="341" width="5.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="777.72" y="351.5" ></text>
</g>
<g >
<title>futex_wait_setup (188,000,000 samples, 0.27%)</title><rect x="102.0" y="1029" width="3.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="105.04" y="1039.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (21,250,000 samples, 0.03%)</title><rect x="489.6" y="277" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="492.62" y="287.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (31,000,000 samples, 0.04%)</title><rect x="357.6" y="101" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="360.59" y="111.5" ></text>
</g>
<g >
<title>wake_up_q (25,500,000 samples, 0.04%)</title><rect x="392.8" y="1013" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="395.78" y="1023.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (17,500,000 samples, 0.03%)</title><rect x="347.1" y="85" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="350.12" y="95.5" ></text>
</g>
<g >
<title>std::chrono::tzdb::current_zone (6,750,000 samples, 0.01%)</title><rect x="840.5" y="869" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="843.53" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (8,000,000 samples, 0.01%)</title><rect x="848.7" y="773" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="851.71" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (80,500,000 samples, 0.12%)</title><rect x="33.0" y="1077" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="35.96" y="1087.5" ></text>
</g>
<g >
<title>wake_up_q (8,250,000 samples, 0.01%)</title><rect x="443.7" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="446.66" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (19,750,000 samples, 0.03%)</title><rect x="363.6" y="581" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="366.60" y="591.5" ></text>
</g>
<g >
<title>std::chrono::tzdb_list::begin (15,250,000 samples, 0.02%)</title><rect x="369.0" y="773" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="372.00" y="783.5" ></text>
</g>
<g >
<title>std::chrono::sys_info::~sys_info (9,250,000 samples, 0.01%)</title><rect x="466.5" y="773" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="469.46" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20,750,000 samples, 0.03%)</title><rect x="366.9" y="773" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="369.87" y="783.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (366,250,000 samples, 0.52%)</title><rect x="34.3" y="1109" width="6.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="37.32" y="1119.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (23,000,000 samples, 0.03%)</title><rect x="48.4" y="997" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="51.39" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 60000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,500,000 samples, 0.02%)</title><rect x="776.6" y="309" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="779.60" y="319.5" ></text>
</g>
<g >
<title>std::__format::__is_digit (6,750,000 samples, 0.01%)</title><rect x="759.7" y="165" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="762.68" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (7,000,000 samples, 0.01%)</title><rect x="341.8" y="261" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="344.82" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (22,250,000 samples, 0.03%)</title><rect x="76.3" y="1077" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="79.30" y="1087.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;test (4,117,250,000 samples, 5.89%)</title><rect x="309.0" y="933" width="69.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="311.98" y="943.5" >std::__..</text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (6,750,000 samples, 0.01%)</title><rect x="393.2" y="1109" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="396.24" y="1119.5" ></text>
</g>
<g >
<title>wake_up_q (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="391.85" y="1023.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (10,000,000 samples, 0.01%)</title><rect x="794.2" y="293" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="797.21" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (204,250,000 samples, 0.29%)</title><rect x="873.5" y="741" width="3.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="876.47" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt; &gt; (37,250,000 samples, 0.05%)</title><rect x="780.9" y="357" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="783.86" y="367.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::~_State_baseV2 (76,500,000 samples, 0.11%)</title><rect x="874.9" y="549" width="1.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="877.86" y="559.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (9,250,000 samples, 0.01%)</title><rect x="662.5" y="805" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="665.47" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (7,250,000 samples, 0.01%)</title><rect x="351.5" y="213" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="354.52" y="223.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::size (8,750,000 samples, 0.01%)</title><rect x="857.6" y="757" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="860.63" y="767.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (113,250,000 samples, 0.16%)</title><rect x="820.8" y="677" width="1.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="823.77" y="687.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2,112,250,000 samples, 3.02%)</title><rect x="326.0" y="501" width="35.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="328.98" y="511.5" >std..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (146,750,000 samples, 0.21%)</title><rect x="554.2" y="869" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="557.24" y="879.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (12,250,000 samples, 0.02%)</title><rect x="819.8" y="645" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="822.81" y="655.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;unsigned int, std::__format::_Sink_iter&lt;char&gt; &gt; (121,000,000 samples, 0.17%)</title><rect x="823.0" y="693" width="2.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="825.98" y="703.5" ></text>
</g>
<g >
<title>do_futex (10,750,000 samples, 0.02%)</title><rect x="417.4" y="1045" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="420.45" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (23,000,000 samples, 0.03%)</title><rect x="1176.8" y="1109" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1179.79" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (291,000,000 samples, 0.42%)</title><rect x="510.3" y="437" width="5.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="513.35" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (17,000,000 samples, 0.02%)</title><rect x="839.0" y="869" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="842.01" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (32,000,000 samples, 0.05%)</title><rect x="765.8" y="149" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="768.83" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned long&gt; (51,500,000 samples, 0.07%)</title><rect x="376.0" y="581" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="379.02" y="591.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (6,750,000 samples, 0.01%)</title><rect x="479.7" y="485" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="482.66" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;char const*, char const*&gt; (6,500,000 samples, 0.01%)</title><rect x="732.3" y="293" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="735.26" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (55,500,000 samples, 0.08%)</title><rect x="880.8" y="837" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="883.79" y="847.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (18,500,000 samples, 0.03%)</title><rect x="799.7" y="149" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="802.69" y="159.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (275,500,000 samples, 0.39%)</title><rect x="845.9" y="837" width="4.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="848.93" y="847.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (10,750,000 samples, 0.02%)</title><rect x="428.5" y="1077" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="431.54" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10,500,000 samples, 0.02%)</title><rect x="331.0" y="293" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="333.99" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (24,250,000 samples, 0.03%)</title><rect x="1177.2" y="1109" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.18" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (9,000,000 samples, 0.01%)</title><rect x="75.7" y="1077" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="78.67" y="1087.5" ></text>
</g>
<g >
<title>filename_lookup (237,500,000 samples, 0.34%)</title><rect x="44.1" y="1013" width="4.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="47.10" y="1023.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (32,500,000 samples, 0.05%)</title><rect x="633.9" y="917" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="636.90" y="927.5" ></text>
</g>
<g >
<title>std::deque&lt;std::function&lt;void  (9,500,000 samples, 0.01%)</title><rect x="547.8" y="949" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="550.80" y="959.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (83,750,000 samples, 0.12%)</title><rect x="799.2" y="181" width="1.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="802.19" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (26,500,000 samples, 0.04%)</title><rect x="310.4" y="741" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="313.43" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;test (4,109,500,000 samples, 5.87%)</title><rect x="309.1" y="901" width="69.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="312.09" y="911.5" >std::__..</text>
</g>
<g >
<title>strncpy_from_user (92,500,000 samples, 0.13%)</title><rect x="27.4" y="997" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="30.36" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;86400l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (26,500,000 samples, 0.04%)</title><rect x="773.4" y="325" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="776.41" y="335.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,423,250,000 samples, 3.46%)</title><rect x="478.1" y="565" width="40.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="481.05" y="575.5" >std..</text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (13,000,000 samples, 0.02%)</title><rect x="316.4" y="709" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="319.41" y="719.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (37,250,000 samples, 0.05%)</title><rect x="513.4" y="293" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="516.38" y="303.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (341,750,000 samples, 0.49%)</title><rect x="887.3" y="853" width="5.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="890.34" y="863.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_State_baseV2 (27,000,000 samples, 0.04%)</title><rect x="544.4" y="741" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="547.39" y="751.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (32,250,000 samples, 0.05%)</title><rect x="513.5" y="277" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="516.46" y="287.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1109" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="393.75" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (14,250,000 samples, 0.02%)</title><rect x="809.9" y="389" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="812.87" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::size (15,500,000 samples, 0.02%)</title><rect x="856.5" y="773" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="859.52" y="783.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (13,250,000 samples, 0.02%)</title><rect x="465.6" y="805" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="468.61" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;::__uniq_ptr_impl&lt;std::__future_base::_Result_base::_Deleter&gt; (12,500,000 samples, 0.02%)</title><rect x="379.1" y="933" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="382.10" y="943.5" ></text>
</g>
<g >
<title>__check_heap_object (10,750,000 samples, 0.02%)</title><rect x="49.7" y="965" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.69" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (98,000,000 samples, 0.14%)</title><rect x="702.2" y="485" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="705.17" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (45,000,000 samples, 0.06%)</title><rect x="645.6" y="821" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="648.61" y="831.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::arg (16,250,000 samples, 0.02%)</title><rect x="320.5" y="661" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="323.48" y="671.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (17,000,000 samples, 0.02%)</title><rect x="342.8" y="229" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="345.83" y="239.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (27,000,000 samples, 0.04%)</title><rect x="790.9" y="325" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="793.94" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,500,000 samples, 0.04%)</title><rect x="392.8" y="1093" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="395.77" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_Scanner (7,000,000 samples, 0.01%)</title><rect x="485.2" y="405" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="488.16" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (13,750,000 samples, 0.02%)</title><rect x="393.5" y="997" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="396.47" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,250,000 samples, 0.01%)</title><rect x="1179.6" y="1093" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1182.64" y="1103.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (16,000,000 samples, 0.02%)</title><rect x="810.5" y="389" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="813.46" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (7,250,000 samples, 0.01%)</title><rect x="454.0" y="917" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="457.00" y="927.5" ></text>
</g>
<g >
<title>std::__format::__pack_arg_types&lt;5, 1ul&gt; (22,750,000 samples, 0.03%)</title><rect x="507.9" y="437" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="510.95" y="447.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_Formatting_scanner (6,000,000 samples, 0.01%)</title><rect x="343.8" y="229" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="346.75" y="239.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (227,500,000 samples, 0.33%)</title><rect x="854.4" y="805" width="3.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="857.45" y="815.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;test (4,205,000,000 samples, 6.01%)</title><rect x="308.7" y="981" width="71.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="311.74" y="991.5" >std::__i..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::packaged_task&lt;void  (239,500,000 samples, 0.34%)</title><rect x="873.1" y="805" width="4.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="876.08" y="815.5" ></text>
</g>
<g >
<title>wake_up_q (10,000,000 samples, 0.01%)</title><rect x="419.2" y="1013" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="422.15" y="1023.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;86400l, 1l&gt; &gt; (14,250,000 samples, 0.02%)</title><rect x="773.6" y="293" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="776.61" y="303.5" ></text>
</g>
<g >
<title>__memchr_avx2 (6,500,000 samples, 0.01%)</title><rect x="377.4" y="709" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="380.40" y="719.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::next_arg_id (10,000,000 samples, 0.01%)</title><rect x="364.5" y="677" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="367.48" y="687.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (121,750,000 samples, 0.17%)</title><rect x="337.8" y="181" width="2.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="340.80" y="191.5" ></text>
</g>
<g >
<title>wake_up_q (11,750,000 samples, 0.02%)</title><rect x="385.2" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="388.18" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,000,000 samples, 0.01%)</title><rect x="657.8" y="789" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="660.81" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,089,250,000 samples, 5.85%)</title><rect x="558.7" y="933" width="68.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="561.66" y="943.5" >entry_S..</text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_scan (389,250,000 samples, 0.56%)</title><rect x="495.8" y="421" width="6.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="498.84" y="431.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;int, std::__format::_Sink_iter&lt;char&gt; &gt; (49,250,000 samples, 0.07%)</title><rect x="339.0" y="117" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="341.96" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (41,500,000 samples, 0.06%)</title><rect x="328.1" y="405" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="331.06" y="415.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_F&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (562,750,000 samples, 0.80%)</title><rect x="331.4" y="293" width="9.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="334.36" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12,000,000 samples, 0.02%)</title><rect x="749.1" y="325" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="752.06" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state_base&lt;void  (64,750,000 samples, 0.09%)</title><rect x="543.8" y="757" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="546.81" y="767.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::seconds (19,500,000 samples, 0.03%)</title><rect x="777.7" y="325" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="780.70" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (6,500,000 samples, 0.01%)</title><rect x="726.3" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="729.29" y="287.5" ></text>
</g>
<g >
<title>std::formatter&lt;unsigned int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (41,250,000 samples, 0.06%)</title><rect x="524.1" y="805" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="527.05" y="815.5" ></text>
</g>
<g >
<title>std::locale::~locale (22,500,000 samples, 0.03%)</title><rect x="817.5" y="629" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="820.50" y="639.5" ></text>
</g>
<g >
<title>lockref_put_return (20,000,000 samples, 0.03%)</title><rect x="18.4" y="997" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="21.42" y="1007.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (6,500,000 samples, 0.01%)</title><rect x="50.3" y="997" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="53.30" y="1007.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (7,250,000 samples, 0.01%)</title><rect x="742.1" y="325" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="745.13" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt;::operator+= (9,250,000 samples, 0.01%)</title><rect x="855.0" y="773" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="858.04" y="783.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;86400l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (13,000,000 samples, 0.02%)</title><rect x="332.5" y="229" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="335.52" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (10,750,000 samples, 0.02%)</title><rect x="475.6" y="549" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="478.57" y="559.5" ></text>
</g>
<g >
<title>do_futex (7,750,000 samples, 0.01%)</title><rect x="390.4" y="1045" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="393.35" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (7,750,000 samples, 0.01%)</title><rect x="663.6" y="805" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="666.62" y="815.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (17,500,000 samples, 0.03%)</title><rect x="496.3" y="405" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="499.29" y="415.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (2,548,000,000 samples, 3.64%)</title><rect x="321.2" y="629" width="43.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="324.17" y="639.5" >std:..</text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (11,500,000 samples, 0.02%)</title><rect x="791.2" y="293" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="794.18" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (7,750,000 samples, 0.01%)</title><rect x="408.8" y="1109" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="411.76" y="1119.5" ></text>
</g>
<g >
<title>std::formatter&lt;char, char&gt;::parse (13,250,000 samples, 0.02%)</title><rect x="499.3" y="325" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="502.34" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_State_baseV2&gt;::shared_ptr&lt;std::__future_base::_Task_state_base&lt;void  (11,000,000 samples, 0.02%)</title><rect x="547.0" y="981" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="550.04" y="991.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (119,000,000 samples, 0.17%)</title><rect x="512.2" y="341" width="2.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="515.22" y="351.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (42,250,000 samples, 0.06%)</title><rect x="360.0" y="309" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="363.04" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20,250,000 samples, 0.03%)</title><rect x="82.3" y="1077" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="85.33" y="1087.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (9,250,000 samples, 0.01%)</title><rect x="633.7" y="917" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="636.74" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="391.85" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,750,000 samples, 0.01%)</title><rect x="724.7" y="309" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="727.68" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (9,250,000 samples, 0.01%)</title><rect x="835.0" y="853" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="837.97" y="863.5" ></text>
</g>
<g >
<title>std::to_address&lt;char const&gt; (7,000,000 samples, 0.01%)</title><rect x="673.0" y="757" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="675.97" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (14,250,000 samples, 0.02%)</title><rect x="338.7" y="101" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="341.67" y="111.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, char, long long, unsigned int&gt;::_S_make_elt&lt;unsigned int const&gt; (24,000,000 samples, 0.03%)</title><rect x="752.6" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="755.61" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (7,250,000 samples, 0.01%)</title><rect x="521.1" y="725" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="524.12" y="735.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (153,250,000 samples, 0.22%)</title><rect x="828.1" y="789" width="2.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="831.15" y="799.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (1,105,750,000 samples, 1.58%)</title><rect x="785.5" y="357" width="18.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="788.49" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (24,250,000 samples, 0.03%)</title><rect x="738.7" y="165" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="741.71" y="175.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (24,500,000 samples, 0.04%)</title><rect x="434.9" y="1093" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="437.93" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Spec&lt;char&gt;::_M_parse_width (12,750,000 samples, 0.02%)</title><rect x="498.0" y="293" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="501.04" y="303.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (8,500,000 samples, 0.01%)</title><rect x="158.6" y="1045" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="161.57" y="1055.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (27,750,000 samples, 0.04%)</title><rect x="506.8" y="453" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="509.79" y="463.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (2,056,500,000 samples, 2.94%)</title><rect x="326.9" y="469" width="34.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="329.91" y="479.5" >st..</text>
</g>
<g >
<title>__legitimize_mnt (19,000,000 samples, 0.03%)</title><rect x="44.4" y="933" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="47.43" y="943.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (8,500,000 samples, 0.01%)</title><rect x="511.7" y="405" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="514.67" y="415.5" ></text>
</g>
<g >
<title>std::__format::_Arg_store&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;, std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::handle, char const*, unsigned int, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_S_make_elt&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (60,750,000 samples, 0.09%)</title><rect x="650.5" y="837" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="653.47" y="847.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (64,000,000 samples, 0.09%)</title><rect x="855.4" y="773" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="858.36" y="783.5" ></text>
</g>
<g >
<title>_int_free (96,250,000 samples, 0.14%)</title><rect x="381.6" y="1125" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="384.65" y="1135.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::advance_to (11,250,000 samples, 0.02%)</title><rect x="827.6" y="789" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="830.56" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;3600l, 1l&gt;, void&gt; (14,250,000 samples, 0.02%)</title><rect x="505.8" y="405" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="508.79" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (9,750,000 samples, 0.01%)</title><rect x="847.1" y="741" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="850.10" y="751.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::reverse_iterator (14,250,000 samples, 0.02%)</title><rect x="653.6" y="789" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="656.60" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,250,000 samples, 0.01%)</title><rect x="686.3" y="645" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="689.26" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7,250,000 samples, 0.01%)</title><rect x="453.6" y="933" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="456.64" y="943.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;, char&gt;::formatter (7,000,000 samples, 0.01%)</title><rect x="362.1" y="597" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="365.12" y="607.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,250,000 samples, 0.01%)</title><rect x="1168.4" y="1093" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1171.38" y="1103.5" ></text>
</g>
<g >
<title>wake_up_q (20,750,000 samples, 0.03%)</title><rect x="439.8" y="1013" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="442.81" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (24,000,000 samples, 0.03%)</title><rect x="408.1" y="1125" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="411.14" y="1135.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;unsigned int&gt; (7,000,000 samples, 0.01%)</title><rect x="465.4" y="805" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="468.44" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (152,250,000 samples, 0.22%)</title><rect x="658.8" y="789" width="2.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="661.78" y="799.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void  (10,250,000 samples, 0.01%)</title><rect x="879.6" y="757" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="882.56" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (10,500,000 samples, 0.02%)</title><rect x="684.6" y="629" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="687.62" y="639.5" ></text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks (9,250,000 samples, 0.01%)</title><rect x="521.5" y="725" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="524.52" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (8,000,000 samples, 0.01%)</title><rect x="729.6" y="309" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="732.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (35,500,000 samples, 0.05%)</title><rect x="692.6" y="597" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="695.62" y="607.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9,500,000 samples, 0.01%)</title><rect x="31.7" y="1013" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="34.66" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned long&gt; (20,250,000 samples, 0.03%)</title><rect x="500.9" y="261" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="503.94" y="271.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (330,750,000 samples, 0.47%)</title><rect x="666.2" y="789" width="5.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="669.15" y="799.5" ></text>
</g>
<g >
<title>futex_wait (77,000,000 samples, 0.11%)</title><rect x="552.5" y="869" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="555.52" y="879.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state_base&lt;void  (85,000,000 samples, 0.12%)</title><rect x="874.8" y="565" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="877.83" y="575.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (8,000,000 samples, 0.01%)</title><rect x="352.6" y="261" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="355.61" y="271.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (6,000,000 samples, 0.01%)</title><rect x="409.6" y="1029" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="412.62" y="1039.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::packaged_task&lt;void  (227,500,000 samples, 0.33%)</title><rect x="542.6" y="997" width="3.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="545.61" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (220,750,000 samples, 0.32%)</title><rect x="873.2" y="757" width="3.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="876.21" y="767.5" ></text>
</g>
<g >
<title>std::source_location::line (19,750,000 samples, 0.03%)</title><rect x="832.6" y="853" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="835.61" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;ankerl::nanobench::BigO, std::allocator&lt;ankerl::nanobench::BigO&gt; &gt;::emplace_back&lt;char const  (16,250,000 samples, 0.02%)</title><rect x="438.9" y="1125" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="441.91" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (210,750,000 samples, 0.30%)</title><rect x="426.1" y="1109" width="3.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="429.09" y="1119.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (33,000,000 samples, 0.05%)</title><rect x="548.3" y="949" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="551.27" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (17,250,000 samples, 0.02%)</title><rect x="508.6" y="437" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="511.60" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (14,000,000 samples, 0.02%)</title><rect x="322.7" y="549" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="325.72" y="559.5" ></text>
</g>
<g >
<title>std::chrono::zoned_time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::time_zone const*&gt;::get_local_time (85,250,000 samples, 0.12%)</title><rect x="323.3" y="581" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="326.26" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (141,500,000 samples, 0.20%)</title><rect x="701.9" y="501" width="2.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="704.89" y="511.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::_M_overflow (66,500,000 samples, 0.10%)</title><rect x="315.0" y="709" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="317.96" y="719.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (6,000,000 samples, 0.01%)</title><rect x="430.5" y="1109" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="433.50" y="1119.5" ></text>
</g>
<g >
<title>std::formatter&lt;unsigned int, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (125,750,000 samples, 0.18%)</title><rect x="822.9" y="709" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="825.94" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (19,750,000 samples, 0.03%)</title><rect x="489.6" y="261" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="492.64" y="271.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (57,500,000 samples, 0.08%)</title><rect x="535.2" y="885" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="538.20" y="895.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (7,500,000 samples, 0.01%)</title><rect x="807.6" y="389" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="810.60" y="399.5" ></text>
</g>
<g >
<title>current_time (21,000,000 samples, 0.03%)</title><rect x="43.7" y="997" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="46.70" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (13,000,000 samples, 0.02%)</title><rect x="390.8" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="393.75" y="1039.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;int&gt; (51,500,000 samples, 0.07%)</title><rect x="338.1" y="133" width="0.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="341.07" y="143.5" ></text>
</g>
<g >
<title>mark_wake_futex (40,500,000 samples, 0.06%)</title><rect x="560.2" y="853" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="563.23" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (6,000,000 samples, 0.01%)</title><rect x="412.5" y="1125" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="415.46" y="1135.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_on_chars (103,500,000 samples, 0.15%)</title><rect x="317.4" y="693" width="1.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="320.42" y="703.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (2,572,500,000 samples, 3.68%)</title><rect x="476.5" y="645" width="43.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="479.46" y="655.5" >std:..</text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (38,750,000 samples, 0.06%)</title><rect x="797.9" y="197" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="800.89" y="207.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;60l, 1l&gt;, void&gt; (11,750,000 samples, 0.02%)</title><rect x="505.2" y="405" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="508.20" y="415.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (15,000,000 samples, 0.02%)</title><rect x="556.5" y="853" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="559.46" y="863.5" ></text>
</g>
<g >
<title>std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::hh_mm_ss (125,250,000 samples, 0.18%)</title><rect x="504.3" y="437" width="2.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="507.27" y="447.5" ></text>
</g>
<g >
<title>std::chrono::time_zone::get_info&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (16,750,000 samples, 0.02%)</title><rect x="323.0" y="565" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="325.98" y="575.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::get (281,750,000 samples, 0.40%)</title><rect x="700.2" y="549" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="703.17" y="559.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (7,750,000 samples, 0.01%)</title><rect x="486.0" y="357" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="489.03" y="367.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (8,500,000 samples, 0.01%)</title><rect x="689.7" y="597" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="692.67" y="607.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&amp;&gt; (6,979,000,000 samples, 9.98%)</title><rect x="696.9" y="581" width="117.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="699.90" y="591.5" >std::format&lt;st..</text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (81,250,000 samples, 0.12%)</title><rect x="864.1" y="693" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="867.13" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (48,500,000 samples, 0.07%)</title><rect x="427.9" y="1093" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="430.90" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (56,000,000 samples, 0.08%)</title><rect x="31.6" y="1093" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.58" y="1103.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (1,066,250,000 samples, 1.52%)</title><rect x="851.5" y="853" width="18.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="854.49" y="863.5" ></text>
</g>
<g >
<title>std::function&lt;void  (94,750,000 samples, 0.14%)</title><rect x="880.5" y="885" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="883.52" y="895.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, char&gt;::format&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (6,000,000 samples, 0.01%)</title><rect x="825.5" y="725" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="828.47" y="735.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (62,250,000 samples, 0.09%)</title><rect x="535.2" y="901" width="1.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="538.18" y="911.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (61,250,000 samples, 0.09%)</title><rect x="819.1" y="677" width="1.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="822.07" y="687.5" ></text>
</g>
<g >
<title>try_to_wake_up (349,000,000 samples, 0.50%)</title><rect x="34.6" y="997" width="5.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="37.57" y="1007.5" ></text>
</g>
<g >
<title>std::basic_format_args&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::basic_format_args&lt;long long&gt; (27,000,000 samples, 0.04%)</title><rect x="507.9" y="453" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="510.90" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,500,000 samples, 0.01%)</title><rect x="415.3" y="1093" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="418.32" y="1103.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (82,750,000 samples, 0.12%)</title><rect x="862.4" y="677" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="865.40" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (82,000,000 samples, 0.12%)</title><rect x="834.4" y="869" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="837.37" y="879.5" ></text>
</g>
<g >
<title>wake_q_add_safe (6,750,000 samples, 0.01%)</title><rect x="165.4" y="1029" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="168.42" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (36,500,000 samples, 0.05%)</title><rect x="748.7" y="341" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="751.70" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (40,750,000 samples, 0.06%)</title><rect x="850.8" y="837" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="853.81" y="847.5" ></text>
</g>
<g >
<title>wake_up_q (9,250,000 samples, 0.01%)</title><rect x="439.0" y="1013" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="442.02" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (21,250,000 samples, 0.03%)</title><rect x="331.8" y="261" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="334.78" y="271.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::operator* (15,500,000 samples, 0.02%)</title><rect x="456.1" y="901" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="459.07" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,500,000 samples, 0.01%)</title><rect x="469.5" y="709" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="472.49" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (74,250,000 samples, 0.11%)</title><rect x="59.3" y="1109" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="62.27" y="1119.5" ></text>
</g>
<g >
<title>futex_wake (10,750,000 samples, 0.02%)</title><rect x="417.4" y="1029" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="420.45" y="1039.5" ></text>
</g>
<g >
<title>std::formatter&lt;std::chrono::__detail::__local_time_fmt&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char&gt;::parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (8,250,000 samples, 0.01%)</title><rect x="322.0" y="597" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="324.96" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&gt;&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (19,250,000 samples, 0.03%)</title><rect x="685.5" y="613" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="688.50" y="623.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (153,500,000 samples, 0.22%)</title><rect x="511.8" y="405" width="2.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="514.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, doctest::String&gt;, std::pair&lt;std::pair&lt;int, doctest::String&gt; const, doctest::IReporter*  (8,750,000 samples, 0.01%)</title><rect x="404.7" y="1125" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="407.68" y="1135.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;60l, 1l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;unsigned char, std::ratio&lt;60l, 1l&gt; &gt; (8,750,000 samples, 0.01%)</title><rect x="350.7" y="181" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="353.67" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13,750,000 samples, 0.02%)</title><rect x="327.1" y="453" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="330.13" y="463.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (24,000,000 samples, 0.03%)</title><rect x="374.7" y="597" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="377.71" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (6,000,000 samples, 0.01%)</title><rect x="547.5" y="933" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="550.52" y="943.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;unsigned char, std::ratio&lt;1l, 1l&gt;, void&gt; (14,500,000 samples, 0.02%)</title><rect x="751.3" y="341" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="754.26" y="351.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_do_parse (49,250,000 samples, 0.07%)</title><rect x="338.1" y="117" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="341.10" y="127.5" ></text>
</g>
<g >
<title>std::format&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&amp;&gt; (2,095,250,000 samples, 3.00%)</title><rect x="326.3" y="485" width="35.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="329.25" y="495.5" >st..</text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (157,750,000 samples, 0.23%)</title><rect x="344.9" y="181" width="2.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="347.90" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (29,000,000 samples, 0.04%)</title><rect x="532.6" y="853" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="535.63" y="863.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (7,250,000 samples, 0.01%)</title><rect x="318.7" y="629" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="321.67" y="639.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;60l, 1l&gt; &gt; (49,500,000 samples, 0.07%)</title><rect x="779.7" y="325" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="782.70" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;threadpool::ThreadPool::submit&lt;test (246,750,000 samples, 0.35%)</title><rect x="873.0" y="837" width="4.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="875.95" y="847.5" ></text>
</g>
<g >
<title>__legitimize_path (70,250,000 samples, 0.10%)</title><rect x="19.4" y="949" width="1.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="22.41" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (24,000,000 samples, 0.03%)</title><rect x="143.5" y="1013" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="146.47" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (144,000,000 samples, 0.21%)</title><rect x="796.2" y="229" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="799.18" y="239.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (22,000,000 samples, 0.03%)</title><rect x="500.9" y="277" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="503.92" y="287.5" ></text>
</g>
<g >
<title>std::vformat[abi:cxx11] (336,250,000 samples, 0.48%)</title><rect x="353.4" y="261" width="5.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="356.41" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10&lt;unsigned int&gt; (31,500,000 samples, 0.05%)</title><rect x="824.5" y="645" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="827.46" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (8,750,000 samples, 0.01%)</title><rect x="787.3" y="309" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="790.33" y="319.5" ></text>
</g>
<g >
<title>std::_Bind&lt;test (4,101,500,000 samples, 5.86%)</title><rect x="309.2" y="869" width="69.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="312.18" y="879.5" >std::_B..</text>
</g>
<g >
<title>security_inode_readlink (6,250,000 samples, 0.01%)</title><rect x="43.1" y="1029" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="46.13" y="1039.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;test (130,000,000 samples, 0.19%)</title><rect x="543.3" y="869" width="2.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="546.26" y="879.5" ></text>
</g>
<g >
<title>plist_add (87,750,000 samples, 0.13%)</title><rect x="98.7" y="1013" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="101.73" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::unique_ptr (19,750,000 samples, 0.03%)</title><rect x="378.5" y="933" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="381.47" y="943.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (21,750,000 samples, 0.03%)</title><rect x="342.8" y="245" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="345.78" y="255.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;void&gt;::~__basic_future (26,500,000 samples, 0.04%)</title><rect x="448.3" y="997" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="451.27" y="1007.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (30,250,000 samples, 0.04%)</title><rect x="523.3" y="757" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="526.35" y="767.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_S&lt;std::chrono::hh_mm_ss&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (604,000,000 samples, 0.86%)</title><rect x="493.4" y="469" width="10.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="496.35" y="479.5" ></text>
</g>
<g >
<title>std::visit_format_arg&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (6,101,750,000 samples, 8.72%)</title><rect x="709.2" y="485" width="102.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="712.16" y="495.5" >std::visit_f..</text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (8,500,000 samples, 0.01%)</title><rect x="347.2" y="53" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="350.21" y="63.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned int&gt; (10,250,000 samples, 0.01%)</title><rect x="339.6" y="85" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="342.61" y="95.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (17,000,000 samples, 0.02%)</title><rect x="345.7" y="53" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="348.73" y="63.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (33,000,000 samples, 0.05%)</title><rect x="536.6" y="917" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="539.61" y="927.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (4,278,250,000 samples, 6.12%)</title><rect x="308.3" y="1029" width="72.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="311.25" y="1039.5" >std::__f..</text>
</g>
<g >
<title>std::reverse_iterator&lt;std::__format::_Arg_t const*&gt;::reverse_iterator (10,750,000 samples, 0.02%)</title><rect x="771.4" y="293" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="774.40" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (12,000,000 samples, 0.02%)</title><rect x="363.0" y="549" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="366.04" y="559.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (22,000,000 samples, 0.03%)</title><rect x="522.6" y="757" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="525.61" y="767.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (80,000,000 samples, 0.11%)</title><rect x="304.8" y="1125" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="307.83" y="1135.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::find (39,000,000 samples, 0.06%)</title><rect x="365.1" y="693" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="368.15" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,750,000 samples, 0.02%)</title><rect x="388.9" y="1077" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="391.85" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,500,000 samples, 0.02%)</title><rect x="389.9" y="1093" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="392.95" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::floor&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (16,750,000 samples, 0.02%)</title><rect x="468.1" y="725" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="471.11" y="735.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_List (13,500,000 samples, 0.02%)</title><rect x="77.7" y="1109" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="80.75" y="1119.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;::_M_ptr (7,250,000 samples, 0.01%)</title><rect x="379.5" y="917" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="382.54" y="927.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (39,500,000 samples, 0.06%)</title><rect x="707.5" y="517" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="710.53" y="527.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (26,500,000 samples, 0.04%)</title><rect x="494.1" y="421" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="497.11" y="431.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::subspan (6,500,000 samples, 0.01%)</title><rect x="824.1" y="629" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="827.06" y="639.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (6,000,000 samples, 0.01%)</title><rect x="476.4" y="645" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="479.36" y="655.5" ></text>
</g>
<g >
<title>std::__format::__do_vformat_to&lt;std::__format::_Sink_iter&lt;char&gt;, char, std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (361,500,000 samples, 0.52%)</title><rect x="371.7" y="757" width="6.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="374.69" y="767.5" ></text>
</g>
<g >
<title>std::chrono::sys_info::~sys_info (19,750,000 samples, 0.03%)</title><rect x="681.4" y="677" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="684.38" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char*, std::span&lt;char, 18446744073709551615ul&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="668.1" y="741" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="671.07" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (9,750,000 samples, 0.01%)</title><rect x="843.0" y="837" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="846.05" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;60l, 1l&gt;, void&gt; (7,250,000 samples, 0.01%)</title><rect x="506.2" y="405" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="509.21" y="415.5" ></text>
</g>
<g >
<title>ankerl::nanobench::templates::generateResultTag (6,250,000 samples, 0.01%)</title><rect x="386.9" y="1125" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="389.93" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (6,250,000 samples, 0.01%)</title><rect x="801.0" y="149" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="804.01" y="159.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::function&lt;void  (7,500,000 samples, 0.01%)</title><rect x="402.4" y="1125" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="405.39" y="1135.5" ></text>
</g>
<g >
<title>minilog::log_info&lt;&gt; (5,107,250,000 samples, 7.30%)</title><rect x="451.7" y="997" width="86.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="454.66" y="1007.5" >minilog::l..</text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_format_int&lt;std::__format::_Sink_iter&lt;char&gt; &gt; (49,250,000 samples, 0.07%)</title><rect x="346.3" y="101" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="349.26" y="111.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;3600l, 1l&gt; &gt; (9,000,000 samples, 0.01%)</title><rect x="351.2" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="354.21" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,750,000 samples, 0.01%)</title><rect x="668.6" y="725" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="671.62" y="735.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::basic_format_parse_context (6,000,000 samples, 0.01%)</title><rect x="510.6" y="389" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="513.61" y="399.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1109" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="443.52" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (31,500,000 samples, 0.05%)</title><rect x="696.3" y="581" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="699.34" y="591.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;char*&gt; (8,750,000 samples, 0.01%)</title><rect x="831.9" y="789" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="834.94" y="799.5" ></text>
</g>
<g >
<title>std::span&lt;char, 18446744073709551615ul&gt;::span&lt;256ul&gt; (13,500,000 samples, 0.02%)</title><rect x="742.0" y="341" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="745.03" y="351.5" ></text>
</g>
<g >
<title>std::locale::~locale (13,500,000 samples, 0.02%)</title><rect x="521.8" y="725" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="524.82" y="735.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::begin (6,250,000 samples, 0.01%)</title><rect x="364.7" y="693" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="367.68" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (11,500,000 samples, 0.02%)</title><rect x="534.0" y="901" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="537.03" y="911.5" ></text>
</g>
<g >
<title>std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (1,829,750,000 samples, 2.62%)</title><rect x="330.0" y="405" width="30.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="333.02" y="415.5" >st..</text>
</g>
<g >
<title>kmem_cache_free.part.0 (14,500,000 samples, 0.02%)</title><rect x="50.2" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="53.17" y="1023.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_locale&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt; (6,750,000 samples, 0.01%)</title><rect x="693.2" y="613" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="696.24" y="623.5" ></text>
</g>
<g >
<title>std::to_chars (22,750,000 samples, 0.03%)</title><rect x="500.9" y="293" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="503.91" y="303.5" ></text>
</g>
<g >
<title>std::basic_format_parse_context&lt;char&gt;::begin (10,500,000 samples, 0.02%)</title><rect x="826.0" y="757" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="828.96" y="767.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (19,500,000 samples, 0.03%)</title><rect x="528.1" y="965" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="531.07" y="975.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2,873,000,000 samples, 4.11%)</title><rect x="472.2" y="709" width="48.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="475.24" y="719.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (13,500,000 samples, 0.02%)</title><rect x="77.1" y="1077" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="80.07" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;3600l, 1l&gt; &gt;::count (12,750,000 samples, 0.02%)</title><rect x="779.3" y="261" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="782.27" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,750,000 samples, 0.02%)</title><rect x="440.5" y="1077" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="443.52" y="1087.5" ></text>
</g>
<g >
<title>std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::out (8,000,000 samples, 0.01%)</title><rect x="868.8" y="837" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="871.78" y="847.5" ></text>
</g>
<g >
<title>std::basic_format_arg&lt;std::basic_format_context&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; &gt;::_M_visit&lt;std::__format::_Formatting_scanner&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt;::_M_format_arg (3,593,500,000 samples, 5.14%)</title><rect x="464.4" y="837" width="60.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="467.40" y="847.5" >std::b..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,000,000 samples, 0.02%)</title><rect x="629.1" y="1141" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="632.14" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8,342,000,000 samples, 11.93%)</title><rect x="160.0" y="1077" width="140.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="163.00" y="1087.5" >__x64_sys_futex</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9,500,000 samples, 0.01%)</title><rect x="776.2" y="325" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="779.24" y="335.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_on_replacement_field (212,000,000 samples, 0.30%)</title><rect x="373.5" y="725" width="3.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="376.54" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (21,750,000 samples, 0.03%)</title><rect x="467.6" y="741" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="470.63" y="751.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (7,250,000 samples, 0.01%)</title><rect x="329.0" y="453" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="331.99" y="463.5" ></text>
</g>
<g >
<title>wake_up_q (3,933,250,000 samples, 5.62%)</title><rect x="561.0" y="853" width="66.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="563.96" y="863.5" >wake_up_q</text>
</g>
<g >
<title>std::__detail::__extent_storage&lt;18446744073709551615ul&gt;::_M_extent (6,750,000 samples, 0.01%)</title><rect x="857.2" y="757" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="860.16" y="767.5" ></text>
</g>
<g >
<title>std::__format::_Scanner&lt;char&gt;::_M_fmt_str (15,750,000 samples, 0.02%)</title><rect x="477.3" y="613" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="480.35" y="623.5" ></text>
</g>
<g >
<title>std::__to_chars_i&lt;unsigned long long&gt; (6,500,000 samples, 0.01%)</title><rect x="358.2" y="85" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="361.16" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_futex (94,750,000 samples, 0.14%)</title><rect x="552.2" y="901" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="555.22" y="911.5" ></text>
</g>
<g >
<title>std::__format::__formatter_chrono&lt;char&gt;::_M_parse&lt;std::basic_format_parse_context&lt;char&gt; &gt; (15,500,000 samples, 0.02%)</title><rect x="810.1" y="389" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="813.13" y="399.5" ></text>
</g>
<g >
<title>__GI___readlink (799,250,000 samples, 1.14%)</title><rect x="41.1" y="1109" width="13.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="44.11" y="1119.5" ></text>
</g>
<g >
<title>std::__format::_Seq_sink&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~_Seq_sink (19,500,000 samples, 0.03%)</title><rect x="727.5" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="730.45" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::packaged_task&lt;void  (10,750,000 samples, 0.02%)</title><rect x="876.9" y="757" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="879.93" y="767.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::copy (10,250,000 samples, 0.01%)</title><rect x="730.5" y="261" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="733.47" y="271.5" ></text>
</g>
<g >
<title>__get_user_8 (24,000,000 samples, 0.03%)</title><rect x="32.1" y="1013" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="35.09" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (14,250,000 samples, 0.02%)</title><rect x="1185.8" y="1109" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1188.84" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__extent_storage&lt;18446744073709551615ul&gt;::_M_extent (7,500,000 samples, 0.01%)</title><rect x="857.6" y="741" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="860.65" y="751.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7,000,000 samples, 0.01%)</title><rect x="685.4" y="613" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="688.38" y="623.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (85,500,000 samples, 0.12%)</title><rect x="460.5" y="869" width="1.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="463.55" y="879.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (7,250,000 samples, 0.01%)</title><rect x="435.3" y="1093" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="438.35" y="1103.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (9,500,000 samples, 0.01%)</title><rect x="959.7" y="853" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="962.75" y="863.5" ></text>
</g>
<g >
<title>std::locale::operator= (49,750,000 samples, 0.07%)</title><rect x="85.8" y="1109" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="88.85" y="1119.5" ></text>
</g>
<g >
<title>__memchr_avx2 (12,000,000 samples, 0.02%)</title><rect x="812.8" y="501" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="815.84" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,500,000 samples, 0.01%)</title><rect x="712.6" y="373" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="715.58" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9,750,000 samples, 0.01%)</title><rect x="681.8" y="661" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="684.80" y="671.5" ></text>
</g>
<g >
<title>std::__format::__write&lt;std::__format::_Sink_iter&lt;char&gt;, char&gt; (21,750,000 samples, 0.03%)</title><rect x="355.5" y="197" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="358.52" y="207.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;long long, std::__format::_Sink_iter&lt;char&gt; &gt; (234,000,000 samples, 0.33%)</title><rect x="762.7" y="213" width="4.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="765.74" y="223.5" ></text>
</g>
<g >
<title>std::__format::_Sink&lt;char&gt;::_M_write (20,500,000 samples, 0.03%)</title><rect x="374.7" y="581" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="377.73" y="591.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::_M_parse&lt;long long&gt; (52,750,000 samples, 0.08%)</title><rect x="512.3" y="325" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="515.32" y="335.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;void&gt;::~_Result (18,500,000 samples, 0.03%)</title><rect x="875.7" y="485" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="878.65" y="495.5" ></text>
</g>
<g >
<title>std::array&lt;std::__format::_Arg_t, 1ul&gt;::rend (15,250,000 samples, 0.02%)</title><rect x="837.7" y="837" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="840.72" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (8,250,000 samples, 0.01%)</title><rect x="778.7" y="309" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="781.69" y="319.5" ></text>
</g>
<g >
<title>std::locale::~locale (47,000,000 samples, 0.07%)</title><rect x="86.7" y="1109" width="0.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="89.69" y="1119.5" ></text>
</g>
<g >
<title>std::__format::__formatter_str&lt;char&gt;::parse (7,750,000 samples, 0.01%)</title><rect x="465.7" y="789" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="468.69" y="799.5" ></text>
</g>
<g >
<title>std::chrono::local_time_format&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (9,000,000 samples, 0.01%)</title><rect x="681.2" y="677" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="684.23" y="687.5" ></text>
</g>
<g >
<title>std::__format::__formatter_int&lt;char&gt;::format&lt;char, std::__format::_Sink_iter&lt;char&gt; &gt; (40,250,000 samples, 0.06%)</title><rect x="498.7" y="309" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="501.66" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__from_chars_alnum&lt;true, unsigned short&gt; (16,750,000 samples, 0.02%)</title><rect x="797.3" y="149" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="800.26" y="159.5" ></text>
</g>
</g>
</svg>
