# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: submodule
      working-directory: ${{github.workspace}}
      shell: bash
      run:  |
        git submodule init && git submodule update
    - name: Environment
      working-directory: ${{github.workspace}}/build
      shell: bash
      run:  |
        apt install libboost-dev binutils-dev libdwarf-dev libdwarf-dev
    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}
      shell: bash
      run:  |
        ./build.sh
    - name: Test
      working-directory: ${{github.workspace}}/build/test
      shell: bash
      run:  |
        ./queue_test && ./function_test && combine_unit_test && threadpool_test


